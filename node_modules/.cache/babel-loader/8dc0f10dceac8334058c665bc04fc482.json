{"ast":null,"code":"var getTimeStamp = require('@uppy/utils/lib/getTimeStamp'); // Swallow all logs, except errors.\n// default if logger is not set or debug: false\n\nvar justErrorsLogger = {\n  debug: function debug() {},\n  warn: function warn() {},\n  error: function error() {\n    var _console;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return (_console = console).error.apply(_console, [\"[Uppy] [\" + getTimeStamp() + \"]\"].concat(args));\n  }\n}; // Print logs to console with namespace + timestamp,\n// set by logger: Uppy.debugLogger or debug: true\n\nvar debugLogger = {\n  debug: function debug() {\n    // IE 10 doesn’t support console.debug\n    var debug = console.debug || console.log;\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    debug.call.apply(debug, [console, \"[Uppy] [\" + getTimeStamp() + \"]\"].concat(args));\n  },\n  warn: function warn() {\n    var _console2;\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    return (_console2 = console).warn.apply(_console2, [\"[Uppy] [\" + getTimeStamp() + \"]\"].concat(args));\n  },\n  error: function error() {\n    var _console3;\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    return (_console3 = console).error.apply(_console3, [\"[Uppy] [\" + getTimeStamp() + \"]\"].concat(args));\n  }\n};\nmodule.exports = {\n  justErrorsLogger: justErrorsLogger,\n  debugLogger: debugLogger\n};","map":{"version":3,"names":["getTimeStamp","require","justErrorsLogger","debug","warn","error","_console","_len","arguments","length","args","Array","_key","console","apply","concat","debugLogger","log","_len2","_key2","call","_console2","_len3","_key3","_console3","_len4","_key4","module","exports"],"sources":["E:/integrate cloud/uppy/node_modules/@uppy/core/lib/loggers.js"],"sourcesContent":["var getTimeStamp = require('@uppy/utils/lib/getTimeStamp'); // Swallow all logs, except errors.\n// default if logger is not set or debug: false\n\n\nvar justErrorsLogger = {\n  debug: function debug() {},\n  warn: function warn() {},\n  error: function error() {\n    var _console;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return (_console = console).error.apply(_console, [\"[Uppy] [\" + getTimeStamp() + \"]\"].concat(args));\n  }\n}; // Print logs to console with namespace + timestamp,\n// set by logger: Uppy.debugLogger or debug: true\n\nvar debugLogger = {\n  debug: function debug() {\n    // IE 10 doesn’t support console.debug\n    var debug = console.debug || console.log;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    debug.call.apply(debug, [console, \"[Uppy] [\" + getTimeStamp() + \"]\"].concat(args));\n  },\n  warn: function warn() {\n    var _console2;\n\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return (_console2 = console).warn.apply(_console2, [\"[Uppy] [\" + getTimeStamp() + \"]\"].concat(args));\n  },\n  error: function error() {\n    var _console3;\n\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return (_console3 = console).error.apply(_console3, [\"[Uppy] [\" + getTimeStamp() + \"]\"].concat(args));\n  }\n};\nmodule.exports = {\n  justErrorsLogger: justErrorsLogger,\n  debugLogger: debugLogger\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}