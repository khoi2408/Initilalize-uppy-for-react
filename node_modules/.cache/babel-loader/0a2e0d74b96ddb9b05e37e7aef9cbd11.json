{"ast":null,"code":"var _require = require('preact'),\n  h = _require.h;\nvar uploadStates = {\n  STATE_ERROR: 'error',\n  STATE_WAITING: 'waiting',\n  STATE_PREPROCESSING: 'preprocessing',\n  STATE_UPLOADING: 'uploading',\n  STATE_POSTPROCESSING: 'postprocessing',\n  STATE_COMPLETE: 'complete',\n  STATE_PAUSED: 'paused'\n};\nfunction getUploadingState(isAllErrored, isAllComplete, isAllPaused, files) {\n  if (files === void 0) {\n    files = {};\n  }\n  if (isAllErrored) {\n    return uploadStates.STATE_ERROR;\n  }\n  if (isAllComplete) {\n    return uploadStates.STATE_COMPLETE;\n  }\n  if (isAllPaused) {\n    return uploadStates.STATE_PAUSED;\n  }\n  var state = uploadStates.STATE_WAITING;\n  var fileIDs = Object.keys(files);\n  for (var i = 0; i < fileIDs.length; i++) {\n    var progress = files[fileIDs[i]].progress; // If ANY files are being uploaded right now, show the uploading state.\n\n    if (progress.uploadStarted && !progress.uploadComplete) {\n      return uploadStates.STATE_UPLOADING;\n    } // If files are being preprocessed AND postprocessed at this time, we show the\n    // preprocess state. If any files are being uploaded we show uploading.\n\n    if (progress.preprocess && state !== uploadStates.STATE_UPLOADING) {\n      state = uploadStates.STATE_PREPROCESSING;\n    } // If NO files are being preprocessed or uploaded right now, but some files are\n    // being postprocessed, show the postprocess state.\n\n    if (progress.postprocess && state !== uploadStates.STATE_UPLOADING && state !== uploadStates.STATE_PREPROCESSING) {\n      state = uploadStates.STATE_POSTPROCESSING;\n    }\n  }\n  return state;\n}\nfunction UploadStatus(props) {\n  var uploadingState = getUploadingState(props.isAllErrored, props.isAllComplete, props.isAllPaused, props.files);\n  switch (uploadingState) {\n    case 'uploading':\n      return props.i18n('uploadingXFiles', {\n        smart_count: props.inProgressNotPausedFiles.length\n      });\n    case 'preprocessing':\n    case 'postprocessing':\n      return props.i18n('processingXFiles', {\n        smart_count: props.processingFiles.length\n      });\n    case 'paused':\n      return props.i18n('uploadPaused');\n    case 'waiting':\n      return props.i18n('xFilesSelected', {\n        smart_count: props.newFiles.length\n      });\n    case 'complete':\n      return props.i18n('uploadComplete');\n  }\n}\nfunction PanelTopBar(props) {\n  var allowNewUpload = props.allowNewUpload; // TODO maybe this should be done in ../index.js, then just pass that down as `allowNewUpload`\n\n  if (allowNewUpload && props.maxNumberOfFiles) {\n    allowNewUpload = props.totalFileCount < props.maxNumberOfFiles;\n  }\n  return h(\"div\", {\n    className: \"uppy-DashboardContent-bar\"\n  }, !props.isAllComplete && !props.hideCancelButton ? h(\"button\", {\n    className: \"uppy-DashboardContent-back\",\n    type: \"button\",\n    onClick: props.cancelAll\n  }, props.i18n('cancel')) : h(\"div\", null), h(\"div\", {\n    className: \"uppy-DashboardContent-title\",\n    role: \"heading\",\n    \"aria-level\": \"1\"\n  }, h(UploadStatus, props)), allowNewUpload ? h(\"button\", {\n    className: \"uppy-DashboardContent-addMore\",\n    type: \"button\",\n    \"aria-label\": props.i18n('addMoreFiles'),\n    title: props.i18n('addMoreFiles'),\n    onClick: function onClick() {\n      return props.toggleAddFilesPanel(true);\n    }\n  }, h(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    className: \"uppy-c-icon\",\n    width: \"15\",\n    height: \"15\",\n    viewBox: \"0 0 15 15\"\n  }, h(\"path\", {\n    d: \"M8 6.5h6a.5.5 0 0 1 .5.5v.5a.5.5 0 0 1-.5.5H8v6a.5.5 0 0 1-.5.5H7a.5.5 0 0 1-.5-.5V8h-6a.5.5 0 0 1-.5-.5V7a.5.5 0 0 1 .5-.5h6v-6A.5.5 0 0 1 7 0h.5a.5.5 0 0 1 .5.5v6z\"\n  })), h(\"span\", {\n    className: \"uppy-DashboardContent-addMoreCaption\"\n  }, props.i18n('addMore'))) : h(\"div\", null));\n}\nmodule.exports = PanelTopBar;","map":{"version":3,"names":["_require","require","h","uploadStates","STATE_ERROR","STATE_WAITING","STATE_PREPROCESSING","STATE_UPLOADING","STATE_POSTPROCESSING","STATE_COMPLETE","STATE_PAUSED","getUploadingState","isAllErrored","isAllComplete","isAllPaused","files","state","fileIDs","Object","keys","i","length","progress","uploadStarted","uploadComplete","preprocess","postprocess","UploadStatus","props","uploadingState","i18n","smart_count","inProgressNotPausedFiles","processingFiles","newFiles","PanelTopBar","allowNewUpload","maxNumberOfFiles","totalFileCount","className","hideCancelButton","type","onClick","cancelAll","role","title","toggleAddFilesPanel","focusable","width","height","viewBox","d","module","exports"],"sources":["E:/integrate cloud/uppy/node_modules/@uppy/dashboard/lib/components/PickerPanelTopBar.js"],"sourcesContent":["var _require = require('preact'),\n    h = _require.h;\n\nvar uploadStates = {\n  STATE_ERROR: 'error',\n  STATE_WAITING: 'waiting',\n  STATE_PREPROCESSING: 'preprocessing',\n  STATE_UPLOADING: 'uploading',\n  STATE_POSTPROCESSING: 'postprocessing',\n  STATE_COMPLETE: 'complete',\n  STATE_PAUSED: 'paused'\n};\n\nfunction getUploadingState(isAllErrored, isAllComplete, isAllPaused, files) {\n  if (files === void 0) {\n    files = {};\n  }\n\n  if (isAllErrored) {\n    return uploadStates.STATE_ERROR;\n  }\n\n  if (isAllComplete) {\n    return uploadStates.STATE_COMPLETE;\n  }\n\n  if (isAllPaused) {\n    return uploadStates.STATE_PAUSED;\n  }\n\n  var state = uploadStates.STATE_WAITING;\n  var fileIDs = Object.keys(files);\n\n  for (var i = 0; i < fileIDs.length; i++) {\n    var progress = files[fileIDs[i]].progress; // If ANY files are being uploaded right now, show the uploading state.\n\n    if (progress.uploadStarted && !progress.uploadComplete) {\n      return uploadStates.STATE_UPLOADING;\n    } // If files are being preprocessed AND postprocessed at this time, we show the\n    // preprocess state. If any files are being uploaded we show uploading.\n\n\n    if (progress.preprocess && state !== uploadStates.STATE_UPLOADING) {\n      state = uploadStates.STATE_PREPROCESSING;\n    } // If NO files are being preprocessed or uploaded right now, but some files are\n    // being postprocessed, show the postprocess state.\n\n\n    if (progress.postprocess && state !== uploadStates.STATE_UPLOADING && state !== uploadStates.STATE_PREPROCESSING) {\n      state = uploadStates.STATE_POSTPROCESSING;\n    }\n  }\n\n  return state;\n}\n\nfunction UploadStatus(props) {\n  var uploadingState = getUploadingState(props.isAllErrored, props.isAllComplete, props.isAllPaused, props.files);\n\n  switch (uploadingState) {\n    case 'uploading':\n      return props.i18n('uploadingXFiles', {\n        smart_count: props.inProgressNotPausedFiles.length\n      });\n\n    case 'preprocessing':\n    case 'postprocessing':\n      return props.i18n('processingXFiles', {\n        smart_count: props.processingFiles.length\n      });\n\n    case 'paused':\n      return props.i18n('uploadPaused');\n\n    case 'waiting':\n      return props.i18n('xFilesSelected', {\n        smart_count: props.newFiles.length\n      });\n\n    case 'complete':\n      return props.i18n('uploadComplete');\n  }\n}\n\nfunction PanelTopBar(props) {\n  var allowNewUpload = props.allowNewUpload; // TODO maybe this should be done in ../index.js, then just pass that down as `allowNewUpload`\n\n  if (allowNewUpload && props.maxNumberOfFiles) {\n    allowNewUpload = props.totalFileCount < props.maxNumberOfFiles;\n  }\n\n  return h(\"div\", {\n    className: \"uppy-DashboardContent-bar\"\n  }, !props.isAllComplete && !props.hideCancelButton ? h(\"button\", {\n    className: \"uppy-DashboardContent-back\",\n    type: \"button\",\n    onClick: props.cancelAll\n  }, props.i18n('cancel')) : h(\"div\", null), h(\"div\", {\n    className: \"uppy-DashboardContent-title\",\n    role: \"heading\",\n    \"aria-level\": \"1\"\n  }, h(UploadStatus, props)), allowNewUpload ? h(\"button\", {\n    className: \"uppy-DashboardContent-addMore\",\n    type: \"button\",\n    \"aria-label\": props.i18n('addMoreFiles'),\n    title: props.i18n('addMoreFiles'),\n    onClick: function onClick() {\n      return props.toggleAddFilesPanel(true);\n    }\n  }, h(\"svg\", {\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    className: \"uppy-c-icon\",\n    width: \"15\",\n    height: \"15\",\n    viewBox: \"0 0 15 15\"\n  }, h(\"path\", {\n    d: \"M8 6.5h6a.5.5 0 0 1 .5.5v.5a.5.5 0 0 1-.5.5H8v6a.5.5 0 0 1-.5.5H7a.5.5 0 0 1-.5-.5V8h-6a.5.5 0 0 1-.5-.5V7a.5.5 0 0 1 .5-.5h6v-6A.5.5 0 0 1 7 0h.5a.5.5 0 0 1 .5.5v6z\"\n  })), h(\"span\", {\n    className: \"uppy-DashboardContent-addMoreCaption\"\n  }, props.i18n('addMore'))) : h(\"div\", null));\n}\n\nmodule.exports = PanelTopBar;"],"mappings":"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"},"metadata":{},"sourceType":"script"}