{"ast":null,"code":"function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nvar _require = require('@uppy/provider-views'),\n  ProviderViews = _require.ProviderViews;\nmodule.exports = /*#__PURE__*/function (_ProviderViews) {\n  _inheritsLoose(DriveProviderViews, _ProviderViews);\n  function DriveProviderViews() {\n    return _ProviderViews.apply(this, arguments) || this;\n  }\n  var _proto = DriveProviderViews.prototype;\n  _proto.toggleCheckbox = function toggleCheckbox(e, file) {\n    e.stopPropagation();\n    e.preventDefault(); // Shared Drives aren't selectable; for all else, defer to the base ProviderView.\n    // @todo isTeamDrive is left for backward compatibility. We should remove it in the next\n    // major release.\n\n    if (!file.custom.isTeamDrive && !file.custom.isSharedDrive) {\n      _ProviderViews.prototype.toggleCheckbox.call(this, e, file);\n    }\n  };\n  return DriveProviderViews;\n}(ProviderViews);","map":{"version":3,"names":["_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_require","require","ProviderViews","module","exports","_ProviderViews","DriveProviderViews","apply","arguments","_proto","toggleCheckbox","e","file","stopPropagation","preventDefault","custom","isTeamDrive","isSharedDrive","call"],"sources":["E:/integrate cloud/uppy/node_modules/@uppy/google-drive/lib/DriveProviderViews.js"],"sourcesContent":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar _require = require('@uppy/provider-views'),\n    ProviderViews = _require.ProviderViews;\n\nmodule.exports = /*#__PURE__*/function (_ProviderViews) {\n  _inheritsLoose(DriveProviderViews, _ProviderViews);\n\n  function DriveProviderViews() {\n    return _ProviderViews.apply(this, arguments) || this;\n  }\n\n  var _proto = DriveProviderViews.prototype;\n\n  _proto.toggleCheckbox = function toggleCheckbox(e, file) {\n    e.stopPropagation();\n    e.preventDefault(); // Shared Drives aren't selectable; for all else, defer to the base ProviderView.\n    // @todo isTeamDrive is left for backward compatibility. We should remove it in the next\n    // major release.\n\n    if (!file.custom.isTeamDrive && !file.custom.isSharedDrive) {\n      _ProviderViews.prototype.toggleCheckbox.call(this, e, file);\n    }\n  };\n\n  return DriveProviderViews;\n}(ProviderViews);"],"mappings":"AAAA,SAASA,cAAcA,CAACC,QAAQ,EAAEC,UAAU,EAAE;EAAED,QAAQ,CAACE,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACH,UAAU,CAACC,SAAS,CAAC;EAAEF,QAAQ,CAACE,SAAS,CAACG,WAAW,GAAGL,QAAQ;EAAEM,eAAe,CAACN,QAAQ,EAAEC,UAAU,CAAC;AAAE;AAE5L,SAASK,eAAeA,CAACC,CAAC,EAAEC,CAAC,EAAE;EAAEF,eAAe,GAAGH,MAAM,CAACM,cAAc,IAAI,SAASH,eAAeA,CAACC,CAAC,EAAEC,CAAC,EAAE;IAAED,CAAC,CAACG,SAAS,GAAGF,CAAC;IAAE,OAAOD,CAAC;EAAE,CAAC;EAAE,OAAOD,eAAe,CAACC,CAAC,EAAEC,CAAC,CAAC;AAAE;AAEzK,IAAIG,QAAQ,GAAGC,OAAO,CAAC,sBAAsB,CAAC;EAC1CC,aAAa,GAAGF,QAAQ,CAACE,aAAa;AAE1CC,MAAM,CAACC,OAAO,GAAG,aAAa,UAAUC,cAAc,EAAE;EACtDjB,cAAc,CAACkB,kBAAkB,EAAED,cAAc,CAAC;EAElD,SAASC,kBAAkBA,CAAA,EAAG;IAC5B,OAAOD,cAAc,CAACE,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,IAAI,IAAI;EACtD;EAEA,IAAIC,MAAM,GAAGH,kBAAkB,CAACf,SAAS;EAEzCkB,MAAM,CAACC,cAAc,GAAG,SAASA,cAAcA,CAACC,CAAC,EAAEC,IAAI,EAAE;IACvDD,CAAC,CAACE,eAAe,EAAE;IACnBF,CAAC,CAACG,cAAc,EAAE,CAAC,CAAC;IACpB;IACA;;IAEA,IAAI,CAACF,IAAI,CAACG,MAAM,CAACC,WAAW,IAAI,CAACJ,IAAI,CAACG,MAAM,CAACE,aAAa,EAAE;MAC1DZ,cAAc,CAACd,SAAS,CAACmB,cAAc,CAACQ,IAAI,CAAC,IAAI,EAAEP,CAAC,EAAEC,IAAI,CAAC;IAC7D;EACF,CAAC;EAED,OAAON,kBAAkB;AAC3B,CAAC,CAACJ,aAAa,CAAC"},"metadata":{},"sourceType":"script"}