{"ast":null,"code":"var tus = require('tus-js-client');\nfunction isCordova() {\n  return typeof window !== 'undefined' && (typeof window.PhoneGap !== 'undefined' || typeof window.Cordova !== 'undefined' || typeof window.cordova !== 'undefined');\n}\nfunction isReactNative() {\n  return typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative';\n} // We override tus fingerprint to uppy’s `file.id`, since the `file.id`\n// now also includes `relativePath` for files added from folders.\n// This means you can add 2 identical files, if one is in folder a,\n// the other in folder b — `a/file.jpg` and `b/file.jpg`, when added\n// together with a folder, will be treated as 2 separate files.\n//\n// For React Native and Cordova, we let tus-js-client’s default\n// fingerprint handling take charge.\n\nmodule.exports = function getFingerprint(uppyFileObj) {\n  return function (file, options) {\n    if (isCordova() || isReactNative()) {\n      return tus.defaultOptions.fingerprint(file, options);\n    }\n    var uppyFingerprint = ['tus', uppyFileObj.id, options.endpoint].join('-');\n    return Promise.resolve(uppyFingerprint);\n  };\n};","map":{"version":3,"names":["tus","require","isCordova","window","PhoneGap","Cordova","cordova","isReactNative","navigator","product","toLowerCase","module","exports","getFingerprint","uppyFileObj","file","options","defaultOptions","fingerprint","uppyFingerprint","id","endpoint","join","Promise","resolve"],"sources":["E:/integrate cloud/uppy/node_modules/@uppy/tus/lib/getFingerprint.js"],"sourcesContent":["var tus = require('tus-js-client');\n\nfunction isCordova() {\n  return typeof window !== 'undefined' && (typeof window.PhoneGap !== 'undefined' || typeof window.Cordova !== 'undefined' || typeof window.cordova !== 'undefined');\n}\n\nfunction isReactNative() {\n  return typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative';\n} // We override tus fingerprint to uppy’s `file.id`, since the `file.id`\n// now also includes `relativePath` for files added from folders.\n// This means you can add 2 identical files, if one is in folder a,\n// the other in folder b — `a/file.jpg` and `b/file.jpg`, when added\n// together with a folder, will be treated as 2 separate files.\n//\n// For React Native and Cordova, we let tus-js-client’s default\n// fingerprint handling take charge.\n\n\nmodule.exports = function getFingerprint(uppyFileObj) {\n  return function (file, options) {\n    if (isCordova() || isReactNative()) {\n      return tus.defaultOptions.fingerprint(file, options);\n    }\n\n    var uppyFingerprint = ['tus', uppyFileObj.id, options.endpoint].join('-');\n    return Promise.resolve(uppyFingerprint);\n  };\n};"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,eAAe,CAAC;AAElC,SAASC,SAASA,CAAA,EAAG;EACnB,OAAO,OAAOC,MAAM,KAAK,WAAW,KAAK,OAAOA,MAAM,CAACC,QAAQ,KAAK,WAAW,IAAI,OAAOD,MAAM,CAACE,OAAO,KAAK,WAAW,IAAI,OAAOF,MAAM,CAACG,OAAO,KAAK,WAAW,CAAC;AACpK;AAEA,SAASC,aAAaA,CAAA,EAAG;EACvB,OAAO,OAAOC,SAAS,KAAK,WAAW,IAAI,OAAOA,SAAS,CAACC,OAAO,KAAK,QAAQ,IAAID,SAAS,CAACC,OAAO,CAACC,WAAW,EAAE,KAAK,aAAa;AACvI,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAGAC,MAAM,CAACC,OAAO,GAAG,SAASC,cAAcA,CAACC,WAAW,EAAE;EACpD,OAAO,UAAUC,IAAI,EAAEC,OAAO,EAAE;IAC9B,IAAId,SAAS,EAAE,IAAIK,aAAa,EAAE,EAAE;MAClC,OAAOP,GAAG,CAACiB,cAAc,CAACC,WAAW,CAACH,IAAI,EAAEC,OAAO,CAAC;IACtD;IAEA,IAAIG,eAAe,GAAG,CAAC,KAAK,EAAEL,WAAW,CAACM,EAAE,EAAEJ,OAAO,CAACK,QAAQ,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;IACzE,OAAOC,OAAO,CAACC,OAAO,CAACL,eAAe,CAAC;EACzC,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script"}