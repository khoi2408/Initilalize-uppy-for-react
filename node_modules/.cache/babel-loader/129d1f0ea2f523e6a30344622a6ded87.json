{"ast":null,"code":"import _toConsumableArray from \"E:/integrate cloud/uppy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"E:/integrate cloud/uppy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"E:/integrate cloud/uppy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"E:/integrate cloud/uppy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport remoteFileObjToLocal from '@uppy/utils/lib/remoteFileObjToLocal';\nvar SharedHandler = /*#__PURE__*/function () {\n  function SharedHandler(plugin) {\n    _classCallCheck(this, SharedHandler);\n    this.plugin = plugin;\n    this.filterItems = this.filterItems.bind(this);\n    this.toggleCheckbox = this.toggleCheckbox.bind(this);\n    this.recordShiftKeyPress = this.recordShiftKeyPress.bind(this);\n    this.isChecked = this.isChecked.bind(this);\n    this.loaderWrapper = this.loaderWrapper.bind(this);\n  }\n  _createClass(SharedHandler, [{\n    key: \"filterItems\",\n    value: function filterItems(items) {\n      var state = this.plugin.getPluginState();\n      if (!state.filterInput || state.filterInput === '') {\n        return items;\n      }\n      return items.filter(function (folder) {\n        return folder.name.toLowerCase().indexOf(state.filterInput.toLowerCase()) !== -1;\n      });\n    }\n  }, {\n    key: \"recordShiftKeyPress\",\n    value: function recordShiftKeyPress(e) {\n      this.isShiftKeyPressed = e.shiftKey;\n    }\n    /**\n     * Toggles file/folder checkbox to on/off state while updating files list.\n     *\n     * Note that some extra complexity comes from supporting shift+click to\n     * toggle multiple checkboxes at once, which is done by getting all files\n     * in between last checked file and current one.\n     */\n  }, {\n    key: \"toggleCheckbox\",\n    value: function toggleCheckbox(e, file) {\n      e.stopPropagation();\n      e.preventDefault();\n      e.currentTarget.focus();\n      var _this$plugin$getPlugi = this.plugin.getPluginState(),\n        folders = _this$plugin$getPlugi.folders,\n        files = _this$plugin$getPlugi.files;\n      var items = this.filterItems(folders.concat(files)); // Shift-clicking selects a single consecutive list of items\n      // starting at the previous click and deselects everything else.\n\n      if (this.lastCheckbox && this.isShiftKeyPressed) {\n        var prevIndex = items.indexOf(this.lastCheckbox);\n        var currentIndex = items.indexOf(file);\n        var _currentSelection = prevIndex < currentIndex ? items.slice(prevIndex, currentIndex + 1) : items.slice(currentIndex, prevIndex + 1);\n        var reducedCurrentSelection = []; // Check restrictions on each file in currentSelection,\n        // reduce it to only contain files that pass restrictions\n        var _iterator = _createForOfIteratorHelper(_currentSelection),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var item = _step.value;\n            var uppy = this.plugin.uppy;\n            var restrictionError = uppy.validateRestrictions(remoteFileObjToLocal(item), [].concat(_toConsumableArray(uppy.getFiles()), reducedCurrentSelection));\n            if (!restrictionError) {\n              reducedCurrentSelection.push(item);\n            } else {\n              uppy.info({\n                message: restrictionError.message\n              }, 'error', uppy.opts.infoTimeout);\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        this.plugin.setPluginState({\n          currentSelection: reducedCurrentSelection\n        });\n        return;\n      }\n      this.lastCheckbox = file;\n      var _this$plugin$getPlugi2 = this.plugin.getPluginState(),\n        currentSelection = _this$plugin$getPlugi2.currentSelection;\n      if (this.isChecked(file)) {\n        this.plugin.setPluginState({\n          currentSelection: currentSelection.filter(function (item) {\n            return item.id !== file.id;\n          })\n        });\n      } else {\n        this.plugin.setPluginState({\n          currentSelection: currentSelection.concat([file])\n        });\n      }\n    }\n  }, {\n    key: \"isChecked\",\n    value: function isChecked(file) {\n      var _this$plugin$getPlugi3 = this.plugin.getPluginState(),\n        currentSelection = _this$plugin$getPlugi3.currentSelection; // comparing id instead of the file object, because the reference to the object\n      // changes when we switch folders, and the file list is updated\n\n      return currentSelection.some(function (item) {\n        return item.id === file.id;\n      });\n    }\n  }, {\n    key: \"loaderWrapper\",\n    value: function loaderWrapper(promise, then, catch_) {\n      var _this = this;\n      promise.then(function (result) {\n        _this.plugin.setPluginState({\n          loading: false\n        });\n        then(result);\n      }).catch(function (err) {\n        _this.plugin.setPluginState({\n          loading: false\n        });\n        catch_(err);\n      });\n      this.plugin.setPluginState({\n        loading: true\n      });\n    }\n  }]);\n  return SharedHandler;\n}();\nexport { SharedHandler as default };","map":{"version":3,"names":["remoteFileObjToLocal","SharedHandler","plugin","_classCallCheck","filterItems","bind","toggleCheckbox","recordShiftKeyPress","isChecked","loaderWrapper","_createClass","key","value","items","state","getPluginState","filterInput","filter","folder","name","toLowerCase","indexOf","e","isShiftKeyPressed","shiftKey","file","stopPropagation","preventDefault","currentTarget","focus","_this$plugin$getPlugi","folders","files","concat","lastCheckbox","prevIndex","currentIndex","currentSelection","slice","reducedCurrentSelection","_iterator","_createForOfIteratorHelper","_step","s","n","done","item","uppy","restrictionError","validateRestrictions","_toConsumableArray","getFiles","push","info","message","opts","infoTimeout","err","f","setPluginState","_this$plugin$getPlugi2","id","_this$plugin$getPlugi3","some","promise","then","catch_","_this","result","loading","catch","default"],"sources":["E:/integrate cloud/uppy/node_modules/@uppy/dropbox/node_modules/@uppy/provider-views/lib/SharedHandler.js"],"sourcesContent":["import remoteFileObjToLocal from '@uppy/utils/lib/remoteFileObjToLocal';\nexport default class SharedHandler {\n  constructor(plugin) {\n    this.plugin = plugin;\n    this.filterItems = this.filterItems.bind(this);\n    this.toggleCheckbox = this.toggleCheckbox.bind(this);\n    this.recordShiftKeyPress = this.recordShiftKeyPress.bind(this);\n    this.isChecked = this.isChecked.bind(this);\n    this.loaderWrapper = this.loaderWrapper.bind(this);\n  }\n\n  filterItems(items) {\n    const state = this.plugin.getPluginState();\n\n    if (!state.filterInput || state.filterInput === '') {\n      return items;\n    }\n\n    return items.filter(folder => {\n      return folder.name.toLowerCase().indexOf(state.filterInput.toLowerCase()) !== -1;\n    });\n  }\n\n  recordShiftKeyPress(e) {\n    this.isShiftKeyPressed = e.shiftKey;\n  }\n  /**\n   * Toggles file/folder checkbox to on/off state while updating files list.\n   *\n   * Note that some extra complexity comes from supporting shift+click to\n   * toggle multiple checkboxes at once, which is done by getting all files\n   * in between last checked file and current one.\n   */\n\n\n  toggleCheckbox(e, file) {\n    e.stopPropagation();\n    e.preventDefault();\n    e.currentTarget.focus();\n    const {\n      folders,\n      files\n    } = this.plugin.getPluginState();\n    const items = this.filterItems(folders.concat(files)); // Shift-clicking selects a single consecutive list of items\n    // starting at the previous click and deselects everything else.\n\n    if (this.lastCheckbox && this.isShiftKeyPressed) {\n      const prevIndex = items.indexOf(this.lastCheckbox);\n      const currentIndex = items.indexOf(file);\n      const currentSelection = prevIndex < currentIndex ? items.slice(prevIndex, currentIndex + 1) : items.slice(currentIndex, prevIndex + 1);\n      const reducedCurrentSelection = []; // Check restrictions on each file in currentSelection,\n      // reduce it to only contain files that pass restrictions\n\n      for (const item of currentSelection) {\n        const {\n          uppy\n        } = this.plugin;\n        const restrictionError = uppy.validateRestrictions(remoteFileObjToLocal(item), [...uppy.getFiles(), ...reducedCurrentSelection]);\n\n        if (!restrictionError) {\n          reducedCurrentSelection.push(item);\n        } else {\n          uppy.info({\n            message: restrictionError.message\n          }, 'error', uppy.opts.infoTimeout);\n        }\n      }\n\n      this.plugin.setPluginState({\n        currentSelection: reducedCurrentSelection\n      });\n      return;\n    }\n\n    this.lastCheckbox = file;\n    const {\n      currentSelection\n    } = this.plugin.getPluginState();\n\n    if (this.isChecked(file)) {\n      this.plugin.setPluginState({\n        currentSelection: currentSelection.filter(item => item.id !== file.id)\n      });\n    } else {\n      this.plugin.setPluginState({\n        currentSelection: currentSelection.concat([file])\n      });\n    }\n  }\n\n  isChecked(file) {\n    const {\n      currentSelection\n    } = this.plugin.getPluginState(); // comparing id instead of the file object, because the reference to the object\n    // changes when we switch folders, and the file list is updated\n\n    return currentSelection.some(item => item.id === file.id);\n  }\n\n  loaderWrapper(promise, then, catch_) {\n    promise.then(result => {\n      this.plugin.setPluginState({\n        loading: false\n      });\n      then(result);\n    }).catch(err => {\n      this.plugin.setPluginState({\n        loading: false\n      });\n      catch_(err);\n    });\n    this.plugin.setPluginState({\n      loading: true\n    });\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}