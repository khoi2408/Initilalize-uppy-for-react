{"ast":null,"code":"/**\n * Takes a file object and turns it into fileID, by converting file.name to lowercase,\n * removing extra characters and adding type, size and lastModified\n *\n * @param {object} file\n * @returns {string} the fileID\n */\nmodule.exports = function generateFileID(file) {\n  // It's tempting to do `[items].filter(Boolean).join('-')` here, but that\n  // is slower! simple string concatenation is fast\n  var id = 'uppy';\n  if (typeof file.name === 'string') {\n    id += \"-\" + encodeFilename(file.name.toLowerCase());\n  }\n  if (file.type !== undefined) {\n    id += \"-\" + file.type;\n  }\n  if (file.meta && typeof file.meta.relativePath === 'string') {\n    id += \"-\" + encodeFilename(file.meta.relativePath.toLowerCase());\n  }\n  if (file.data.size !== undefined) {\n    id += \"-\" + file.data.size;\n  }\n  if (file.data.lastModified !== undefined) {\n    id += \"-\" + file.data.lastModified;\n  }\n  return id;\n};\nfunction encodeFilename(name) {\n  var suffix = '';\n  return name.replace(/[^A-Z0-9]/ig, function (character) {\n    suffix += \"-\" + encodeCharacter(character);\n    return '/';\n  }) + suffix;\n}\nfunction encodeCharacter(character) {\n  return character.charCodeAt(0).toString(32);\n}","map":{"version":3,"names":["module","exports","generateFileID","file","id","name","encodeFilename","toLowerCase","type","undefined","meta","relativePath","data","size","lastModified","suffix","replace","character","encodeCharacter","charCodeAt","toString"],"sources":["E:/integrate cloud/uppy/node_modules/@uppy/utils/lib/generateFileID.js"],"sourcesContent":["/**\n * Takes a file object and turns it into fileID, by converting file.name to lowercase,\n * removing extra characters and adding type, size and lastModified\n *\n * @param {object} file\n * @returns {string} the fileID\n */\nmodule.exports = function generateFileID(file) {\n  // It's tempting to do `[items].filter(Boolean).join('-')` here, but that\n  // is slower! simple string concatenation is fast\n  var id = 'uppy';\n\n  if (typeof file.name === 'string') {\n    id += \"-\" + encodeFilename(file.name.toLowerCase());\n  }\n\n  if (file.type !== undefined) {\n    id += \"-\" + file.type;\n  }\n\n  if (file.meta && typeof file.meta.relativePath === 'string') {\n    id += \"-\" + encodeFilename(file.meta.relativePath.toLowerCase());\n  }\n\n  if (file.data.size !== undefined) {\n    id += \"-\" + file.data.size;\n  }\n\n  if (file.data.lastModified !== undefined) {\n    id += \"-\" + file.data.lastModified;\n  }\n\n  return id;\n};\n\nfunction encodeFilename(name) {\n  var suffix = '';\n  return name.replace(/[^A-Z0-9]/ig, function (character) {\n    suffix += \"-\" + encodeCharacter(character);\n    return '/';\n  }) + suffix;\n}\n\nfunction encodeCharacter(character) {\n  return character.charCodeAt(0).toString(32);\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,OAAO,GAAG,SAASC,cAAcA,CAACC,IAAI,EAAE;EAC7C;EACA;EACA,IAAIC,EAAE,GAAG,MAAM;EAEf,IAAI,OAAOD,IAAI,CAACE,IAAI,KAAK,QAAQ,EAAE;IACjCD,EAAE,IAAI,GAAG,GAAGE,cAAc,CAACH,IAAI,CAACE,IAAI,CAACE,WAAW,EAAE,CAAC;EACrD;EAEA,IAAIJ,IAAI,CAACK,IAAI,KAAKC,SAAS,EAAE;IAC3BL,EAAE,IAAI,GAAG,GAAGD,IAAI,CAACK,IAAI;EACvB;EAEA,IAAIL,IAAI,CAACO,IAAI,IAAI,OAAOP,IAAI,CAACO,IAAI,CAACC,YAAY,KAAK,QAAQ,EAAE;IAC3DP,EAAE,IAAI,GAAG,GAAGE,cAAc,CAACH,IAAI,CAACO,IAAI,CAACC,YAAY,CAACJ,WAAW,EAAE,CAAC;EAClE;EAEA,IAAIJ,IAAI,CAACS,IAAI,CAACC,IAAI,KAAKJ,SAAS,EAAE;IAChCL,EAAE,IAAI,GAAG,GAAGD,IAAI,CAACS,IAAI,CAACC,IAAI;EAC5B;EAEA,IAAIV,IAAI,CAACS,IAAI,CAACE,YAAY,KAAKL,SAAS,EAAE;IACxCL,EAAE,IAAI,GAAG,GAAGD,IAAI,CAACS,IAAI,CAACE,YAAY;EACpC;EAEA,OAAOV,EAAE;AACX,CAAC;AAED,SAASE,cAAcA,CAACD,IAAI,EAAE;EAC5B,IAAIU,MAAM,GAAG,EAAE;EACf,OAAOV,IAAI,CAACW,OAAO,CAAC,aAAa,EAAE,UAAUC,SAAS,EAAE;IACtDF,MAAM,IAAI,GAAG,GAAGG,eAAe,CAACD,SAAS,CAAC;IAC1C,OAAO,GAAG;EACZ,CAAC,CAAC,GAAGF,MAAM;AACb;AAEA,SAASG,eAAeA,CAACD,SAAS,EAAE;EAClC,OAAOA,SAAS,CAACE,UAAU,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC;AAC7C"},"metadata":{},"sourceType":"script"}