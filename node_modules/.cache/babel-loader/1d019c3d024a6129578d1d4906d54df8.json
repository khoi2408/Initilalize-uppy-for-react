{"ast":null,"code":"/**\n * uriToBlob resolves a URI to a Blob object. This is used for\n * React Native to retrieve a file (identified by a file://\n * URI) as a blob.\n */\nexport default function uriToBlob(uri) {\n  return new Promise(function (resolve, reject) {\n    var xhr = new XMLHttpRequest();\n    xhr.responseType = 'blob';\n    xhr.onload = function () {\n      var blob = xhr.response;\n      resolve(blob);\n    };\n    xhr.onerror = function (err) {\n      reject(err);\n    };\n    xhr.open('GET', uri);\n    xhr.send();\n  });\n}","map":{"version":3,"names":["uriToBlob","uri","Promise","resolve","reject","xhr","XMLHttpRequest","responseType","onload","blob","response","onerror","err","open","send"],"sources":["E:/integrate cloud/uppy/node_modules/tus-js-client/lib.esm/browser/uriToBlob.js"],"sourcesContent":["/**\n * uriToBlob resolves a URI to a Blob object. This is used for\n * React Native to retrieve a file (identified by a file://\n * URI) as a blob.\n */\nexport default function uriToBlob(uri) {\n  return new Promise(function (resolve, reject) {\n    var xhr = new XMLHttpRequest();\n    xhr.responseType = 'blob';\n\n    xhr.onload = function () {\n      var blob = xhr.response;\n      resolve(blob);\n    };\n\n    xhr.onerror = function (err) {\n      reject(err);\n    };\n\n    xhr.open('GET', uri);\n    xhr.send();\n  });\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,SAASA,CAACC,GAAG,EAAE;EACrC,OAAO,IAAIC,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;IAC5C,IAAIC,GAAG,GAAG,IAAIC,cAAc,EAAE;IAC9BD,GAAG,CAACE,YAAY,GAAG,MAAM;IAEzBF,GAAG,CAACG,MAAM,GAAG,YAAY;MACvB,IAAIC,IAAI,GAAGJ,GAAG,CAACK,QAAQ;MACvBP,OAAO,CAACM,IAAI,CAAC;IACf,CAAC;IAEDJ,GAAG,CAACM,OAAO,GAAG,UAAUC,GAAG,EAAE;MAC3BR,MAAM,CAACQ,GAAG,CAAC;IACb,CAAC;IAEDP,GAAG,CAACQ,IAAI,CAAC,KAAK,EAAEZ,GAAG,CAAC;IACpBI,GAAG,CAACS,IAAI,EAAE;EACZ,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module"}