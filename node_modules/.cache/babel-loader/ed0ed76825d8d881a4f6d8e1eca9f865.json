{"ast":null,"code":"var toArray = require('../../../toArray');\nvar getRelativePath = require('./getRelativePath');\nvar getFilesAndDirectoriesFromDirectory = require('./getFilesAndDirectoriesFromDirectory');\nmodule.exports = function webkitGetAsEntryApi(dataTransfer, logDropError) {\n  var files = [];\n  var rootPromises = [];\n  /**\n   * Returns a resolved promise, when :files array is enhanced\n   *\n   * @param {(FileSystemFileEntry|FileSystemDirectoryEntry)} entry\n   * @returns {Promise} - empty promise that resolves when :files is enhanced with a file\n   */\n\n  var createPromiseToAddFileOrParseDirectory = function createPromiseToAddFileOrParseDirectory(entry) {\n    return new Promise(function (resolve) {\n      // This is a base call\n      if (entry.isFile) {\n        // Creates a new File object which can be used to read the file.\n        entry.file(function (file) {\n          file.relativePath = getRelativePath(entry);\n          files.push(file);\n          resolve();\n        },\n        // Make sure we resolve on error anyway, it's fine if only one file couldn't be read!\n        function (error) {\n          logDropError(error);\n          resolve();\n        }); // This is a recursive call\n      } else if (entry.isDirectory) {\n        var directoryReader = entry.createReader();\n        getFilesAndDirectoriesFromDirectory(directoryReader, [], logDropError, {\n          onSuccess: function onSuccess(entries) {\n            var promises = entries.map(function (entry) {\n              return createPromiseToAddFileOrParseDirectory(entry);\n            });\n            Promise.all(promises).then(function () {\n              return resolve();\n            });\n          }\n        });\n      }\n    });\n  }; // For each dropped item, - make sure it's a file/directory, and start deepening in!\n\n  toArray(dataTransfer.items).forEach(function (item) {\n    var entry = item.webkitGetAsEntry(); // :entry can be null when we drop the url e.g.\n\n    if (entry) {\n      rootPromises.push(createPromiseToAddFileOrParseDirectory(entry));\n    }\n  });\n  return Promise.all(rootPromises).then(function () {\n    return files;\n  });\n};","map":{"version":3,"names":["toArray","require","getRelativePath","getFilesAndDirectoriesFromDirectory","module","exports","webkitGetAsEntryApi","dataTransfer","logDropError","files","rootPromises","createPromiseToAddFileOrParseDirectory","entry","Promise","resolve","isFile","file","relativePath","push","error","isDirectory","directoryReader","createReader","onSuccess","entries","promises","map","all","then","items","forEach","item","webkitGetAsEntry"],"sources":["E:/integrate cloud/uppy/node_modules/@uppy/utils/lib/getDroppedFiles/utils/webkitGetAsEntryApi/index.js"],"sourcesContent":["var toArray = require('../../../toArray');\n\nvar getRelativePath = require('./getRelativePath');\n\nvar getFilesAndDirectoriesFromDirectory = require('./getFilesAndDirectoriesFromDirectory');\n\nmodule.exports = function webkitGetAsEntryApi(dataTransfer, logDropError) {\n  var files = [];\n  var rootPromises = [];\n  /**\n   * Returns a resolved promise, when :files array is enhanced\n   *\n   * @param {(FileSystemFileEntry|FileSystemDirectoryEntry)} entry\n   * @returns {Promise} - empty promise that resolves when :files is enhanced with a file\n   */\n\n  var createPromiseToAddFileOrParseDirectory = function createPromiseToAddFileOrParseDirectory(entry) {\n    return new Promise(function (resolve) {\n      // This is a base call\n      if (entry.isFile) {\n        // Creates a new File object which can be used to read the file.\n        entry.file(function (file) {\n          file.relativePath = getRelativePath(entry);\n          files.push(file);\n          resolve();\n        }, // Make sure we resolve on error anyway, it's fine if only one file couldn't be read!\n        function (error) {\n          logDropError(error);\n          resolve();\n        }); // This is a recursive call\n      } else if (entry.isDirectory) {\n        var directoryReader = entry.createReader();\n        getFilesAndDirectoriesFromDirectory(directoryReader, [], logDropError, {\n          onSuccess: function onSuccess(entries) {\n            var promises = entries.map(function (entry) {\n              return createPromiseToAddFileOrParseDirectory(entry);\n            });\n            Promise.all(promises).then(function () {\n              return resolve();\n            });\n          }\n        });\n      }\n    });\n  }; // For each dropped item, - make sure it's a file/directory, and start deepening in!\n\n\n  toArray(dataTransfer.items).forEach(function (item) {\n    var entry = item.webkitGetAsEntry(); // :entry can be null when we drop the url e.g.\n\n    if (entry) {\n      rootPromises.push(createPromiseToAddFileOrParseDirectory(entry));\n    }\n  });\n  return Promise.all(rootPromises).then(function () {\n    return files;\n  });\n};"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAEzC,IAAIC,eAAe,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AAElD,IAAIE,mCAAmC,GAAGF,OAAO,CAAC,uCAAuC,CAAC;AAE1FG,MAAM,CAACC,OAAO,GAAG,SAASC,mBAAmBA,CAACC,YAAY,EAAEC,YAAY,EAAE;EACxE,IAAIC,KAAK,GAAG,EAAE;EACd,IAAIC,YAAY,GAAG,EAAE;EACrB;AACF;AACA;AACA;AACA;AACA;;EAEE,IAAIC,sCAAsC,GAAG,SAASA,sCAAsCA,CAACC,KAAK,EAAE;IAClG,OAAO,IAAIC,OAAO,CAAC,UAAUC,OAAO,EAAE;MACpC;MACA,IAAIF,KAAK,CAACG,MAAM,EAAE;QAChB;QACAH,KAAK,CAACI,IAAI,CAAC,UAAUA,IAAI,EAAE;UACzBA,IAAI,CAACC,YAAY,GAAGf,eAAe,CAACU,KAAK,CAAC;UAC1CH,KAAK,CAACS,IAAI,CAACF,IAAI,CAAC;UAChBF,OAAO,EAAE;QACX,CAAC;QAAE;QACH,UAAUK,KAAK,EAAE;UACfX,YAAY,CAACW,KAAK,CAAC;UACnBL,OAAO,EAAE;QACX,CAAC,CAAC,CAAC,CAAC;MACN,CAAC,MAAM,IAAIF,KAAK,CAACQ,WAAW,EAAE;QAC5B,IAAIC,eAAe,GAAGT,KAAK,CAACU,YAAY,EAAE;QAC1CnB,mCAAmC,CAACkB,eAAe,EAAE,EAAE,EAAEb,YAAY,EAAE;UACrEe,SAAS,EAAE,SAASA,SAASA,CAACC,OAAO,EAAE;YACrC,IAAIC,QAAQ,GAAGD,OAAO,CAACE,GAAG,CAAC,UAAUd,KAAK,EAAE;cAC1C,OAAOD,sCAAsC,CAACC,KAAK,CAAC;YACtD,CAAC,CAAC;YACFC,OAAO,CAACc,GAAG,CAACF,QAAQ,CAAC,CAACG,IAAI,CAAC,YAAY;cACrC,OAAOd,OAAO,EAAE;YAClB,CAAC,CAAC;UACJ;QACF,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ,CAAC,CAAC,CAAC;;EAGHd,OAAO,CAACO,YAAY,CAACsB,KAAK,CAAC,CAACC,OAAO,CAAC,UAAUC,IAAI,EAAE;IAClD,IAAInB,KAAK,GAAGmB,IAAI,CAACC,gBAAgB,EAAE,CAAC,CAAC;;IAErC,IAAIpB,KAAK,EAAE;MACTF,YAAY,CAACQ,IAAI,CAACP,sCAAsC,CAACC,KAAK,CAAC,CAAC;IAClE;EACF,CAAC,CAAC;EACF,OAAOC,OAAO,CAACc,GAAG,CAACjB,YAAY,CAAC,CAACkB,IAAI,CAAC,YAAY;IAChD,OAAOnB,KAAK;EACd,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script"}