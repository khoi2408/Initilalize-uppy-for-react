{"ast":null,"code":"var toArray = require('@uppy/utils/lib/toArray');\nvar getActiveOverlayEl = require('./getActiveOverlayEl');\nvar FOCUSABLE_ELEMENTS = require('@uppy/utils/lib/FOCUSABLE_ELEMENTS');\nfunction focusOnFirstNode(event, nodes) {\n  var node = nodes[0];\n  if (node) {\n    node.focus();\n    event.preventDefault();\n  }\n}\nfunction focusOnLastNode(event, nodes) {\n  var node = nodes[nodes.length - 1];\n  if (node) {\n    node.focus();\n    event.preventDefault();\n  }\n} // ___Why not just use (focusedItemIndex === -1)?\n//    Firefox thinks <ul> is focusable, but we don't have <ul>s in our FOCUSABLE_ELEMENTS. Which means that if we tab into the <ul>, code will think that we are not in the active overlay, and we should focusOnFirstNode() of the currently active overlay!\n//    [Practical check] if we use (focusedItemIndex === -1), instagram provider in firefox will never get focus on its pics in the <ul>.\n\nfunction isFocusInOverlay(activeOverlayEl) {\n  return activeOverlayEl.contains(document.activeElement);\n}\nfunction trapFocus(event, activeOverlayType, dashboardEl) {\n  var activeOverlayEl = getActiveOverlayEl(dashboardEl, activeOverlayType);\n  var focusableNodes = toArray(activeOverlayEl.querySelectorAll(FOCUSABLE_ELEMENTS));\n  var focusedItemIndex = focusableNodes.indexOf(document.activeElement); // If we pressed tab, and focus is not yet within the current overlay - focus on the first element within the current overlay.\n  // This is a safety measure (for when user returns from another tab e.g.), most plugins will try to focus on some important element as it loads.\n\n  if (!isFocusInOverlay(activeOverlayEl)) {\n    focusOnFirstNode(event, focusableNodes); // If we pressed shift + tab, and we're on the first element of a modal\n  } else if (event.shiftKey && focusedItemIndex === 0) {\n    focusOnLastNode(event, focusableNodes); // If we pressed tab, and we're on the last element of the modal\n  } else if (!event.shiftKey && focusedItemIndex === focusableNodes.length - 1) {\n    focusOnFirstNode(event, focusableNodes);\n  }\n}\nmodule.exports = {\n  // Traps focus inside of the currently open overlay (e.g. Dashboard, or e.g. Instagram), never lets focus disappear from the modal.\n  forModal: function forModal(event, activeOverlayType, dashboardEl) {\n    trapFocus(event, activeOverlayType, dashboardEl);\n  },\n  // Traps focus inside of the currently open overlay, unless overlay is null - then let the user tab away.\n  forInline: function forInline(event, activeOverlayType, dashboardEl) {\n    // ___When we're in the bare 'Drop files here, paste, browse or import from' screen\n    if (activeOverlayType === null) {// Do nothing and let the browser handle it, user can tab away from Uppy to other elements on the page\n      // ___When there is some overlay with 'Done' button\n    } else {\n      // Trap the focus inside this overlay!\n      // User can close the overlay (click 'Done') if they want to travel away from Uppy.\n      trapFocus(event, activeOverlayType, dashboardEl);\n    }\n  }\n};","map":{"version":3,"names":["toArray","require","getActiveOverlayEl","FOCUSABLE_ELEMENTS","focusOnFirstNode","event","nodes","node","focus","preventDefault","focusOnLastNode","length","isFocusInOverlay","activeOverlayEl","contains","document","activeElement","trapFocus","activeOverlayType","dashboardEl","focusableNodes","querySelectorAll","focusedItemIndex","indexOf","shiftKey","module","exports","forModal","forInline"],"sources":["E:/integrate cloud/uppy/node_modules/@uppy/dashboard/lib/utils/trapFocus.js"],"sourcesContent":["var toArray = require('@uppy/utils/lib/toArray');\n\nvar getActiveOverlayEl = require('./getActiveOverlayEl');\n\nvar FOCUSABLE_ELEMENTS = require('@uppy/utils/lib/FOCUSABLE_ELEMENTS');\n\nfunction focusOnFirstNode(event, nodes) {\n  var node = nodes[0];\n\n  if (node) {\n    node.focus();\n    event.preventDefault();\n  }\n}\n\nfunction focusOnLastNode(event, nodes) {\n  var node = nodes[nodes.length - 1];\n\n  if (node) {\n    node.focus();\n    event.preventDefault();\n  }\n} // ___Why not just use (focusedItemIndex === -1)?\n//    Firefox thinks <ul> is focusable, but we don't have <ul>s in our FOCUSABLE_ELEMENTS. Which means that if we tab into the <ul>, code will think that we are not in the active overlay, and we should focusOnFirstNode() of the currently active overlay!\n//    [Practical check] if we use (focusedItemIndex === -1), instagram provider in firefox will never get focus on its pics in the <ul>.\n\n\nfunction isFocusInOverlay(activeOverlayEl) {\n  return activeOverlayEl.contains(document.activeElement);\n}\n\nfunction trapFocus(event, activeOverlayType, dashboardEl) {\n  var activeOverlayEl = getActiveOverlayEl(dashboardEl, activeOverlayType);\n  var focusableNodes = toArray(activeOverlayEl.querySelectorAll(FOCUSABLE_ELEMENTS));\n  var focusedItemIndex = focusableNodes.indexOf(document.activeElement); // If we pressed tab, and focus is not yet within the current overlay - focus on the first element within the current overlay.\n  // This is a safety measure (for when user returns from another tab e.g.), most plugins will try to focus on some important element as it loads.\n\n  if (!isFocusInOverlay(activeOverlayEl)) {\n    focusOnFirstNode(event, focusableNodes); // If we pressed shift + tab, and we're on the first element of a modal\n  } else if (event.shiftKey && focusedItemIndex === 0) {\n    focusOnLastNode(event, focusableNodes); // If we pressed tab, and we're on the last element of the modal\n  } else if (!event.shiftKey && focusedItemIndex === focusableNodes.length - 1) {\n    focusOnFirstNode(event, focusableNodes);\n  }\n}\n\nmodule.exports = {\n  // Traps focus inside of the currently open overlay (e.g. Dashboard, or e.g. Instagram), never lets focus disappear from the modal.\n  forModal: function forModal(event, activeOverlayType, dashboardEl) {\n    trapFocus(event, activeOverlayType, dashboardEl);\n  },\n  // Traps focus inside of the currently open overlay, unless overlay is null - then let the user tab away.\n  forInline: function forInline(event, activeOverlayType, dashboardEl) {\n    // ___When we're in the bare 'Drop files here, paste, browse or import from' screen\n    if (activeOverlayType === null) {// Do nothing and let the browser handle it, user can tab away from Uppy to other elements on the page\n      // ___When there is some overlay with 'Done' button\n    } else {\n      // Trap the focus inside this overlay!\n      // User can close the overlay (click 'Done') if they want to travel away from Uppy.\n      trapFocus(event, activeOverlayType, dashboardEl);\n    }\n  }\n};"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,yBAAyB,CAAC;AAEhD,IAAIC,kBAAkB,GAAGD,OAAO,CAAC,sBAAsB,CAAC;AAExD,IAAIE,kBAAkB,GAAGF,OAAO,CAAC,oCAAoC,CAAC;AAEtE,SAASG,gBAAgBA,CAACC,KAAK,EAAEC,KAAK,EAAE;EACtC,IAAIC,IAAI,GAAGD,KAAK,CAAC,CAAC,CAAC;EAEnB,IAAIC,IAAI,EAAE;IACRA,IAAI,CAACC,KAAK,EAAE;IACZH,KAAK,CAACI,cAAc,EAAE;EACxB;AACF;AAEA,SAASC,eAAeA,CAACL,KAAK,EAAEC,KAAK,EAAE;EACrC,IAAIC,IAAI,GAAGD,KAAK,CAACA,KAAK,CAACK,MAAM,GAAG,CAAC,CAAC;EAElC,IAAIJ,IAAI,EAAE;IACRA,IAAI,CAACC,KAAK,EAAE;IACZH,KAAK,CAACI,cAAc,EAAE;EACxB;AACF,CAAC,CAAC;AACF;AACA;;AAGA,SAASG,gBAAgBA,CAACC,eAAe,EAAE;EACzC,OAAOA,eAAe,CAACC,QAAQ,CAACC,QAAQ,CAACC,aAAa,CAAC;AACzD;AAEA,SAASC,SAASA,CAACZ,KAAK,EAAEa,iBAAiB,EAAEC,WAAW,EAAE;EACxD,IAAIN,eAAe,GAAGX,kBAAkB,CAACiB,WAAW,EAAED,iBAAiB,CAAC;EACxE,IAAIE,cAAc,GAAGpB,OAAO,CAACa,eAAe,CAACQ,gBAAgB,CAAClB,kBAAkB,CAAC,CAAC;EAClF,IAAImB,gBAAgB,GAAGF,cAAc,CAACG,OAAO,CAACR,QAAQ,CAACC,aAAa,CAAC,CAAC,CAAC;EACvE;;EAEA,IAAI,CAACJ,gBAAgB,CAACC,eAAe,CAAC,EAAE;IACtCT,gBAAgB,CAACC,KAAK,EAAEe,cAAc,CAAC,CAAC,CAAC;EAC3C,CAAC,MAAM,IAAIf,KAAK,CAACmB,QAAQ,IAAIF,gBAAgB,KAAK,CAAC,EAAE;IACnDZ,eAAe,CAACL,KAAK,EAAEe,cAAc,CAAC,CAAC,CAAC;EAC1C,CAAC,MAAM,IAAI,CAACf,KAAK,CAACmB,QAAQ,IAAIF,gBAAgB,KAAKF,cAAc,CAACT,MAAM,GAAG,CAAC,EAAE;IAC5EP,gBAAgB,CAACC,KAAK,EAAEe,cAAc,CAAC;EACzC;AACF;AAEAK,MAAM,CAACC,OAAO,GAAG;EACf;EACAC,QAAQ,EAAE,SAASA,QAAQA,CAACtB,KAAK,EAAEa,iBAAiB,EAAEC,WAAW,EAAE;IACjEF,SAAS,CAACZ,KAAK,EAAEa,iBAAiB,EAAEC,WAAW,CAAC;EAClD,CAAC;EACD;EACAS,SAAS,EAAE,SAASA,SAASA,CAACvB,KAAK,EAAEa,iBAAiB,EAAEC,WAAW,EAAE;IACnE;IACA,IAAID,iBAAiB,KAAK,IAAI,EAAE,CAAC;MAC/B;IAAA,CACD,MAAM;MACL;MACA;MACAD,SAAS,CAACZ,KAAK,EAAEa,iBAAiB,EAAEC,WAAW,CAAC;IAClD;EACF;AACF,CAAC"},"metadata":{},"sourceType":"script"}