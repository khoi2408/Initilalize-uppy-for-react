{"ast":null,"code":"import isReactNative from './isReactNative'; // TODO: Differenciate between input types\n\n/**\n * Generate a fingerprint for a file which will be used the store the endpoint\n *\n * @param {File} file\n * @param {Object} options\n * @param {Function} callback\n */\n\nexport default function fingerprint(file, options) {\n  if (isReactNative()) {\n    return Promise.resolve(reactNativeFingerprint(file, options));\n  }\n  return Promise.resolve(['tus-br', file.name, file.type, file.size, file.lastModified, options.endpoint].join('-'));\n}\nfunction reactNativeFingerprint(file, options) {\n  var exifHash = file.exif ? hashCode(JSON.stringify(file.exif)) : 'noexif';\n  return ['tus-rn', file.name || 'noname', file.size || 'nosize', exifHash, options.endpoint].join('/');\n}\nfunction hashCode(str) {\n  // from https://stackoverflow.com/a/8831937/151666\n  var hash = 0;\n  if (str.length === 0) {\n    return hash;\n  }\n  for (var i = 0; i < str.length; i++) {\n    var _char = str.charCodeAt(i);\n    hash = (hash << 5) - hash + _char;\n    hash &= hash; // Convert to 32bit integer\n  }\n\n  return hash;\n}","map":{"version":3,"names":["isReactNative","fingerprint","file","options","Promise","resolve","reactNativeFingerprint","name","type","size","lastModified","endpoint","join","exifHash","exif","hashCode","JSON","stringify","str","hash","length","i","_char","charCodeAt"],"sources":["E:/integrate cloud/uppy/node_modules/tus-js-client/lib.esm/browser/fingerprint.js"],"sourcesContent":["import isReactNative from './isReactNative'; // TODO: Differenciate between input types\n\n/**\n * Generate a fingerprint for a file which will be used the store the endpoint\n *\n * @param {File} file\n * @param {Object} options\n * @param {Function} callback\n */\n\nexport default function fingerprint(file, options) {\n  if (isReactNative()) {\n    return Promise.resolve(reactNativeFingerprint(file, options));\n  }\n\n  return Promise.resolve(['tus-br', file.name, file.type, file.size, file.lastModified, options.endpoint].join('-'));\n}\n\nfunction reactNativeFingerprint(file, options) {\n  var exifHash = file.exif ? hashCode(JSON.stringify(file.exif)) : 'noexif';\n  return ['tus-rn', file.name || 'noname', file.size || 'nosize', exifHash, options.endpoint].join('/');\n}\n\nfunction hashCode(str) {\n  // from https://stackoverflow.com/a/8831937/151666\n  var hash = 0;\n\n  if (str.length === 0) {\n    return hash;\n  }\n\n  for (var i = 0; i < str.length; i++) {\n    var _char = str.charCodeAt(i);\n\n    hash = (hash << 5) - hash + _char;\n    hash &= hash; // Convert to 32bit integer\n  }\n\n  return hash;\n}"],"mappings":"AAAA,OAAOA,aAAa,MAAM,iBAAiB,CAAC,CAAC;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,WAAWA,CAACC,IAAI,EAAEC,OAAO,EAAE;EACjD,IAAIH,aAAa,EAAE,EAAE;IACnB,OAAOI,OAAO,CAACC,OAAO,CAACC,sBAAsB,CAACJ,IAAI,EAAEC,OAAO,CAAC,CAAC;EAC/D;EAEA,OAAOC,OAAO,CAACC,OAAO,CAAC,CAAC,QAAQ,EAAEH,IAAI,CAACK,IAAI,EAAEL,IAAI,CAACM,IAAI,EAAEN,IAAI,CAACO,IAAI,EAAEP,IAAI,CAACQ,YAAY,EAAEP,OAAO,CAACQ,QAAQ,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC;AACpH;AAEA,SAASN,sBAAsBA,CAACJ,IAAI,EAAEC,OAAO,EAAE;EAC7C,IAAIU,QAAQ,GAAGX,IAAI,CAACY,IAAI,GAAGC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACf,IAAI,CAACY,IAAI,CAAC,CAAC,GAAG,QAAQ;EACzE,OAAO,CAAC,QAAQ,EAAEZ,IAAI,CAACK,IAAI,IAAI,QAAQ,EAAEL,IAAI,CAACO,IAAI,IAAI,QAAQ,EAAEI,QAAQ,EAAEV,OAAO,CAACQ,QAAQ,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;AACvG;AAEA,SAASG,QAAQA,CAACG,GAAG,EAAE;EACrB;EACA,IAAIC,IAAI,GAAG,CAAC;EAEZ,IAAID,GAAG,CAACE,MAAM,KAAK,CAAC,EAAE;IACpB,OAAOD,IAAI;EACb;EAEA,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,GAAG,CAACE,MAAM,EAAEC,CAAC,EAAE,EAAE;IACnC,IAAIC,KAAK,GAAGJ,GAAG,CAACK,UAAU,CAACF,CAAC,CAAC;IAE7BF,IAAI,GAAG,CAACA,IAAI,IAAI,CAAC,IAAIA,IAAI,GAAGG,KAAK;IACjCH,IAAI,IAAIA,IAAI,CAAC,CAAC;EAChB;;EAEA,OAAOA,IAAI;AACb"},"metadata":{},"sourceType":"module"}