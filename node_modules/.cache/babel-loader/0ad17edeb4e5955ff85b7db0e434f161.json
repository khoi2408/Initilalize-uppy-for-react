{"ast":null,"code":"var fetchWithNetworkError = require('@uppy/utils/lib/fetchWithNetworkError');\nvar URL = require('url-parse');\n/**\n * A Barebones HTTP API client for Transloadit.\n */\n\nmodule.exports = /*#__PURE__*/function () {\n  function Client(opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    this.opts = opts;\n    this._reportError = this._reportError.bind(this);\n    this._headers = {\n      'Transloadit-Client': this.opts.client\n    };\n  }\n  /**\n   * Create a new assembly.\n   *\n   * @param {object} options\n   * @param {string|object} options.params\n   * @param {object} options.fields\n   * @param {string} options.signature\n   * @param {number} options.expectedFiles\n   */\n\n  var _proto = Client.prototype;\n  _proto.createAssembly = function createAssembly(_ref) {\n    var _this = this;\n    var params = _ref.params,\n      fields = _ref.fields,\n      signature = _ref.signature,\n      expectedFiles = _ref.expectedFiles;\n    var data = new FormData();\n    data.append('params', typeof params === 'string' ? params : JSON.stringify(params));\n    if (signature) {\n      data.append('signature', signature);\n    }\n    Object.keys(fields).forEach(function (key) {\n      data.append(key, fields[key]);\n    });\n    data.append('num_expected_upload_files', expectedFiles);\n    var url = new URL('/assemblies', \"\" + this.opts.service).href;\n    return fetchWithNetworkError(url, {\n      method: 'post',\n      headers: this._headers,\n      body: data\n    }).then(function (response) {\n      return response.json();\n    }).then(function (assembly) {\n      if (assembly.error) {\n        var error = new Error(assembly.error);\n        error.details = assembly.message;\n        error.assembly = assembly;\n        if (assembly.assembly_id) {\n          error.details += ' ' + (\"Assembly ID: \" + assembly.assembly_id);\n        }\n        throw error;\n      }\n      return assembly;\n    }).catch(function (err) {\n      return _this._reportError(err, {\n        url: url,\n        type: 'API_ERROR'\n      });\n    });\n  }\n  /**\n   * Reserve resources for a file in an Assembly. Then addFile can be used later.\n   *\n   * @param {object} assembly\n   * @param {UppyFile} file\n   */;\n\n  _proto.reserveFile = function reserveFile(assembly, file) {\n    var _this2 = this;\n    var size = encodeURIComponent(file.size);\n    var url = assembly.assembly_ssl_url + \"/reserve_file?size=\" + size;\n    return fetchWithNetworkError(url, {\n      method: 'post',\n      headers: this._headers\n    }).then(function (response) {\n      return response.json();\n    }).catch(function (err) {\n      return _this2._reportError(err, {\n        assembly: assembly,\n        file: file,\n        url: url,\n        type: 'API_ERROR'\n      });\n    });\n  }\n  /**\n   * Import a remote file to an Assembly.\n   *\n   * @param {object} assembly\n   * @param {UppyFile} file\n   */;\n\n  _proto.addFile = function addFile(assembly, file) {\n    var _this3 = this;\n    if (!file.uploadURL) {\n      return Promise.reject(new Error('File does not have an `uploadURL`.'));\n    }\n    var size = encodeURIComponent(file.size);\n    var uploadUrl = encodeURIComponent(file.uploadURL);\n    var filename = encodeURIComponent(file.name);\n    var fieldname = 'file';\n    var qs = \"size=\" + size + \"&filename=\" + filename + \"&fieldname=\" + fieldname + \"&s3Url=\" + uploadUrl;\n    var url = assembly.assembly_ssl_url + \"/add_file?\" + qs;\n    return fetchWithNetworkError(url, {\n      method: 'post',\n      headers: this._headers\n    }).then(function (response) {\n      return response.json();\n    }).catch(function (err) {\n      return _this3._reportError(err, {\n        assembly: assembly,\n        file: file,\n        url: url,\n        type: 'API_ERROR'\n      });\n    });\n  }\n  /**\n   * Cancel a running Assembly.\n   *\n   * @param {object} assembly\n   */;\n\n  _proto.cancelAssembly = function cancelAssembly(assembly) {\n    var _this4 = this;\n    var url = assembly.assembly_ssl_url;\n    return fetchWithNetworkError(url, {\n      method: 'delete',\n      headers: this._headers\n    }).then(function (response) {\n      return response.json();\n    }).catch(function (err) {\n      return _this4._reportError(err, {\n        url: url,\n        type: 'API_ERROR'\n      });\n    });\n  }\n  /**\n   * Get the current status for an assembly.\n   *\n   * @param {string} url The status endpoint of the assembly.\n   */;\n\n  _proto.getAssemblyStatus = function getAssemblyStatus(url) {\n    var _this5 = this;\n    return fetchWithNetworkError(url, {\n      headers: this._headers\n    }).then(function (response) {\n      return response.json();\n    }).catch(function (err) {\n      return _this5._reportError(err, {\n        url: url,\n        type: 'STATUS_ERROR'\n      });\n    });\n  };\n  _proto.submitError = function submitError(err, _ref2) {\n    var endpoint = _ref2.endpoint,\n      instance = _ref2.instance,\n      assembly = _ref2.assembly;\n    var message = err.details ? err.message + \" (\" + err.details + \")\" : err.message;\n    return fetchWithNetworkError('https://transloaditstatus.com/client_error', {\n      method: 'post',\n      body: JSON.stringify({\n        endpoint: endpoint,\n        instance: instance,\n        assembly_id: assembly,\n        agent: typeof navigator !== 'undefined' ? navigator.userAgent : '',\n        client: this.opts.client,\n        error: message\n      })\n    }).then(function (response) {\n      return response.json();\n    });\n  };\n  _proto._reportError = function _reportError(err, params) {\n    if (this.opts.errorReporting === false) {\n      throw err;\n    }\n    var opts = {\n      type: params.type\n    };\n    if (params.assembly) {\n      opts.assembly = params.assembly.assembly_id;\n      opts.instance = params.assembly.instance;\n    }\n    if (params.url) {\n      opts.endpoint = params.url;\n    }\n    this.submitError(err, opts).catch(function (_) {// not much we can do then is there\n    });\n    throw err;\n  };\n  return Client;\n}();","map":{"version":3,"names":["fetchWithNetworkError","require","URL","module","exports","Client","opts","_reportError","bind","_headers","client","_proto","prototype","createAssembly","_ref","_this","params","fields","signature","expectedFiles","data","FormData","append","JSON","stringify","Object","keys","forEach","key","url","service","href","method","headers","body","then","response","json","assembly","error","Error","details","message","assembly_id","catch","err","type","reserveFile","file","_this2","size","encodeURIComponent","assembly_ssl_url","addFile","_this3","uploadURL","Promise","reject","uploadUrl","filename","name","fieldname","qs","cancelAssembly","_this4","getAssemblyStatus","_this5","submitError","_ref2","endpoint","instance","agent","navigator","userAgent","errorReporting","_"],"sources":["E:/integrate cloud/uppy/node_modules/@uppy/transloadit/lib/Client.js"],"sourcesContent":["var fetchWithNetworkError = require('@uppy/utils/lib/fetchWithNetworkError');\n\nvar URL = require('url-parse');\n/**\n * A Barebones HTTP API client for Transloadit.\n */\n\n\nmodule.exports = /*#__PURE__*/function () {\n  function Client(opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    this.opts = opts;\n    this._reportError = this._reportError.bind(this);\n    this._headers = {\n      'Transloadit-Client': this.opts.client\n    };\n  }\n  /**\n   * Create a new assembly.\n   *\n   * @param {object} options\n   * @param {string|object} options.params\n   * @param {object} options.fields\n   * @param {string} options.signature\n   * @param {number} options.expectedFiles\n   */\n\n\n  var _proto = Client.prototype;\n\n  _proto.createAssembly = function createAssembly(_ref) {\n    var _this = this;\n\n    var params = _ref.params,\n        fields = _ref.fields,\n        signature = _ref.signature,\n        expectedFiles = _ref.expectedFiles;\n    var data = new FormData();\n    data.append('params', typeof params === 'string' ? params : JSON.stringify(params));\n\n    if (signature) {\n      data.append('signature', signature);\n    }\n\n    Object.keys(fields).forEach(function (key) {\n      data.append(key, fields[key]);\n    });\n    data.append('num_expected_upload_files', expectedFiles);\n    var url = new URL('/assemblies', \"\" + this.opts.service).href;\n    return fetchWithNetworkError(url, {\n      method: 'post',\n      headers: this._headers,\n      body: data\n    }).then(function (response) {\n      return response.json();\n    }).then(function (assembly) {\n      if (assembly.error) {\n        var error = new Error(assembly.error);\n        error.details = assembly.message;\n        error.assembly = assembly;\n\n        if (assembly.assembly_id) {\n          error.details += ' ' + (\"Assembly ID: \" + assembly.assembly_id);\n        }\n\n        throw error;\n      }\n\n      return assembly;\n    }).catch(function (err) {\n      return _this._reportError(err, {\n        url: url,\n        type: 'API_ERROR'\n      });\n    });\n  }\n  /**\n   * Reserve resources for a file in an Assembly. Then addFile can be used later.\n   *\n   * @param {object} assembly\n   * @param {UppyFile} file\n   */\n  ;\n\n  _proto.reserveFile = function reserveFile(assembly, file) {\n    var _this2 = this;\n\n    var size = encodeURIComponent(file.size);\n    var url = assembly.assembly_ssl_url + \"/reserve_file?size=\" + size;\n    return fetchWithNetworkError(url, {\n      method: 'post',\n      headers: this._headers\n    }).then(function (response) {\n      return response.json();\n    }).catch(function (err) {\n      return _this2._reportError(err, {\n        assembly: assembly,\n        file: file,\n        url: url,\n        type: 'API_ERROR'\n      });\n    });\n  }\n  /**\n   * Import a remote file to an Assembly.\n   *\n   * @param {object} assembly\n   * @param {UppyFile} file\n   */\n  ;\n\n  _proto.addFile = function addFile(assembly, file) {\n    var _this3 = this;\n\n    if (!file.uploadURL) {\n      return Promise.reject(new Error('File does not have an `uploadURL`.'));\n    }\n\n    var size = encodeURIComponent(file.size);\n    var uploadUrl = encodeURIComponent(file.uploadURL);\n    var filename = encodeURIComponent(file.name);\n    var fieldname = 'file';\n    var qs = \"size=\" + size + \"&filename=\" + filename + \"&fieldname=\" + fieldname + \"&s3Url=\" + uploadUrl;\n    var url = assembly.assembly_ssl_url + \"/add_file?\" + qs;\n    return fetchWithNetworkError(url, {\n      method: 'post',\n      headers: this._headers\n    }).then(function (response) {\n      return response.json();\n    }).catch(function (err) {\n      return _this3._reportError(err, {\n        assembly: assembly,\n        file: file,\n        url: url,\n        type: 'API_ERROR'\n      });\n    });\n  }\n  /**\n   * Cancel a running Assembly.\n   *\n   * @param {object} assembly\n   */\n  ;\n\n  _proto.cancelAssembly = function cancelAssembly(assembly) {\n    var _this4 = this;\n\n    var url = assembly.assembly_ssl_url;\n    return fetchWithNetworkError(url, {\n      method: 'delete',\n      headers: this._headers\n    }).then(function (response) {\n      return response.json();\n    }).catch(function (err) {\n      return _this4._reportError(err, {\n        url: url,\n        type: 'API_ERROR'\n      });\n    });\n  }\n  /**\n   * Get the current status for an assembly.\n   *\n   * @param {string} url The status endpoint of the assembly.\n   */\n  ;\n\n  _proto.getAssemblyStatus = function getAssemblyStatus(url) {\n    var _this5 = this;\n\n    return fetchWithNetworkError(url, {\n      headers: this._headers\n    }).then(function (response) {\n      return response.json();\n    }).catch(function (err) {\n      return _this5._reportError(err, {\n        url: url,\n        type: 'STATUS_ERROR'\n      });\n    });\n  };\n\n  _proto.submitError = function submitError(err, _ref2) {\n    var endpoint = _ref2.endpoint,\n        instance = _ref2.instance,\n        assembly = _ref2.assembly;\n    var message = err.details ? err.message + \" (\" + err.details + \")\" : err.message;\n    return fetchWithNetworkError('https://transloaditstatus.com/client_error', {\n      method: 'post',\n      body: JSON.stringify({\n        endpoint: endpoint,\n        instance: instance,\n        assembly_id: assembly,\n        agent: typeof navigator !== 'undefined' ? navigator.userAgent : '',\n        client: this.opts.client,\n        error: message\n      })\n    }).then(function (response) {\n      return response.json();\n    });\n  };\n\n  _proto._reportError = function _reportError(err, params) {\n    if (this.opts.errorReporting === false) {\n      throw err;\n    }\n\n    var opts = {\n      type: params.type\n    };\n\n    if (params.assembly) {\n      opts.assembly = params.assembly.assembly_id;\n      opts.instance = params.assembly.instance;\n    }\n\n    if (params.url) {\n      opts.endpoint = params.url;\n    }\n\n    this.submitError(err, opts).catch(function (_) {// not much we can do then is there\n    });\n    throw err;\n  };\n\n  return Client;\n}();"],"mappings":"AAAA,IAAIA,qBAAqB,GAAGC,OAAO,CAAC,uCAAuC,CAAC;AAE5E,IAAIC,GAAG,GAAGD,OAAO,CAAC,WAAW,CAAC;AAC9B;AACA;AACA;;AAGAE,MAAM,CAACC,OAAO,GAAG,aAAa,YAAY;EACxC,SAASC,MAAMA,CAACC,IAAI,EAAE;IACpB,IAAIA,IAAI,KAAK,KAAK,CAAC,EAAE;MACnBA,IAAI,GAAG,CAAC,CAAC;IACX;IAEA,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;IAChD,IAAI,CAACC,QAAQ,GAAG;MACd,oBAAoB,EAAE,IAAI,CAACH,IAAI,CAACI;IAClC,CAAC;EACH;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGE,IAAIC,MAAM,GAAGN,MAAM,CAACO,SAAS;EAE7BD,MAAM,CAACE,cAAc,GAAG,SAASA,cAAcA,CAACC,IAAI,EAAE;IACpD,IAAIC,KAAK,GAAG,IAAI;IAEhB,IAAIC,MAAM,GAAGF,IAAI,CAACE,MAAM;MACpBC,MAAM,GAAGH,IAAI,CAACG,MAAM;MACpBC,SAAS,GAAGJ,IAAI,CAACI,SAAS;MAC1BC,aAAa,GAAGL,IAAI,CAACK,aAAa;IACtC,IAAIC,IAAI,GAAG,IAAIC,QAAQ,EAAE;IACzBD,IAAI,CAACE,MAAM,CAAC,QAAQ,EAAE,OAAON,MAAM,KAAK,QAAQ,GAAGA,MAAM,GAAGO,IAAI,CAACC,SAAS,CAACR,MAAM,CAAC,CAAC;IAEnF,IAAIE,SAAS,EAAE;MACbE,IAAI,CAACE,MAAM,CAAC,WAAW,EAAEJ,SAAS,CAAC;IACrC;IAEAO,MAAM,CAACC,IAAI,CAACT,MAAM,CAAC,CAACU,OAAO,CAAC,UAAUC,GAAG,EAAE;MACzCR,IAAI,CAACE,MAAM,CAACM,GAAG,EAAEX,MAAM,CAACW,GAAG,CAAC,CAAC;IAC/B,CAAC,CAAC;IACFR,IAAI,CAACE,MAAM,CAAC,2BAA2B,EAAEH,aAAa,CAAC;IACvD,IAAIU,GAAG,GAAG,IAAI3B,GAAG,CAAC,aAAa,EAAE,EAAE,GAAG,IAAI,CAACI,IAAI,CAACwB,OAAO,CAAC,CAACC,IAAI;IAC7D,OAAO/B,qBAAqB,CAAC6B,GAAG,EAAE;MAChCG,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE,IAAI,CAACxB,QAAQ;MACtByB,IAAI,EAAEd;IACR,CAAC,CAAC,CAACe,IAAI,CAAC,UAAUC,QAAQ,EAAE;MAC1B,OAAOA,QAAQ,CAACC,IAAI,EAAE;IACxB,CAAC,CAAC,CAACF,IAAI,CAAC,UAAUG,QAAQ,EAAE;MAC1B,IAAIA,QAAQ,CAACC,KAAK,EAAE;QAClB,IAAIA,KAAK,GAAG,IAAIC,KAAK,CAACF,QAAQ,CAACC,KAAK,CAAC;QACrCA,KAAK,CAACE,OAAO,GAAGH,QAAQ,CAACI,OAAO;QAChCH,KAAK,CAACD,QAAQ,GAAGA,QAAQ;QAEzB,IAAIA,QAAQ,CAACK,WAAW,EAAE;UACxBJ,KAAK,CAACE,OAAO,IAAI,GAAG,IAAI,eAAe,GAAGH,QAAQ,CAACK,WAAW,CAAC;QACjE;QAEA,MAAMJ,KAAK;MACb;MAEA,OAAOD,QAAQ;IACjB,CAAC,CAAC,CAACM,KAAK,CAAC,UAAUC,GAAG,EAAE;MACtB,OAAO9B,KAAK,CAACR,YAAY,CAACsC,GAAG,EAAE;QAC7BhB,GAAG,EAAEA,GAAG;QACRiB,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EACA;AACF;AACA;AACA;AACA;AACA,KALE;;EAQAnC,MAAM,CAACoC,WAAW,GAAG,SAASA,WAAWA,CAACT,QAAQ,EAAEU,IAAI,EAAE;IACxD,IAAIC,MAAM,GAAG,IAAI;IAEjB,IAAIC,IAAI,GAAGC,kBAAkB,CAACH,IAAI,CAACE,IAAI,CAAC;IACxC,IAAIrB,GAAG,GAAGS,QAAQ,CAACc,gBAAgB,GAAG,qBAAqB,GAAGF,IAAI;IAClE,OAAOlD,qBAAqB,CAAC6B,GAAG,EAAE;MAChCG,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE,IAAI,CAACxB;IAChB,CAAC,CAAC,CAAC0B,IAAI,CAAC,UAAUC,QAAQ,EAAE;MAC1B,OAAOA,QAAQ,CAACC,IAAI,EAAE;IACxB,CAAC,CAAC,CAACO,KAAK,CAAC,UAAUC,GAAG,EAAE;MACtB,OAAOI,MAAM,CAAC1C,YAAY,CAACsC,GAAG,EAAE;QAC9BP,QAAQ,EAAEA,QAAQ;QAClBU,IAAI,EAAEA,IAAI;QACVnB,GAAG,EAAEA,GAAG;QACRiB,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EACA;AACF;AACA;AACA;AACA;AACA,KALE;;EAQAnC,MAAM,CAAC0C,OAAO,GAAG,SAASA,OAAOA,CAACf,QAAQ,EAAEU,IAAI,EAAE;IAChD,IAAIM,MAAM,GAAG,IAAI;IAEjB,IAAI,CAACN,IAAI,CAACO,SAAS,EAAE;MACnB,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIjB,KAAK,CAAC,oCAAoC,CAAC,CAAC;IACxE;IAEA,IAAIU,IAAI,GAAGC,kBAAkB,CAACH,IAAI,CAACE,IAAI,CAAC;IACxC,IAAIQ,SAAS,GAAGP,kBAAkB,CAACH,IAAI,CAACO,SAAS,CAAC;IAClD,IAAII,QAAQ,GAAGR,kBAAkB,CAACH,IAAI,CAACY,IAAI,CAAC;IAC5C,IAAIC,SAAS,GAAG,MAAM;IACtB,IAAIC,EAAE,GAAG,OAAO,GAAGZ,IAAI,GAAG,YAAY,GAAGS,QAAQ,GAAG,aAAa,GAAGE,SAAS,GAAG,SAAS,GAAGH,SAAS;IACrG,IAAI7B,GAAG,GAAGS,QAAQ,CAACc,gBAAgB,GAAG,YAAY,GAAGU,EAAE;IACvD,OAAO9D,qBAAqB,CAAC6B,GAAG,EAAE;MAChCG,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE,IAAI,CAACxB;IAChB,CAAC,CAAC,CAAC0B,IAAI,CAAC,UAAUC,QAAQ,EAAE;MAC1B,OAAOA,QAAQ,CAACC,IAAI,EAAE;IACxB,CAAC,CAAC,CAACO,KAAK,CAAC,UAAUC,GAAG,EAAE;MACtB,OAAOS,MAAM,CAAC/C,YAAY,CAACsC,GAAG,EAAE;QAC9BP,QAAQ,EAAEA,QAAQ;QAClBU,IAAI,EAAEA,IAAI;QACVnB,GAAG,EAAEA,GAAG;QACRiB,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EACA;AACF;AACA;AACA;AACA,KAJE;;EAOAnC,MAAM,CAACoD,cAAc,GAAG,SAASA,cAAcA,CAACzB,QAAQ,EAAE;IACxD,IAAI0B,MAAM,GAAG,IAAI;IAEjB,IAAInC,GAAG,GAAGS,QAAQ,CAACc,gBAAgB;IACnC,OAAOpD,qBAAqB,CAAC6B,GAAG,EAAE;MAChCG,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE,IAAI,CAACxB;IAChB,CAAC,CAAC,CAAC0B,IAAI,CAAC,UAAUC,QAAQ,EAAE;MAC1B,OAAOA,QAAQ,CAACC,IAAI,EAAE;IACxB,CAAC,CAAC,CAACO,KAAK,CAAC,UAAUC,GAAG,EAAE;MACtB,OAAOmB,MAAM,CAACzD,YAAY,CAACsC,GAAG,EAAE;QAC9BhB,GAAG,EAAEA,GAAG;QACRiB,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EACA;AACF;AACA;AACA;AACA,KAJE;;EAOAnC,MAAM,CAACsD,iBAAiB,GAAG,SAASA,iBAAiBA,CAACpC,GAAG,EAAE;IACzD,IAAIqC,MAAM,GAAG,IAAI;IAEjB,OAAOlE,qBAAqB,CAAC6B,GAAG,EAAE;MAChCI,OAAO,EAAE,IAAI,CAACxB;IAChB,CAAC,CAAC,CAAC0B,IAAI,CAAC,UAAUC,QAAQ,EAAE;MAC1B,OAAOA,QAAQ,CAACC,IAAI,EAAE;IACxB,CAAC,CAAC,CAACO,KAAK,CAAC,UAAUC,GAAG,EAAE;MACtB,OAAOqB,MAAM,CAAC3D,YAAY,CAACsC,GAAG,EAAE;QAC9BhB,GAAG,EAAEA,GAAG;QACRiB,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EAEDnC,MAAM,CAACwD,WAAW,GAAG,SAASA,WAAWA,CAACtB,GAAG,EAAEuB,KAAK,EAAE;IACpD,IAAIC,QAAQ,GAAGD,KAAK,CAACC,QAAQ;MACzBC,QAAQ,GAAGF,KAAK,CAACE,QAAQ;MACzBhC,QAAQ,GAAG8B,KAAK,CAAC9B,QAAQ;IAC7B,IAAII,OAAO,GAAGG,GAAG,CAACJ,OAAO,GAAGI,GAAG,CAACH,OAAO,GAAG,IAAI,GAAGG,GAAG,CAACJ,OAAO,GAAG,GAAG,GAAGI,GAAG,CAACH,OAAO;IAChF,OAAO1C,qBAAqB,CAAC,4CAA4C,EAAE;MACzEgC,MAAM,EAAE,MAAM;MACdE,IAAI,EAAEX,IAAI,CAACC,SAAS,CAAC;QACnB6C,QAAQ,EAAEA,QAAQ;QAClBC,QAAQ,EAAEA,QAAQ;QAClB3B,WAAW,EAAEL,QAAQ;QACrBiC,KAAK,EAAE,OAAOC,SAAS,KAAK,WAAW,GAAGA,SAAS,CAACC,SAAS,GAAG,EAAE;QAClE/D,MAAM,EAAE,IAAI,CAACJ,IAAI,CAACI,MAAM;QACxB6B,KAAK,EAAEG;MACT,CAAC;IACH,CAAC,CAAC,CAACP,IAAI,CAAC,UAAUC,QAAQ,EAAE;MAC1B,OAAOA,QAAQ,CAACC,IAAI,EAAE;IACxB,CAAC,CAAC;EACJ,CAAC;EAED1B,MAAM,CAACJ,YAAY,GAAG,SAASA,YAAYA,CAACsC,GAAG,EAAE7B,MAAM,EAAE;IACvD,IAAI,IAAI,CAACV,IAAI,CAACoE,cAAc,KAAK,KAAK,EAAE;MACtC,MAAM7B,GAAG;IACX;IAEA,IAAIvC,IAAI,GAAG;MACTwC,IAAI,EAAE9B,MAAM,CAAC8B;IACf,CAAC;IAED,IAAI9B,MAAM,CAACsB,QAAQ,EAAE;MACnBhC,IAAI,CAACgC,QAAQ,GAAGtB,MAAM,CAACsB,QAAQ,CAACK,WAAW;MAC3CrC,IAAI,CAACgE,QAAQ,GAAGtD,MAAM,CAACsB,QAAQ,CAACgC,QAAQ;IAC1C;IAEA,IAAItD,MAAM,CAACa,GAAG,EAAE;MACdvB,IAAI,CAAC+D,QAAQ,GAAGrD,MAAM,CAACa,GAAG;IAC5B;IAEA,IAAI,CAACsC,WAAW,CAACtB,GAAG,EAAEvC,IAAI,CAAC,CAACsC,KAAK,CAAC,UAAU+B,CAAC,EAAE,CAAC;IAAA,CAC/C,CAAC;IACF,MAAM9B,GAAG;EACX,CAAC;EAED,OAAOxC,MAAM;AACf,CAAC,EAAE"},"metadata":{},"sourceType":"script"}