{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _setPrototypeOf(subClass, superClass);\n}\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\n/* global AggregateError */\nvar Translator = require('@uppy/utils/lib/Translator');\nvar ee = require('namespace-emitter');\nvar cuid = require('cuid');\nvar throttle = require('lodash.throttle');\nvar prettierBytes = require('@transloadit/prettier-bytes');\nvar match = require('mime-match');\nvar DefaultStore = require('@uppy/store-default');\nvar getFileType = require('@uppy/utils/lib/getFileType');\nvar getFileNameAndExtension = require('@uppy/utils/lib/getFileNameAndExtension');\nvar generateFileID = require('@uppy/utils/lib/generateFileID');\nvar findIndex = require('@uppy/utils/lib/findIndex');\nvar supportsUploadProgress = require('./supportsUploadProgress');\nvar _require = require('./loggers'),\n  justErrorsLogger = _require.justErrorsLogger,\n  debugLogger = _require.debugLogger;\nvar Plugin = require('./Plugin'); // Exported from here.\n\nvar RestrictionError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(RestrictionError, _Error);\n  function RestrictionError() {\n    var _this;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _Error.call.apply(_Error, [this].concat(args)) || this;\n    _this.isRestriction = true;\n    return _this;\n  }\n  return RestrictionError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nif (typeof AggregateError === 'undefined') {\n  // eslint-disable-next-line no-global-assign\n  AggregateError = /*#__PURE__*/function (_Error2) {\n    _inheritsLoose(AggregateError, _Error2);\n    function AggregateError(message, errors) {\n      var _this2;\n      _this2 = _Error2.call(this, message) || this;\n      _this2.errors = errors;\n      return _this2;\n    }\n    return AggregateError;\n  }( /*#__PURE__*/_wrapNativeSuper(Error));\n}\nvar AggregateRestrictionError = /*#__PURE__*/function (_AggregateError) {\n  _inheritsLoose(AggregateRestrictionError, _AggregateError);\n  function AggregateRestrictionError() {\n    var _this3;\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    _this3 = _AggregateError.call.apply(_AggregateError, [this].concat(args)) || this;\n    _this3.isRestriction = true;\n    return _this3;\n  }\n  return AggregateRestrictionError;\n}(AggregateError);\n/**\n * Uppy Core module.\n * Manages plugins, state updates, acts as an event bus,\n * adds/removes files and metadata.\n */\n\nvar Uppy = /*#__PURE__*/function () {\n  // eslint-disable-next-line global-require\n\n  /**\n   * Instantiate Uppy\n   *\n   * @param {object} opts â€” Uppy options\n   */\n  function Uppy(opts) {\n    var _this4 = this;\n    this.defaultLocale = {\n      strings: {\n        addBulkFilesFailed: {\n          0: 'Failed to add %{smart_count} file due to an internal error',\n          1: 'Failed to add %{smart_count} files due to internal errors'\n        },\n        youCanOnlyUploadX: {\n          0: 'You can only upload %{smart_count} file',\n          1: 'You can only upload %{smart_count} files'\n        },\n        youHaveToAtLeastSelectX: {\n          0: 'You have to select at least %{smart_count} file',\n          1: 'You have to select at least %{smart_count} files'\n        },\n        missingRequiredMetaField: 'Missing required meta fields',\n        missingRequiredMetaFieldOnFile: 'Missing required meta fields in %{fileName}',\n        // The default `exceedsSize2` string only combines the `exceedsSize` string (%{backwardsCompat}) with the size.\n        // Locales can override `exceedsSize2` to specify a different word order. This is for backwards compat with\n        // Uppy 1.9.x and below which did a naive concatenation of `exceedsSize2 + size` instead of using a locale-specific\n        // substitution.\n        // TODO: In 2.0 `exceedsSize2` should be removed in and `exceedsSize` updated to use substitution.\n        exceedsSize2: '%{backwardsCompat} %{size}',\n        exceedsSize: '%{file} exceeds maximum allowed size of',\n        inferiorSize: 'This file is smaller than the allowed size of %{size}',\n        youCanOnlyUploadFileTypes: 'You can only upload: %{types}',\n        noNewAlreadyUploading: 'Cannot add new files: already uploading',\n        noDuplicates: 'Cannot add the duplicate file \\'%{fileName}\\', it already exists',\n        companionError: 'Connection with Companion failed',\n        companionUnauthorizeHint: 'To unauthorize to your %{provider} account, please go to %{url}',\n        failedToUpload: 'Failed to upload %{file}',\n        noInternetConnection: 'No Internet connection',\n        connectedToInternet: 'Connected to the Internet',\n        // Strings for remote providers\n        noFilesFound: 'You have no files or folders here',\n        selectX: {\n          0: 'Select %{smart_count}',\n          1: 'Select %{smart_count}'\n        },\n        selectAllFilesFromFolderNamed: 'Select all files from folder %{name}',\n        unselectAllFilesFromFolderNamed: 'Unselect all files from folder %{name}',\n        selectFileNamed: 'Select file %{name}',\n        unselectFileNamed: 'Unselect file %{name}',\n        openFolderNamed: 'Open folder %{name}',\n        cancel: 'Cancel',\n        logOut: 'Log out',\n        filter: 'Filter',\n        resetFilter: 'Reset filter',\n        loading: 'Loading...',\n        authenticateWithTitle: 'Please authenticate with %{pluginName} to select files',\n        authenticateWith: 'Connect to %{pluginName}',\n        searchImages: 'Search for images',\n        enterTextToSearch: 'Enter text to search for images',\n        backToSearch: 'Back to Search',\n        emptyFolderAdded: 'No files were added from empty folder',\n        folderAdded: {\n          0: 'Added %{smart_count} file from %{folder}',\n          1: 'Added %{smart_count} files from %{folder}'\n        }\n      }\n    };\n    var defaultOptions = {\n      id: 'uppy',\n      autoProceed: false,\n      allowMultipleUploads: true,\n      debug: false,\n      restrictions: {\n        maxFileSize: null,\n        minFileSize: null,\n        maxTotalFileSize: null,\n        maxNumberOfFiles: null,\n        minNumberOfFiles: null,\n        allowedFileTypes: null,\n        requiredMetaFields: []\n      },\n      meta: {},\n      onBeforeFileAdded: function onBeforeFileAdded(currentFile) {\n        return currentFile;\n      },\n      onBeforeUpload: function onBeforeUpload(files) {\n        return files;\n      },\n      store: DefaultStore(),\n      logger: justErrorsLogger,\n      infoTimeout: 5000\n    }; // Merge default options with the ones set by user,\n    // making sure to merge restrictions too\n\n    this.opts = _extends({}, defaultOptions, opts, {\n      restrictions: _extends({}, defaultOptions.restrictions, opts && opts.restrictions)\n    }); // Support debug: true for backwards-compatability, unless logger is set in opts\n    // opts instead of this.opts to avoid comparing objects â€” we set logger: justErrorsLogger in defaultOptions\n\n    if (opts && opts.logger && opts.debug) {\n      this.log('You are using a custom `logger`, but also set `debug: true`, which uses built-in logger to output logs to console. Ignoring `debug: true` and using your custom `logger`.', 'warning');\n    } else if (opts && opts.debug) {\n      this.opts.logger = debugLogger;\n    }\n    this.log(\"Using Core v\" + this.constructor.VERSION);\n    if (this.opts.restrictions.allowedFileTypes && this.opts.restrictions.allowedFileTypes !== null && !Array.isArray(this.opts.restrictions.allowedFileTypes)) {\n      throw new TypeError('`restrictions.allowedFileTypes` must be an array');\n    }\n    this.i18nInit(); // Container for different types of plugins\n\n    this.plugins = {};\n    this.getState = this.getState.bind(this);\n    this.getPlugin = this.getPlugin.bind(this);\n    this.setFileMeta = this.setFileMeta.bind(this);\n    this.setFileState = this.setFileState.bind(this);\n    this.log = this.log.bind(this);\n    this.info = this.info.bind(this);\n    this.hideInfo = this.hideInfo.bind(this);\n    this.addFile = this.addFile.bind(this);\n    this.removeFile = this.removeFile.bind(this);\n    this.pauseResume = this.pauseResume.bind(this);\n    this.validateRestrictions = this.validateRestrictions.bind(this); // ___Why throttle at 500ms?\n    //    - We must throttle at >250ms for superfocus in Dashboard to work well\n    //    (because animation takes 0.25s, and we want to wait for all animations to be over before refocusing).\n    //    [Practical Check]: if thottle is at 100ms, then if you are uploading a file,\n    //    and click 'ADD MORE FILES', - focus won't activate in Firefox.\n    //    - We must throttle at around >500ms to avoid performance lags.\n    //    [Practical Check] Firefox, try to upload a big file for a prolonged period of time. Laptop will start to heat up.\n\n    this.calculateProgress = throttle(this.calculateProgress.bind(this), 500, {\n      leading: true,\n      trailing: true\n    });\n    this.updateOnlineStatus = this.updateOnlineStatus.bind(this);\n    this.resetProgress = this.resetProgress.bind(this);\n    this.pauseAll = this.pauseAll.bind(this);\n    this.resumeAll = this.resumeAll.bind(this);\n    this.retryAll = this.retryAll.bind(this);\n    this.cancelAll = this.cancelAll.bind(this);\n    this.retryUpload = this.retryUpload.bind(this);\n    this.upload = this.upload.bind(this);\n    this.emitter = ee();\n    this.on = this.on.bind(this);\n    this.off = this.off.bind(this);\n    this.once = this.emitter.once.bind(this.emitter);\n    this.emit = this.emitter.emit.bind(this.emitter);\n    this.preProcessors = [];\n    this.uploaders = [];\n    this.postProcessors = [];\n    this.store = this.opts.store;\n    this.setState({\n      plugins: {},\n      files: {},\n      currentUploads: {},\n      allowNewUpload: true,\n      capabilities: {\n        uploadProgress: supportsUploadProgress(),\n        individualCancellation: true,\n        resumableUploads: false\n      },\n      totalProgress: 0,\n      meta: _extends({}, this.opts.meta),\n      info: {\n        isHidden: true,\n        type: 'info',\n        message: ''\n      },\n      recoveredState: null\n    });\n    this.storeUnsubscribe = this.store.subscribe(function (prevState, nextState, patch) {\n      _this4.emit('state-update', prevState, nextState, patch);\n      _this4.updateAll(nextState);\n    }); // Exposing uppy object on window for debugging and testing\n\n    if (this.opts.debug && typeof window !== 'undefined') {\n      window[this.opts.id] = this;\n    }\n    this.addListeners(); // Re-enable if weâ€™ll need some capabilities on boot, like isMobileDevice\n    // this._setCapabilities()\n  } // _setCapabilities = () => {\n  //   const capabilities = {\n  //     isMobileDevice: isMobileDevice()\n  //   }\n  //   this.setState({\n  //     ...this.getState().capabilities,\n  //     capabilities\n  //   })\n  // }\n\n  var _proto = Uppy.prototype;\n  _proto.on = function on(event, callback) {\n    this.emitter.on(event, callback);\n    return this;\n  };\n  _proto.off = function off(event, callback) {\n    this.emitter.off(event, callback);\n    return this;\n  }\n  /**\n   * Iterate on all plugins and run `update` on them.\n   * Called each time state changes.\n   *\n   */;\n\n  _proto.updateAll = function updateAll(state) {\n    this.iteratePlugins(function (plugin) {\n      plugin.update(state);\n    });\n  }\n  /**\n   * Updates state with a patch\n   *\n   * @param {object} patch {foo: 'bar'}\n   */;\n\n  _proto.setState = function setState(patch) {\n    this.store.setState(patch);\n  }\n  /**\n   * Returns current state.\n   *\n   * @returns {object}\n   */;\n\n  _proto.getState = function getState() {\n    return this.store.getState();\n  }\n  /**\n   * Back compat for when uppy.state is used instead of uppy.getState().\n   * @deprecated\n   */;\n\n  /**\n   * Shorthand to set state for a specific file.\n   */\n  _proto.setFileState = function setFileState(fileID, state) {\n    var _extends2;\n    if (!this.getState().files[fileID]) {\n      throw new Error(\"Can\\u2019t set state for \" + fileID + \" (the file could have been removed)\");\n    }\n    this.setState({\n      files: _extends({}, this.getState().files, (_extends2 = {}, _extends2[fileID] = _extends({}, this.getState().files[fileID], state), _extends2))\n    });\n  };\n  _proto.i18nInit = function i18nInit() {\n    this.translator = new Translator([this.defaultLocale, this.opts.locale]);\n    this.locale = this.translator.locale;\n    this.i18n = this.translator.translate.bind(this.translator);\n    this.i18nArray = this.translator.translateArray.bind(this.translator);\n  };\n  _proto.setOptions = function setOptions(newOpts) {\n    this.opts = _extends({}, this.opts, newOpts, {\n      restrictions: _extends({}, this.opts.restrictions, newOpts && newOpts.restrictions)\n    });\n    if (newOpts.meta) {\n      this.setMeta(newOpts.meta);\n    }\n    this.i18nInit();\n    if (newOpts.locale) {\n      this.iteratePlugins(function (plugin) {\n        plugin.setOptions();\n      });\n    } // Note: this is not the preact `setState`, it's an internal function that has the same name.\n\n    this.setState(); // so that UI re-renders with new options\n  };\n\n  _proto.resetProgress = function resetProgress() {\n    var defaultProgress = {\n      percentage: 0,\n      bytesUploaded: 0,\n      uploadComplete: false,\n      uploadStarted: null\n    };\n    var files = _extends({}, this.getState().files);\n    var updatedFiles = {};\n    Object.keys(files).forEach(function (fileID) {\n      var updatedFile = _extends({}, files[fileID]);\n      updatedFile.progress = _extends({}, updatedFile.progress, defaultProgress);\n      updatedFiles[fileID] = updatedFile;\n    });\n    this.setState({\n      files: updatedFiles,\n      totalProgress: 0\n    });\n    this.emit('reset-progress');\n  };\n  _proto.addPreProcessor = function addPreProcessor(fn) {\n    this.preProcessors.push(fn);\n  };\n  _proto.removePreProcessor = function removePreProcessor(fn) {\n    var i = this.preProcessors.indexOf(fn);\n    if (i !== -1) {\n      this.preProcessors.splice(i, 1);\n    }\n  };\n  _proto.addPostProcessor = function addPostProcessor(fn) {\n    this.postProcessors.push(fn);\n  };\n  _proto.removePostProcessor = function removePostProcessor(fn) {\n    var i = this.postProcessors.indexOf(fn);\n    if (i !== -1) {\n      this.postProcessors.splice(i, 1);\n    }\n  };\n  _proto.addUploader = function addUploader(fn) {\n    this.uploaders.push(fn);\n  };\n  _proto.removeUploader = function removeUploader(fn) {\n    var i = this.uploaders.indexOf(fn);\n    if (i !== -1) {\n      this.uploaders.splice(i, 1);\n    }\n  };\n  _proto.setMeta = function setMeta(data) {\n    var updatedMeta = _extends({}, this.getState().meta, data);\n    var updatedFiles = _extends({}, this.getState().files);\n    Object.keys(updatedFiles).forEach(function (fileID) {\n      updatedFiles[fileID] = _extends({}, updatedFiles[fileID], {\n        meta: _extends({}, updatedFiles[fileID].meta, data)\n      });\n    });\n    this.log('Adding metadata:');\n    this.log(data);\n    this.setState({\n      meta: updatedMeta,\n      files: updatedFiles\n    });\n  };\n  _proto.setFileMeta = function setFileMeta(fileID, data) {\n    var updatedFiles = _extends({}, this.getState().files);\n    if (!updatedFiles[fileID]) {\n      this.log('Was trying to set metadata for a file that has been removed: ', fileID);\n      return;\n    }\n    var newMeta = _extends({}, updatedFiles[fileID].meta, data);\n    updatedFiles[fileID] = _extends({}, updatedFiles[fileID], {\n      meta: newMeta\n    });\n    this.setState({\n      files: updatedFiles\n    });\n  }\n  /**\n   * Get a file object.\n   *\n   * @param {string} fileID The ID of the file object to return.\n   */;\n\n  _proto.getFile = function getFile(fileID) {\n    return this.getState().files[fileID];\n  }\n  /**\n   * Get all files in an array.\n   */;\n\n  _proto.getFiles = function getFiles() {\n    var _this$getState = this.getState(),\n      files = _this$getState.files;\n    return Object.keys(files).map(function (fileID) {\n      return files[fileID];\n    });\n  }\n  /**\n   * A public wrapper for _checkRestrictions â€” checks if a file passes a set of restrictions.\n   * For use in UI pluigins (like Providers), to disallow selecting files that wonâ€™t pass restrictions.\n   *\n   * @param {object} file object to check\n   * @param {Array} [files] array to check maxNumberOfFiles and maxTotalFileSize\n   * @returns {object} { result: true/false, reason: why file didnâ€™t pass restrictions }\n   */;\n\n  _proto.validateRestrictions = function validateRestrictions(file, files) {\n    try {\n      this.checkRestrictions(file, files);\n      return {\n        result: true\n      };\n    } catch (err) {\n      return {\n        result: false,\n        reason: err.message\n      };\n    }\n  }\n  /**\n   * Check if file passes a set of restrictions set in options: maxFileSize, minFileSize,\n   * maxNumberOfFiles and allowedFileTypes.\n   *\n   * @param {object} file object to check\n   * @param {Array} [files] array to check maxNumberOfFiles and maxTotalFileSize\n   * @private\n   */;\n\n  _proto.checkRestrictions = function checkRestrictions(file, files) {\n    if (files === void 0) {\n      files = this.getFiles();\n    }\n    var _this$opts$restrictio = this.opts.restrictions,\n      maxFileSize = _this$opts$restrictio.maxFileSize,\n      minFileSize = _this$opts$restrictio.minFileSize,\n      maxTotalFileSize = _this$opts$restrictio.maxTotalFileSize,\n      maxNumberOfFiles = _this$opts$restrictio.maxNumberOfFiles,\n      allowedFileTypes = _this$opts$restrictio.allowedFileTypes;\n    if (maxNumberOfFiles) {\n      if (files.length + 1 > maxNumberOfFiles) {\n        throw new RestrictionError(\"\" + this.i18n('youCanOnlyUploadX', {\n          smart_count: maxNumberOfFiles\n        }));\n      }\n    }\n    if (allowedFileTypes) {\n      var isCorrectFileType = allowedFileTypes.some(function (type) {\n        // check if this is a mime-type\n        if (type.indexOf('/') > -1) {\n          if (!file.type) return false;\n          return match(file.type.replace(/;.*?$/, ''), type);\n        } // otherwise this is likely an extension\n\n        if (type[0] === '.' && file.extension) {\n          return file.extension.toLowerCase() === type.substr(1).toLowerCase();\n        }\n        return false;\n      });\n      if (!isCorrectFileType) {\n        var allowedFileTypesString = allowedFileTypes.join(', ');\n        throw new RestrictionError(this.i18n('youCanOnlyUploadFileTypes', {\n          types: allowedFileTypesString\n        }));\n      }\n    } // We can't check maxTotalFileSize if the size is unknown.\n\n    if (maxTotalFileSize && file.size != null) {\n      var totalFilesSize = 0;\n      totalFilesSize += file.size;\n      files.forEach(function (f) {\n        totalFilesSize += f.size;\n      });\n      if (totalFilesSize > maxTotalFileSize) {\n        throw new RestrictionError(this.i18n('exceedsSize2', {\n          backwardsCompat: this.i18n('exceedsSize'),\n          size: prettierBytes(maxTotalFileSize),\n          file: file.name\n        }));\n      }\n    } // We can't check maxFileSize if the size is unknown.\n\n    if (maxFileSize && file.size != null) {\n      if (file.size > maxFileSize) {\n        throw new RestrictionError(this.i18n('exceedsSize2', {\n          backwardsCompat: this.i18n('exceedsSize'),\n          size: prettierBytes(maxFileSize),\n          file: file.name\n        }));\n      }\n    } // We can't check minFileSize if the size is unknown.\n\n    if (minFileSize && file.size != null) {\n      if (file.size < minFileSize) {\n        throw new RestrictionError(this.i18n('inferiorSize', {\n          size: prettierBytes(minFileSize)\n        }));\n      }\n    }\n  }\n  /**\n   * Check if minNumberOfFiles restriction is reached before uploading.\n   *\n   * @private\n   */;\n\n  _proto.checkMinNumberOfFiles = function checkMinNumberOfFiles(files) {\n    var minNumberOfFiles = this.opts.restrictions.minNumberOfFiles;\n    if (Object.keys(files).length < minNumberOfFiles) {\n      throw new RestrictionError(\"\" + this.i18n('youHaveToAtLeastSelectX', {\n        smart_count: minNumberOfFiles\n      }));\n    }\n  }\n  /**\n   * Check if requiredMetaField restriction is met before uploading.\n   *\n   * @private\n   */;\n\n  _proto.checkRequiredMetaFields = function checkRequiredMetaFields(files) {\n    var requiredMetaFields = this.opts.restrictions.requiredMetaFields;\n    var hasOwnProperty = Object.prototype.hasOwnProperty.hasOwnProperty;\n    var errors = [];\n    var fileIDs = Object.keys(files);\n    for (var i = 0; i < fileIDs.length; i++) {\n      var file = this.getFile(fileIDs[i]);\n      for (var _i = 0; _i < requiredMetaFields.length; _i++) {\n        if (!hasOwnProperty.call(file.meta, requiredMetaFields[_i])) {\n          var err = new RestrictionError(\"\" + this.i18n('missingRequiredMetaFieldOnFile', {\n            fileName: file.name\n          }));\n          errors.push(err);\n          this.showOrLogErrorAndThrow(err, {\n            file: file,\n            throwErr: false\n          });\n        }\n      }\n    }\n    if (errors.length) {\n      throw new AggregateRestrictionError(\"\" + this.i18n('missingRequiredMetaField'), errors);\n    }\n  }\n  /**\n   * Logs an error, sets Informer message, then throws the error.\n   * Emits a 'restriction-failed' event if itâ€™s a restriction error\n   *\n   * @param {object | string} err â€” Error object or plain string message\n   * @param {object} [options]\n   * @param {boolean} [options.showInformer=true] â€” Sometimes developer might want to show Informer manually\n   * @param {object} [options.file=null] â€” File object used to emit the restriction error\n   * @param {boolean} [options.throwErr=true] â€” Errors shouldnâ€™t be thrown, for example, in `upload-error` event\n   * @private\n   */;\n\n  _proto.showOrLogErrorAndThrow = function showOrLogErrorAndThrow(err, _temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n      _ref$showInformer = _ref.showInformer,\n      showInformer = _ref$showInformer === void 0 ? true : _ref$showInformer,\n      _ref$file = _ref.file,\n      file = _ref$file === void 0 ? null : _ref$file,\n      _ref$throwErr = _ref.throwErr,\n      throwErr = _ref$throwErr === void 0 ? true : _ref$throwErr;\n    var message = typeof err === 'object' ? err.message : err;\n    var details = typeof err === 'object' && err.details ? err.details : ''; // Restriction errors should be logged, but not as errors,\n    // as they are expected and shown in the UI.\n\n    var logMessageWithDetails = message;\n    if (details) {\n      logMessageWithDetails += \" \" + details;\n    }\n    if (err.isRestriction) {\n      this.log(logMessageWithDetails);\n      this.emit('restriction-failed', file, err);\n    } else {\n      this.log(logMessageWithDetails, 'error');\n    } // Sometimes informer has to be shown manually by the developer,\n    // for example, in `onBeforeFileAdded`.\n\n    if (showInformer) {\n      this.info({\n        message: message,\n        details: details\n      }, 'error', this.opts.infoTimeout);\n    }\n    if (throwErr) {\n      throw typeof err === 'object' ? err : new Error(err);\n    }\n  };\n  _proto.assertNewUploadAllowed = function assertNewUploadAllowed(file) {\n    var _this$getState2 = this.getState(),\n      allowNewUpload = _this$getState2.allowNewUpload;\n    if (allowNewUpload === false) {\n      this.showOrLogErrorAndThrow(new RestrictionError(this.i18n('noNewAlreadyUploading')), {\n        file: file\n      });\n    }\n  }\n  /**\n   * Create a file state object based on user-provided `addFile()` options.\n   *\n   * Note this is extremely side-effectful and should only be done when a file state object will be added to state immediately afterward!\n   *\n   * The `files` value is passed in because it may be updated by the caller without updating the store.\n   */;\n\n  _proto.checkAndCreateFileStateObject = function checkAndCreateFileStateObject(files, f) {\n    var fileType = getFileType(f);\n    var file = f;\n    file.type = fileType;\n    var onBeforeFileAddedResult = this.opts.onBeforeFileAdded(file, files);\n    if (onBeforeFileAddedResult === false) {\n      // Donâ€™t show UI info for this error, as it should be done by the developer\n      this.showOrLogErrorAndThrow(new RestrictionError('Cannot add the file because onBeforeFileAdded returned false.'), {\n        showInformer: false,\n        file: file\n      });\n    }\n    if (typeof onBeforeFileAddedResult === 'object' && onBeforeFileAddedResult) {\n      file = onBeforeFileAddedResult;\n    }\n    var fileName;\n    if (file.name) {\n      fileName = file.name;\n    } else if (fileType.split('/')[0] === 'image') {\n      fileName = fileType.split('/')[0] + \".\" + fileType.split('/')[1];\n    } else {\n      fileName = 'noname';\n    }\n    var fileExtension = getFileNameAndExtension(fileName).extension;\n    var isRemote = file.isRemote || false;\n    var fileID = generateFileID(file);\n    if (files[fileID] && !files[fileID].isGhost) {\n      this.showOrLogErrorAndThrow(new RestrictionError(this.i18n('noDuplicates', {\n        fileName: fileName\n      })), {\n        file: file\n      });\n    }\n    var meta = file.meta || {};\n    meta.name = fileName;\n    meta.type = fileType; // `null` means the size is unknown.\n\n    var size = Number.isFinite(file.data.size) ? file.data.size : null;\n    var newFile = {\n      source: file.source || '',\n      id: fileID,\n      name: fileName,\n      extension: fileExtension || '',\n      meta: _extends({}, this.getState().meta, meta),\n      type: fileType,\n      data: file.data,\n      progress: {\n        percentage: 0,\n        bytesUploaded: 0,\n        bytesTotal: size,\n        uploadComplete: false,\n        uploadStarted: null\n      },\n      size: size,\n      isRemote: isRemote,\n      remote: file.remote || '',\n      preview: file.preview\n    };\n    try {\n      var filesArray = Object.keys(files).map(function (i) {\n        return files[i];\n      });\n      this.checkRestrictions(newFile, filesArray);\n    } catch (err) {\n      this.showOrLogErrorAndThrow(err, {\n        file: newFile\n      });\n    }\n    return newFile;\n  } // Schedule an upload if `autoProceed` is enabled.\n  ;\n\n  _proto.startIfAutoProceed = function startIfAutoProceed() {\n    var _this5 = this;\n    if (this.opts.autoProceed && !this.scheduledAutoProceed) {\n      this.scheduledAutoProceed = setTimeout(function () {\n        _this5.scheduledAutoProceed = null;\n        _this5.upload().catch(function (err) {\n          if (!err.isRestriction) {\n            _this5.log(err.stack || err.message || err);\n          }\n        });\n      }, 4);\n    }\n  }\n  /**\n   * Add a new file to `state.files`. This will run `onBeforeFileAdded`,\n   * try to guess file type in a clever way, check file against restrictions,\n   * and start an upload if `autoProceed === true`.\n   *\n   * @param {object} file object to add\n   * @returns {string} id for the added file\n   */;\n\n  _proto.addFile = function addFile(file) {\n    var _extends3;\n    this.assertNewUploadAllowed(file);\n    var _this$getState3 = this.getState(),\n      files = _this$getState3.files;\n    var newFile = this.checkAndCreateFileStateObject(files, file); // Users are asked to re-select recovered files without data,\n    // and to keep the progress, meta and everthing else, we only replace said data\n\n    if (files[newFile.id] && files[newFile.id].isGhost) {\n      newFile = _extends({}, files[newFile.id], {\n        data: file.data,\n        isGhost: false\n      });\n      this.log(\"Replaced the blob in the restored ghost file: \" + newFile.name + \", \" + newFile.id);\n    }\n    this.setState({\n      files: _extends({}, files, (_extends3 = {}, _extends3[newFile.id] = newFile, _extends3))\n    });\n    this.emit('file-added', newFile);\n    this.emit('files-added', [newFile]);\n    this.log(\"Added file: \" + newFile.name + \", \" + newFile.id + \", mime type: \" + newFile.type);\n    this.startIfAutoProceed();\n    return newFile.id;\n  }\n  /**\n   * Add multiple files to `state.files`. See the `addFile()` documentation.\n   *\n   * If an error occurs while adding a file, it is logged and the user is notified.\n   * This is good for UI plugins, but not for programmatic use.\n   * Programmatic users should usually still use `addFile()` on individual files.\n   */;\n\n  _proto.addFiles = function addFiles(fileDescriptors) {\n    var _this6 = this;\n    this.assertNewUploadAllowed(); // create a copy of the files object only once\n\n    var files = _extends({}, this.getState().files);\n    var newFiles = [];\n    var errors = [];\n    for (var i = 0; i < fileDescriptors.length; i++) {\n      try {\n        var newFile = this.checkAndCreateFileStateObject(files, fileDescriptors[i]); // Users are asked to re-select recovered files without data,\n        // and to keep the progress, meta and everthing else, we only replace said data\n\n        if (files[newFile.id] && files[newFile.id].isGhost) {\n          newFile = _extends({}, files[newFile.id], {\n            data: fileDescriptors[i].data,\n            isGhost: false\n          });\n          this.log(\"Replaced blob in a ghost file: \" + newFile.name + \", \" + newFile.id);\n        }\n        files[newFile.id] = newFile;\n        newFiles.push(newFile);\n      } catch (err) {\n        if (!err.isRestriction) {\n          errors.push(err);\n        }\n      }\n    }\n    this.setState({\n      files: files\n    });\n    newFiles.forEach(function (newFile) {\n      _this6.emit('file-added', newFile);\n    });\n    this.emit('files-added', newFiles);\n    if (newFiles.length > 5) {\n      this.log(\"Added batch of \" + newFiles.length + \" files\");\n    } else {\n      Object.keys(newFiles).forEach(function (fileID) {\n        _this6.log(\"Added file: \" + newFiles[fileID].name + \"\\n id: \" + newFiles[fileID].id + \"\\n type: \" + newFiles[fileID].type);\n      });\n    }\n    if (newFiles.length > 0) {\n      this.startIfAutoProceed();\n    }\n    if (errors.length > 0) {\n      var message = 'Multiple errors occurred while adding files:\\n';\n      errors.forEach(function (subError) {\n        message += \"\\n * \" + subError.message;\n      });\n      this.info({\n        message: this.i18n('addBulkFilesFailed', {\n          smart_count: errors.length\n        }),\n        details: message\n      }, 'error', this.opts.infoTimeout);\n      if (typeof AggregateError === 'function') {\n        throw new AggregateError(errors, message);\n      } else {\n        var err = new Error(message);\n        err.errors = errors;\n        throw err;\n      }\n    }\n  };\n  _proto.removeFiles = function removeFiles(fileIDs, reason) {\n    var _this7 = this;\n    var _this$getState4 = this.getState(),\n      files = _this$getState4.files,\n      currentUploads = _this$getState4.currentUploads;\n    var updatedFiles = _extends({}, files);\n    var updatedUploads = _extends({}, currentUploads);\n    var removedFiles = Object.create(null);\n    fileIDs.forEach(function (fileID) {\n      if (files[fileID]) {\n        removedFiles[fileID] = files[fileID];\n        delete updatedFiles[fileID];\n      }\n    }); // Remove files from the `fileIDs` list in each upload.\n\n    function fileIsNotRemoved(uploadFileID) {\n      return removedFiles[uploadFileID] === undefined;\n    }\n    Object.keys(updatedUploads).forEach(function (uploadID) {\n      var newFileIDs = currentUploads[uploadID].fileIDs.filter(fileIsNotRemoved); // Remove the upload if no files are associated with it anymore.\n\n      if (newFileIDs.length === 0) {\n        delete updatedUploads[uploadID];\n        return;\n      }\n      updatedUploads[uploadID] = _extends({}, currentUploads[uploadID], {\n        fileIDs: newFileIDs\n      });\n    });\n    var stateUpdate = {\n      currentUploads: updatedUploads,\n      files: updatedFiles\n    }; // If all files were removed - allow new uploads,\n    // and clear recoveredState\n\n    if (Object.keys(updatedFiles).length === 0) {\n      stateUpdate.allowNewUpload = true;\n      stateUpdate.error = null;\n      stateUpdate.recoveredState = null;\n    }\n    this.setState(stateUpdate);\n    this.calculateTotalProgress();\n    var removedFileIDs = Object.keys(removedFiles);\n    removedFileIDs.forEach(function (fileID) {\n      _this7.emit('file-removed', removedFiles[fileID], reason);\n    });\n    if (removedFileIDs.length > 5) {\n      this.log(\"Removed \" + removedFileIDs.length + \" files\");\n    } else {\n      this.log(\"Removed files: \" + removedFileIDs.join(', '));\n    }\n  };\n  _proto.removeFile = function removeFile(fileID, reason) {\n    if (reason === void 0) {\n      reason = null;\n    }\n    this.removeFiles([fileID], reason);\n  };\n  _proto.pauseResume = function pauseResume(fileID) {\n    if (!this.getState().capabilities.resumableUploads || this.getFile(fileID).uploadComplete) {\n      return undefined;\n    }\n    var wasPaused = this.getFile(fileID).isPaused || false;\n    var isPaused = !wasPaused;\n    this.setFileState(fileID, {\n      isPaused: isPaused\n    });\n    this.emit('upload-pause', fileID, isPaused);\n    return isPaused;\n  };\n  _proto.pauseAll = function pauseAll() {\n    var updatedFiles = _extends({}, this.getState().files);\n    var inProgressUpdatedFiles = Object.keys(updatedFiles).filter(function (file) {\n      return !updatedFiles[file].progress.uploadComplete && updatedFiles[file].progress.uploadStarted;\n    });\n    inProgressUpdatedFiles.forEach(function (file) {\n      var updatedFile = _extends({}, updatedFiles[file], {\n        isPaused: true\n      });\n      updatedFiles[file] = updatedFile;\n    });\n    this.setState({\n      files: updatedFiles\n    });\n    this.emit('pause-all');\n  };\n  _proto.resumeAll = function resumeAll() {\n    var updatedFiles = _extends({}, this.getState().files);\n    var inProgressUpdatedFiles = Object.keys(updatedFiles).filter(function (file) {\n      return !updatedFiles[file].progress.uploadComplete && updatedFiles[file].progress.uploadStarted;\n    });\n    inProgressUpdatedFiles.forEach(function (file) {\n      var updatedFile = _extends({}, updatedFiles[file], {\n        isPaused: false,\n        error: null\n      });\n      updatedFiles[file] = updatedFile;\n    });\n    this.setState({\n      files: updatedFiles\n    });\n    this.emit('resume-all');\n  };\n  _proto.retryAll = function retryAll() {\n    var updatedFiles = _extends({}, this.getState().files);\n    var filesToRetry = Object.keys(updatedFiles).filter(function (file) {\n      return updatedFiles[file].error;\n    });\n    filesToRetry.forEach(function (file) {\n      var updatedFile = _extends({}, updatedFiles[file], {\n        isPaused: false,\n        error: null\n      });\n      updatedFiles[file] = updatedFile;\n    });\n    this.setState({\n      files: updatedFiles,\n      error: null\n    });\n    this.emit('retry-all', filesToRetry);\n    if (filesToRetry.length === 0) {\n      return Promise.resolve({\n        successful: [],\n        failed: []\n      });\n    }\n    var uploadID = this.createUpload(filesToRetry, {\n      forceAllowNewUpload: true // create new upload even if allowNewUpload: false\n    });\n\n    return this.runUpload(uploadID);\n  };\n  _proto.cancelAll = function cancelAll() {\n    this.emit('cancel-all');\n    var _this$getState5 = this.getState(),\n      files = _this$getState5.files;\n    var fileIDs = Object.keys(files);\n    if (fileIDs.length) {\n      this.removeFiles(fileIDs, 'cancel-all');\n    }\n    this.setState({\n      totalProgress: 0,\n      error: null,\n      recoveredState: null\n    });\n  };\n  _proto.retryUpload = function retryUpload(fileID) {\n    this.setFileState(fileID, {\n      error: null,\n      isPaused: false\n    });\n    this.emit('upload-retry', fileID);\n    var uploadID = this.createUpload([fileID], {\n      forceAllowNewUpload: true // create new upload even if allowNewUpload: false\n    });\n\n    return this.runUpload(uploadID);\n  };\n  _proto.reset = function reset() {\n    this.cancelAll();\n  };\n  _proto.logout = function logout() {\n    this.iteratePlugins(function (plugin) {\n      if (plugin.provider && plugin.provider.logout) {\n        plugin.provider.logout();\n      }\n    });\n  };\n  _proto.calculateProgress = function calculateProgress(file, data) {\n    if (!this.getFile(file.id)) {\n      this.log(\"Not setting progress for a file that has been removed: \" + file.id);\n      return;\n    } // bytesTotal may be null or zero; in that case we can't divide by it\n\n    var canHavePercentage = Number.isFinite(data.bytesTotal) && data.bytesTotal > 0;\n    this.setFileState(file.id, {\n      progress: _extends({}, this.getFile(file.id).progress, {\n        bytesUploaded: data.bytesUploaded,\n        bytesTotal: data.bytesTotal,\n        percentage: canHavePercentage // TODO(goto-bus-stop) flooring this should probably be the choice of the UI?\n        // we get more accurate calculations if we don't round this at all.\n        ? Math.round(data.bytesUploaded / data.bytesTotal * 100) : 0\n      })\n    });\n    this.calculateTotalProgress();\n  };\n  _proto.calculateTotalProgress = function calculateTotalProgress() {\n    // calculate total progress, using the number of files currently uploading,\n    // multiplied by 100 and the summ of individual progress of each file\n    var files = this.getFiles();\n    var inProgress = files.filter(function (file) {\n      return file.progress.uploadStarted || file.progress.preprocess || file.progress.postprocess;\n    });\n    if (inProgress.length === 0) {\n      this.emit('progress', 0);\n      this.setState({\n        totalProgress: 0\n      });\n      return;\n    }\n    var sizedFiles = inProgress.filter(function (file) {\n      return file.progress.bytesTotal != null;\n    });\n    var unsizedFiles = inProgress.filter(function (file) {\n      return file.progress.bytesTotal == null;\n    });\n    if (sizedFiles.length === 0) {\n      var progressMax = inProgress.length * 100;\n      var currentProgress = unsizedFiles.reduce(function (acc, file) {\n        return acc + file.progress.percentage;\n      }, 0);\n      var _totalProgress = Math.round(currentProgress / progressMax * 100);\n      this.setState({\n        totalProgress: _totalProgress\n      });\n      return;\n    }\n    var totalSize = sizedFiles.reduce(function (acc, file) {\n      return acc + file.progress.bytesTotal;\n    }, 0);\n    var averageSize = totalSize / sizedFiles.length;\n    totalSize += averageSize * unsizedFiles.length;\n    var uploadedSize = 0;\n    sizedFiles.forEach(function (file) {\n      uploadedSize += file.progress.bytesUploaded;\n    });\n    unsizedFiles.forEach(function (file) {\n      uploadedSize += averageSize * (file.progress.percentage || 0) / 100;\n    });\n    var totalProgress = totalSize === 0 ? 0 : Math.round(uploadedSize / totalSize * 100); // hot fix, because:\n    // uploadedSize ended up larger than totalSize, resulting in 1325% total\n\n    if (totalProgress > 100) {\n      totalProgress = 100;\n    }\n    this.setState({\n      totalProgress: totalProgress\n    });\n    this.emit('progress', totalProgress);\n  }\n  /**\n   * Registers listeners for all global actions, like:\n   * `error`, `file-removed`, `upload-progress`\n   */;\n\n  _proto.addListeners = function addListeners() {\n    var _this8 = this;\n\n    /**\n     * @param {Error} error\n     * @param {object} [file]\n     * @param {object} [response]\n     */\n    var errorHandler = function errorHandler(error, file, response) {\n      var errorMsg = error.message || 'Unknown error';\n      if (error.details) {\n        errorMsg += \" \" + error.details;\n      }\n      _this8.setState({\n        error: errorMsg\n      }); // When a file is also given, we store the error on the file object.\n\n      if (file != null && typeof file.id === 'string') {\n        _this8.setFileState(file.id, {\n          error: errorMsg,\n          response: response\n        });\n      }\n    };\n    this.on('error', errorHandler);\n    this.on('upload-error', function (file, error, response) {\n      errorHandler(error, file, response);\n      if (typeof error === 'object' && error.message) {\n        var newError = new Error(error.message);\n        newError.details = error.message;\n        if (error.details) {\n          newError.details += \" \" + error.details;\n        }\n        newError.message = _this8.i18n('failedToUpload', {\n          file: file.name\n        });\n        _this8.showOrLogErrorAndThrow(newError, {\n          throwErr: false\n        });\n      } else {\n        _this8.showOrLogErrorAndThrow(error, {\n          throwErr: false\n        });\n      }\n    });\n    this.on('upload', function () {\n      _this8.setState({\n        error: null\n      });\n    });\n    this.on('upload-started', function (file) {\n      if (!_this8.getFile(file.id)) {\n        _this8.log(\"Not setting progress for a file that has been removed: \" + file.id);\n        return;\n      }\n      _this8.setFileState(file.id, {\n        progress: {\n          uploadStarted: Date.now(),\n          uploadComplete: false,\n          percentage: 0,\n          bytesUploaded: 0,\n          bytesTotal: file.size\n        }\n      });\n    });\n    this.on('upload-progress', this.calculateProgress);\n    this.on('upload-success', function (file, uploadResp) {\n      if (!_this8.getFile(file.id)) {\n        _this8.log(\"Not setting progress for a file that has been removed: \" + file.id);\n        return;\n      }\n      var currentProgress = _this8.getFile(file.id).progress;\n      _this8.setFileState(file.id, {\n        progress: _extends({}, currentProgress, {\n          postprocess: _this8.postProcessors.length > 0 ? {\n            mode: 'indeterminate'\n          } : null,\n          uploadComplete: true,\n          percentage: 100,\n          bytesUploaded: currentProgress.bytesTotal\n        }),\n        response: uploadResp,\n        uploadURL: uploadResp.uploadURL,\n        isPaused: false\n      }); // Remote providers sometimes don't tell us the file size,\n      // but we can know how many bytes we uploaded once the upload is complete.\n\n      if (file.size == null) {\n        _this8.setFileState(file.id, {\n          size: uploadResp.bytesUploaded || currentProgress.bytesTotal\n        });\n      }\n      _this8.calculateTotalProgress();\n    });\n    this.on('preprocess-progress', function (file, progress) {\n      if (!_this8.getFile(file.id)) {\n        _this8.log(\"Not setting progress for a file that has been removed: \" + file.id);\n        return;\n      }\n      _this8.setFileState(file.id, {\n        progress: _extends({}, _this8.getFile(file.id).progress, {\n          preprocess: progress\n        })\n      });\n    });\n    this.on('preprocess-complete', function (file) {\n      if (!_this8.getFile(file.id)) {\n        _this8.log(\"Not setting progress for a file that has been removed: \" + file.id);\n        return;\n      }\n      var files = _extends({}, _this8.getState().files);\n      files[file.id] = _extends({}, files[file.id], {\n        progress: _extends({}, files[file.id].progress)\n      });\n      delete files[file.id].progress.preprocess;\n      _this8.setState({\n        files: files\n      });\n    });\n    this.on('postprocess-progress', function (file, progress) {\n      if (!_this8.getFile(file.id)) {\n        _this8.log(\"Not setting progress for a file that has been removed: \" + file.id);\n        return;\n      }\n      _this8.setFileState(file.id, {\n        progress: _extends({}, _this8.getState().files[file.id].progress, {\n          postprocess: progress\n        })\n      });\n    });\n    this.on('postprocess-complete', function (file) {\n      if (!_this8.getFile(file.id)) {\n        _this8.log(\"Not setting progress for a file that has been removed: \" + file.id);\n        return;\n      }\n      var files = _extends({}, _this8.getState().files);\n      files[file.id] = _extends({}, files[file.id], {\n        progress: _extends({}, files[file.id].progress)\n      });\n      delete files[file.id].progress.postprocess; // TODO should we set some kind of `fullyComplete` property on the file object\n      // so it's easier to see that the file is uploadâ€¦fully completeâ€¦rather than\n      // what we have to do now (`uploadComplete && !postprocess`)\n\n      _this8.setState({\n        files: files\n      });\n    });\n    this.on('restored', function () {\n      // Files may have changed--ensure progress is still accurate.\n      _this8.calculateTotalProgress();\n    }); // show informer if offline\n\n    if (typeof window !== 'undefined' && window.addEventListener) {\n      window.addEventListener('online', function () {\n        return _this8.updateOnlineStatus();\n      });\n      window.addEventListener('offline', function () {\n        return _this8.updateOnlineStatus();\n      });\n      setTimeout(function () {\n        return _this8.updateOnlineStatus();\n      }, 3000);\n    }\n  };\n  _proto.updateOnlineStatus = function updateOnlineStatus() {\n    var online = typeof window.navigator.onLine !== 'undefined' ? window.navigator.onLine : true;\n    if (!online) {\n      this.emit('is-offline');\n      this.info(this.i18n('noInternetConnection'), 'error', 0);\n      this.wasOffline = true;\n    } else {\n      this.emit('is-online');\n      if (this.wasOffline) {\n        this.emit('back-online');\n        this.info(this.i18n('connectedToInternet'), 'success', 3000);\n        this.wasOffline = false;\n      }\n    }\n  };\n  _proto.getID = function getID() {\n    return this.opts.id;\n  }\n  /**\n   * Registers a plugin with Core.\n   *\n   * @param {object} Plugin object\n   * @param {object} [opts] object with options to be passed to Plugin\n   * @returns {object} self for chaining\n   */\n  // eslint-disable-next-line no-shadow\n  ;\n\n  _proto.use = function use(Plugin, opts) {\n    if (typeof Plugin !== 'function') {\n      var msg = \"Expected a plugin class, but got \" + (Plugin === null ? 'null' : typeof Plugin) + \".\" + ' Please verify that the plugin was imported and spelled correctly.';\n      throw new TypeError(msg);\n    } // Instantiate\n\n    var plugin = new Plugin(this, opts);\n    var pluginId = plugin.id;\n    this.plugins[plugin.type] = this.plugins[plugin.type] || [];\n    if (!pluginId) {\n      throw new Error('Your plugin must have an id');\n    }\n    if (!plugin.type) {\n      throw new Error('Your plugin must have a type');\n    }\n    var existsPluginAlready = this.getPlugin(pluginId);\n    if (existsPluginAlready) {\n      var _msg = \"Already found a plugin named '\" + existsPluginAlready.id + \"'. \" + (\"Tried to use: '\" + pluginId + \"'.\\n\") + 'Uppy plugins must have unique `id` options. See https://uppy.io/docs/plugins/#id.';\n      throw new Error(_msg);\n    }\n    if (Plugin.VERSION) {\n      this.log(\"Using \" + pluginId + \" v\" + Plugin.VERSION);\n    }\n    this.plugins[plugin.type].push(plugin);\n    plugin.install();\n    return this;\n  }\n  /**\n   * Find one Plugin by name.\n   *\n   * @param {string} id plugin id\n   * @returns {object|boolean}\n   */;\n\n  _proto.getPlugin = function getPlugin(id) {\n    var foundPlugin = null;\n    this.iteratePlugins(function (plugin) {\n      if (plugin.id === id) {\n        foundPlugin = plugin;\n        return false;\n      }\n    });\n    return foundPlugin;\n  }\n  /**\n   * Iterate through all `use`d plugins.\n   *\n   * @param {Function} method that will be run on each plugin\n   */;\n\n  _proto.iteratePlugins = function iteratePlugins(method) {\n    var _this9 = this;\n    Object.keys(this.plugins).forEach(function (pluginType) {\n      _this9.plugins[pluginType].forEach(method);\n    });\n  }\n  /**\n   * Uninstall and remove a plugin.\n   *\n   * @param {object} instance The plugin instance to remove.\n   */;\n\n  _proto.removePlugin = function removePlugin(instance) {\n    var _extends4;\n    this.log(\"Removing plugin \" + instance.id);\n    this.emit('plugin-remove', instance);\n    if (instance.uninstall) {\n      instance.uninstall();\n    }\n    var list = this.plugins[instance.type].slice(); // list.indexOf failed here, because Vue3 converted the plugin instance\n    // to a Proxy object, which failed the strict comparison test:\n    // obj !== objProxy\n\n    var index = findIndex(list, function (item) {\n      return item.id === instance.id;\n    });\n    if (index !== -1) {\n      list.splice(index, 1);\n      this.plugins[instance.type] = list;\n    }\n    var state = this.getState();\n    var updatedState = {\n      plugins: _extends({}, state.plugins, (_extends4 = {}, _extends4[instance.id] = undefined, _extends4))\n    };\n    this.setState(updatedState);\n  }\n  /**\n   * Uninstall all plugins and close down this Uppy instance.\n   */;\n\n  _proto.close = function close() {\n    var _this10 = this;\n    this.log(\"Closing Uppy instance \" + this.opts.id + \": removing all files and uninstalling plugins\");\n    this.reset();\n    this.storeUnsubscribe();\n    this.iteratePlugins(function (plugin) {\n      _this10.removePlugin(plugin);\n    });\n  }\n  /**\n   * Set info message in `state.info`, so that UI plugins like `Informer`\n   * can display the message.\n   *\n   * @param {string | object} message Message to be displayed by the informer\n   * @param {string} [type]\n   * @param {number} [duration]\n   */;\n\n  _proto.info = function info(message, type, duration) {\n    if (type === void 0) {\n      type = 'info';\n    }\n    if (duration === void 0) {\n      duration = 3000;\n    }\n    var isComplexMessage = typeof message === 'object';\n    this.setState({\n      info: {\n        isHidden: false,\n        type: type,\n        message: isComplexMessage ? message.message : message,\n        details: isComplexMessage ? message.details : null\n      }\n    });\n    this.emit('info-visible');\n    clearTimeout(this.infoTimeoutID);\n    if (duration === 0) {\n      this.infoTimeoutID = undefined;\n      return;\n    } // hide the informer after `duration` milliseconds\n\n    this.infoTimeoutID = setTimeout(this.hideInfo, duration);\n  };\n  _proto.hideInfo = function hideInfo() {\n    var newInfo = _extends({}, this.getState().info, {\n      isHidden: true\n    });\n    this.setState({\n      info: newInfo\n    });\n    this.emit('info-hidden');\n  }\n  /**\n   * Passes messages to a function, provided in `opts.logger`.\n   * If `opts.logger: Uppy.debugLogger` or `opts.debug: true`, logs to the browser console.\n   *\n   * @param {string|object} message to log\n   * @param {string} [type] optional `error` or `warning`\n   */;\n\n  _proto.log = function log(message, type) {\n    var logger = this.opts.logger;\n    switch (type) {\n      case 'error':\n        logger.error(message);\n        break;\n      case 'warning':\n        logger.warn(message);\n        break;\n      default:\n        logger.debug(message);\n        break;\n    }\n  }\n  /**\n   * Obsolete, event listeners are now added in the constructor.\n   */;\n\n  _proto.run = function run() {\n    this.log('Calling run() is no longer necessary.', 'warning');\n    return this;\n  }\n  /**\n   * Restore an upload by its ID.\n   */;\n\n  _proto.restore = function restore(uploadID) {\n    this.log(\"Core: attempting to restore upload \\\"\" + uploadID + \"\\\"\");\n    if (!this.getState().currentUploads[uploadID]) {\n      this.removeUpload(uploadID);\n      return Promise.reject(new Error('Nonexistent upload'));\n    }\n    return this.runUpload(uploadID);\n  }\n  /**\n   * Create an upload for a bunch of files.\n   *\n   * @param {Array<string>} fileIDs File IDs to include in this upload.\n   * @returns {string} ID of this upload.\n   */;\n\n  _proto.createUpload = function createUpload(fileIDs, opts) {\n    var _extends5;\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    // uppy.retryAll sets this to true â€” when retrying we want to ignore `allowNewUpload: false`\n    var _opts = opts,\n      _opts$forceAllowNewUp = _opts.forceAllowNewUpload,\n      forceAllowNewUpload = _opts$forceAllowNewUp === void 0 ? false : _opts$forceAllowNewUp;\n    var _this$getState6 = this.getState(),\n      allowNewUpload = _this$getState6.allowNewUpload,\n      currentUploads = _this$getState6.currentUploads;\n    if (!allowNewUpload && !forceAllowNewUpload) {\n      throw new Error('Cannot create a new upload: already uploading.');\n    }\n    var uploadID = cuid();\n    this.emit('upload', {\n      id: uploadID,\n      fileIDs: fileIDs\n    });\n    this.setState({\n      allowNewUpload: this.opts.allowMultipleUploads !== false,\n      currentUploads: _extends({}, currentUploads, (_extends5 = {}, _extends5[uploadID] = {\n        fileIDs: fileIDs,\n        step: 0,\n        result: {}\n      }, _extends5))\n    });\n    return uploadID;\n  };\n  _proto.getUpload = function getUpload(uploadID) {\n    var _this$getState7 = this.getState(),\n      currentUploads = _this$getState7.currentUploads;\n    return currentUploads[uploadID];\n  }\n  /**\n   * Add data to an upload's result object.\n   *\n   * @param {string} uploadID The ID of the upload.\n   * @param {object} data Data properties to add to the result object.\n   */;\n\n  _proto.addResultData = function addResultData(uploadID, data) {\n    var _extends6;\n    if (!this.getUpload(uploadID)) {\n      this.log(\"Not setting result for an upload that has been removed: \" + uploadID);\n      return;\n    }\n    var _this$getState8 = this.getState(),\n      currentUploads = _this$getState8.currentUploads;\n    var currentUpload = _extends({}, currentUploads[uploadID], {\n      result: _extends({}, currentUploads[uploadID].result, data)\n    });\n    this.setState({\n      currentUploads: _extends({}, currentUploads, (_extends6 = {}, _extends6[uploadID] = currentUpload, _extends6))\n    });\n  }\n  /**\n   * Remove an upload, eg. if it has been canceled or completed.\n   *\n   * @param {string} uploadID The ID of the upload.\n   */;\n\n  _proto.removeUpload = function removeUpload(uploadID) {\n    var currentUploads = _extends({}, this.getState().currentUploads);\n    delete currentUploads[uploadID];\n    this.setState({\n      currentUploads: currentUploads\n    });\n  }\n  /**\n   * Run an upload. This picks up where it left off in case the upload is being restored.\n   *\n   * @private\n   */;\n\n  _proto.runUpload = function runUpload(uploadID) {\n    var _this11 = this;\n    var uploadData = this.getState().currentUploads[uploadID];\n    var restoreStep = uploadData.step;\n    var steps = [].concat(this.preProcessors, this.uploaders, this.postProcessors);\n    var lastStep = Promise.resolve();\n    steps.forEach(function (fn, step) {\n      // Skip this step if we are restoring and have already completed this step before.\n      if (step < restoreStep) {\n        return;\n      }\n      lastStep = lastStep.then(function () {\n        var _extends7;\n        var _this11$getState = _this11.getState(),\n          currentUploads = _this11$getState.currentUploads;\n        var currentUpload = currentUploads[uploadID];\n        if (!currentUpload) {\n          return;\n        }\n        var updatedUpload = _extends({}, currentUpload, {\n          step: step\n        });\n        _this11.setState({\n          currentUploads: _extends({}, currentUploads, (_extends7 = {}, _extends7[uploadID] = updatedUpload, _extends7))\n        }); // TODO give this the `updatedUpload` object as its only parameter maybe?\n        // Otherwise when more metadata may be added to the upload this would keep getting more parameters\n        // eslint-disable-next-line consistent-return\n\n        return fn(updatedUpload.fileIDs, uploadID);\n      }).then(function () {\n        return null;\n      });\n    }); // Not returning the `catch`ed promise, because we still want to return a rejected\n    // promise from this method if the upload failed.\n\n    lastStep.catch(function (err) {\n      _this11.emit('error', err);\n      _this11.removeUpload(uploadID);\n    });\n    return lastStep.then(function () {\n      // Set result data.\n      var _this11$getState2 = _this11.getState(),\n        currentUploads = _this11$getState2.currentUploads;\n      var currentUpload = currentUploads[uploadID];\n      if (!currentUpload) {\n        return;\n      } // Mark postprocessing step as complete if necessary; this addresses a case where we might get\n      // stuck in the postprocessing UI while the upload is fully complete.\n      // If the postprocessing steps do not do any work, they may not emit postprocessing events at\n      // all, and never mark the postprocessing as complete. This is fine on its own but we\n      // introduced code in the @uppy/core upload-success handler to prepare postprocessing progress\n      // state if any postprocessors are registered. That is to avoid a \"flash of completed state\"\n      // before the postprocessing plugins can emit events.\n      //\n      // So, just in case an upload with postprocessing plugins *has* completed *without* emitting\n      // postprocessing completion, we do it instead.\n\n      currentUpload.fileIDs.forEach(function (fileID) {\n        var file = _this11.getFile(fileID);\n        if (file && file.progress.postprocess) {\n          _this11.emit('postprocess-complete', file);\n        }\n      });\n      var files = currentUpload.fileIDs.map(function (fileID) {\n        return _this11.getFile(fileID);\n      });\n      var successful = files.filter(function (file) {\n        return !file.error;\n      });\n      var failed = files.filter(function (file) {\n        return file.error;\n      });\n      _this11.addResultData(uploadID, {\n        successful: successful,\n        failed: failed,\n        uploadID: uploadID\n      });\n    }).then(function () {\n      // Emit completion events.\n      // This is in a separate function so that the `currentUploads` variable\n      // always refers to the latest state. In the handler right above it refers\n      // to an outdated object without the `.result` property.\n      var _this11$getState3 = _this11.getState(),\n        currentUploads = _this11$getState3.currentUploads;\n      if (!currentUploads[uploadID]) {\n        return;\n      }\n      var currentUpload = currentUploads[uploadID];\n      var result = currentUpload.result;\n      _this11.emit('complete', result);\n      _this11.removeUpload(uploadID); // eslint-disable-next-line consistent-return\n\n      return result;\n    }).then(function (result) {\n      if (result == null) {\n        _this11.log(\"Not setting result for an upload that has been removed: \" + uploadID);\n      }\n      return result;\n    });\n  }\n  /**\n   * Start an upload for all the files that are not currently being uploaded.\n   *\n   * @returns {Promise}\n   */;\n\n  _proto.upload = function upload() {\n    var _this12 = this;\n    if (!this.plugins.uploader) {\n      this.log('No uploader type plugins are used', 'warning');\n    }\n    var _this$getState9 = this.getState(),\n      files = _this$getState9.files;\n    var onBeforeUploadResult = this.opts.onBeforeUpload(files);\n    if (onBeforeUploadResult === false) {\n      return Promise.reject(new Error('Not starting the upload because onBeforeUpload returned false'));\n    }\n    if (onBeforeUploadResult && typeof onBeforeUploadResult === 'object') {\n      files = onBeforeUploadResult; // Updating files in state, because uploader plugins receive file IDs,\n      // and then fetch the actual file object from state\n\n      this.setState({\n        files: files\n      });\n    }\n    return Promise.resolve().then(function () {\n      _this12.checkMinNumberOfFiles(files);\n      _this12.checkRequiredMetaFields(files);\n    }).catch(function (err) {\n      _this12.showOrLogErrorAndThrow(err);\n    }).then(function () {\n      var _this12$getState = _this12.getState(),\n        currentUploads = _this12$getState.currentUploads; // get a list of files that are currently assigned to uploads\n\n      var currentlyUploadingFiles = Object.keys(currentUploads).reduce(function (prev, curr) {\n        return prev.concat(currentUploads[curr].fileIDs);\n      }, []);\n      var waitingFileIDs = [];\n      Object.keys(files).forEach(function (fileID) {\n        var file = _this12.getFile(fileID); // if the file hasn't started uploading and hasn't already been assigned to an upload..\n\n        if (!file.progress.uploadStarted && currentlyUploadingFiles.indexOf(fileID) === -1) {\n          waitingFileIDs.push(file.id);\n        }\n      });\n      var uploadID = _this12.createUpload(waitingFileIDs);\n      return _this12.runUpload(uploadID);\n    }).catch(function (err) {\n      _this12.showOrLogErrorAndThrow(err, {\n        showInformer: false\n      });\n    });\n  };\n  _createClass(Uppy, [{\n    key: \"state\",\n    get: function get() {\n      // Here, state is a non-enumerable property.\n      return this.getState();\n    }\n  }]);\n  return Uppy;\n}();\nUppy.VERSION = \"1.20.0\";\nmodule.exports = function core(opts) {\n  return new Uppy(opts);\n}; // Expose class constructor.\n\nmodule.exports.Uppy = Uppy;\nmodule.exports.Plugin = Plugin;\nmodule.exports.debugLogger = debugLogger;","map":{"version":3,"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","_createClass","Constructor","protoProps","staticProps","_inheritsLoose","subClass","superClass","create","constructor","_setPrototypeOf","_wrapNativeSuper","Class","_cache","Map","undefined","_isNativeFunction","TypeError","has","get","set","Wrapper","_construct","_getPrototypeOf","value","Parent","args","_isNativeReflectConstruct","Reflect","construct","a","push","Function","bind","instance","sham","Proxy","Boolean","valueOf","e","fn","toString","indexOf","o","p","setPrototypeOf","__proto__","getPrototypeOf","Translator","require","ee","cuid","throttle","prettierBytes","match","DefaultStore","getFileType","getFileNameAndExtension","generateFileID","findIndex","supportsUploadProgress","_require","justErrorsLogger","debugLogger","Plugin","RestrictionError","_Error","_this","_len","Array","_key","concat","isRestriction","Error","AggregateError","_Error2","message","errors","_this2","AggregateRestrictionError","_AggregateError","_this3","_len2","_key2","Uppy","opts","_this4","defaultLocale","strings","addBulkFilesFailed","youCanOnlyUploadX","youHaveToAtLeastSelectX","missingRequiredMetaField","missingRequiredMetaFieldOnFile","exceedsSize2","exceedsSize","inferiorSize","youCanOnlyUploadFileTypes","noNewAlreadyUploading","noDuplicates","companionError","companionUnauthorizeHint","failedToUpload","noInternetConnection","connectedToInternet","noFilesFound","selectX","selectAllFilesFromFolderNamed","unselectAllFilesFromFolderNamed","selectFileNamed","unselectFileNamed","openFolderNamed","cancel","logOut","filter","resetFilter","loading","authenticateWithTitle","authenticateWith","searchImages","enterTextToSearch","backToSearch","emptyFolderAdded","folderAdded","defaultOptions","id","autoProceed","allowMultipleUploads","debug","restrictions","maxFileSize","minFileSize","maxTotalFileSize","maxNumberOfFiles","minNumberOfFiles","allowedFileTypes","requiredMetaFields","meta","onBeforeFileAdded","currentFile","onBeforeUpload","files","store","logger","infoTimeout","log","VERSION","isArray","i18nInit","plugins","getState","getPlugin","setFileMeta","setFileState","info","hideInfo","addFile","removeFile","pauseResume","validateRestrictions","calculateProgress","leading","trailing","updateOnlineStatus","resetProgress","pauseAll","resumeAll","retryAll","cancelAll","retryUpload","upload","emitter","on","off","once","emit","preProcessors","uploaders","postProcessors","setState","currentUploads","allowNewUpload","capabilities","uploadProgress","individualCancellation","resumableUploads","totalProgress","isHidden","type","recoveredState","storeUnsubscribe","subscribe","prevState","nextState","patch","updateAll","window","addListeners","_proto","event","callback","state","iteratePlugins","plugin","update","fileID","_extends2","translator","locale","i18n","translate","i18nArray","translateArray","setOptions","newOpts","setMeta","defaultProgress","percentage","bytesUploaded","uploadComplete","uploadStarted","updatedFiles","keys","forEach","updatedFile","progress","addPreProcessor","removePreProcessor","splice","addPostProcessor","removePostProcessor","addUploader","removeUploader","data","updatedMeta","newMeta","getFile","getFiles","_this$getState","map","file","checkRestrictions","result","err","reason","_this$opts$restrictio","smart_count","isCorrectFileType","some","replace","extension","toLowerCase","substr","allowedFileTypesString","join","types","size","totalFilesSize","f","backwardsCompat","name","checkMinNumberOfFiles","checkRequiredMetaFields","fileIDs","_i","fileName","showOrLogErrorAndThrow","throwErr","_temp","_ref","_ref$showInformer","showInformer","_ref$file","_ref$throwErr","details","logMessageWithDetails","assertNewUploadAllowed","_this$getState2","checkAndCreateFileStateObject","fileType","onBeforeFileAddedResult","split","fileExtension","isRemote","isGhost","Number","isFinite","newFile","bytesTotal","remote","preview","filesArray","startIfAutoProceed","_this5","scheduledAutoProceed","setTimeout","catch","stack","_extends3","_this$getState3","addFiles","fileDescriptors","_this6","newFiles","subError","removeFiles","_this7","_this$getState4","updatedUploads","removedFiles","fileIsNotRemoved","uploadFileID","uploadID","newFileIDs","stateUpdate","error","calculateTotalProgress","removedFileIDs","wasPaused","isPaused","inProgressUpdatedFiles","filesToRetry","Promise","resolve","successful","failed","createUpload","forceAllowNewUpload","runUpload","_this$getState5","reset","logout","provider","canHavePercentage","Math","round","inProgress","preprocess","postprocess","sizedFiles","unsizedFiles","progressMax","currentProgress","reduce","acc","_totalProgress","totalSize","averageSize","uploadedSize","_this8","errorHandler","response","errorMsg","newError","Date","now","uploadResp","mode","uploadURL","addEventListener","online","navigator","onLine","wasOffline","getID","use","msg","pluginId","existsPluginAlready","_msg","install","foundPlugin","method","_this9","pluginType","removePlugin","_extends4","uninstall","list","slice","index","item","updatedState","close","_this10","duration","isComplexMessage","clearTimeout","infoTimeoutID","newInfo","warn","run","restore","removeUpload","reject","_extends5","_opts","_opts$forceAllowNewUp","_this$getState6","step","getUpload","_this$getState7","addResultData","_extends6","_this$getState8","currentUpload","_this11","uploadData","restoreStep","steps","lastStep","then","_extends7","_this11$getState","updatedUpload","_this11$getState2","_this11$getState3","_this12","uploader","_this$getState9","onBeforeUploadResult","_this12$getState","currentlyUploadingFiles","prev","curr","waitingFileIDs","module","exports","core"],"sources":["E:/integrate cloud/uppy/node_modules/@uppy/core/lib/index.js"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/* global AggregateError */\nvar Translator = require('@uppy/utils/lib/Translator');\n\nvar ee = require('namespace-emitter');\n\nvar cuid = require('cuid');\n\nvar throttle = require('lodash.throttle');\n\nvar prettierBytes = require('@transloadit/prettier-bytes');\n\nvar match = require('mime-match');\n\nvar DefaultStore = require('@uppy/store-default');\n\nvar getFileType = require('@uppy/utils/lib/getFileType');\n\nvar getFileNameAndExtension = require('@uppy/utils/lib/getFileNameAndExtension');\n\nvar generateFileID = require('@uppy/utils/lib/generateFileID');\n\nvar findIndex = require('@uppy/utils/lib/findIndex');\n\nvar supportsUploadProgress = require('./supportsUploadProgress');\n\nvar _require = require('./loggers'),\n    justErrorsLogger = _require.justErrorsLogger,\n    debugLogger = _require.debugLogger;\n\nvar Plugin = require('./Plugin'); // Exported from here.\n\n\nvar RestrictionError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(RestrictionError, _Error);\n\n  function RestrictionError() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Error.call.apply(_Error, [this].concat(args)) || this;\n    _this.isRestriction = true;\n    return _this;\n  }\n\n  return RestrictionError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nif (typeof AggregateError === 'undefined') {\n  // eslint-disable-next-line no-global-assign\n  AggregateError = /*#__PURE__*/function (_Error2) {\n    _inheritsLoose(AggregateError, _Error2);\n\n    function AggregateError(message, errors) {\n      var _this2;\n\n      _this2 = _Error2.call(this, message) || this;\n      _this2.errors = errors;\n      return _this2;\n    }\n\n    return AggregateError;\n  }( /*#__PURE__*/_wrapNativeSuper(Error));\n}\n\nvar AggregateRestrictionError = /*#__PURE__*/function (_AggregateError) {\n  _inheritsLoose(AggregateRestrictionError, _AggregateError);\n\n  function AggregateRestrictionError() {\n    var _this3;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this3 = _AggregateError.call.apply(_AggregateError, [this].concat(args)) || this;\n    _this3.isRestriction = true;\n    return _this3;\n  }\n\n  return AggregateRestrictionError;\n}(AggregateError);\n/**\n * Uppy Core module.\n * Manages plugins, state updates, acts as an event bus,\n * adds/removes files and metadata.\n */\n\n\nvar Uppy = /*#__PURE__*/function () {\n  // eslint-disable-next-line global-require\n\n  /**\n   * Instantiate Uppy\n   *\n   * @param {object} opts â€” Uppy options\n   */\n  function Uppy(opts) {\n    var _this4 = this;\n\n    this.defaultLocale = {\n      strings: {\n        addBulkFilesFailed: {\n          0: 'Failed to add %{smart_count} file due to an internal error',\n          1: 'Failed to add %{smart_count} files due to internal errors'\n        },\n        youCanOnlyUploadX: {\n          0: 'You can only upload %{smart_count} file',\n          1: 'You can only upload %{smart_count} files'\n        },\n        youHaveToAtLeastSelectX: {\n          0: 'You have to select at least %{smart_count} file',\n          1: 'You have to select at least %{smart_count} files'\n        },\n        missingRequiredMetaField: 'Missing required meta fields',\n        missingRequiredMetaFieldOnFile: 'Missing required meta fields in %{fileName}',\n        // The default `exceedsSize2` string only combines the `exceedsSize` string (%{backwardsCompat}) with the size.\n        // Locales can override `exceedsSize2` to specify a different word order. This is for backwards compat with\n        // Uppy 1.9.x and below which did a naive concatenation of `exceedsSize2 + size` instead of using a locale-specific\n        // substitution.\n        // TODO: In 2.0 `exceedsSize2` should be removed in and `exceedsSize` updated to use substitution.\n        exceedsSize2: '%{backwardsCompat} %{size}',\n        exceedsSize: '%{file} exceeds maximum allowed size of',\n        inferiorSize: 'This file is smaller than the allowed size of %{size}',\n        youCanOnlyUploadFileTypes: 'You can only upload: %{types}',\n        noNewAlreadyUploading: 'Cannot add new files: already uploading',\n        noDuplicates: 'Cannot add the duplicate file \\'%{fileName}\\', it already exists',\n        companionError: 'Connection with Companion failed',\n        companionUnauthorizeHint: 'To unauthorize to your %{provider} account, please go to %{url}',\n        failedToUpload: 'Failed to upload %{file}',\n        noInternetConnection: 'No Internet connection',\n        connectedToInternet: 'Connected to the Internet',\n        // Strings for remote providers\n        noFilesFound: 'You have no files or folders here',\n        selectX: {\n          0: 'Select %{smart_count}',\n          1: 'Select %{smart_count}'\n        },\n        selectAllFilesFromFolderNamed: 'Select all files from folder %{name}',\n        unselectAllFilesFromFolderNamed: 'Unselect all files from folder %{name}',\n        selectFileNamed: 'Select file %{name}',\n        unselectFileNamed: 'Unselect file %{name}',\n        openFolderNamed: 'Open folder %{name}',\n        cancel: 'Cancel',\n        logOut: 'Log out',\n        filter: 'Filter',\n        resetFilter: 'Reset filter',\n        loading: 'Loading...',\n        authenticateWithTitle: 'Please authenticate with %{pluginName} to select files',\n        authenticateWith: 'Connect to %{pluginName}',\n        searchImages: 'Search for images',\n        enterTextToSearch: 'Enter text to search for images',\n        backToSearch: 'Back to Search',\n        emptyFolderAdded: 'No files were added from empty folder',\n        folderAdded: {\n          0: 'Added %{smart_count} file from %{folder}',\n          1: 'Added %{smart_count} files from %{folder}'\n        }\n      }\n    };\n    var defaultOptions = {\n      id: 'uppy',\n      autoProceed: false,\n      allowMultipleUploads: true,\n      debug: false,\n      restrictions: {\n        maxFileSize: null,\n        minFileSize: null,\n        maxTotalFileSize: null,\n        maxNumberOfFiles: null,\n        minNumberOfFiles: null,\n        allowedFileTypes: null,\n        requiredMetaFields: []\n      },\n      meta: {},\n      onBeforeFileAdded: function onBeforeFileAdded(currentFile) {\n        return currentFile;\n      },\n      onBeforeUpload: function onBeforeUpload(files) {\n        return files;\n      },\n      store: DefaultStore(),\n      logger: justErrorsLogger,\n      infoTimeout: 5000\n    }; // Merge default options with the ones set by user,\n    // making sure to merge restrictions too\n\n    this.opts = _extends({}, defaultOptions, opts, {\n      restrictions: _extends({}, defaultOptions.restrictions, opts && opts.restrictions)\n    }); // Support debug: true for backwards-compatability, unless logger is set in opts\n    // opts instead of this.opts to avoid comparing objects â€” we set logger: justErrorsLogger in defaultOptions\n\n    if (opts && opts.logger && opts.debug) {\n      this.log('You are using a custom `logger`, but also set `debug: true`, which uses built-in logger to output logs to console. Ignoring `debug: true` and using your custom `logger`.', 'warning');\n    } else if (opts && opts.debug) {\n      this.opts.logger = debugLogger;\n    }\n\n    this.log(\"Using Core v\" + this.constructor.VERSION);\n\n    if (this.opts.restrictions.allowedFileTypes && this.opts.restrictions.allowedFileTypes !== null && !Array.isArray(this.opts.restrictions.allowedFileTypes)) {\n      throw new TypeError('`restrictions.allowedFileTypes` must be an array');\n    }\n\n    this.i18nInit(); // Container for different types of plugins\n\n    this.plugins = {};\n    this.getState = this.getState.bind(this);\n    this.getPlugin = this.getPlugin.bind(this);\n    this.setFileMeta = this.setFileMeta.bind(this);\n    this.setFileState = this.setFileState.bind(this);\n    this.log = this.log.bind(this);\n    this.info = this.info.bind(this);\n    this.hideInfo = this.hideInfo.bind(this);\n    this.addFile = this.addFile.bind(this);\n    this.removeFile = this.removeFile.bind(this);\n    this.pauseResume = this.pauseResume.bind(this);\n    this.validateRestrictions = this.validateRestrictions.bind(this); // ___Why throttle at 500ms?\n    //    - We must throttle at >250ms for superfocus in Dashboard to work well\n    //    (because animation takes 0.25s, and we want to wait for all animations to be over before refocusing).\n    //    [Practical Check]: if thottle is at 100ms, then if you are uploading a file,\n    //    and click 'ADD MORE FILES', - focus won't activate in Firefox.\n    //    - We must throttle at around >500ms to avoid performance lags.\n    //    [Practical Check] Firefox, try to upload a big file for a prolonged period of time. Laptop will start to heat up.\n\n    this.calculateProgress = throttle(this.calculateProgress.bind(this), 500, {\n      leading: true,\n      trailing: true\n    });\n    this.updateOnlineStatus = this.updateOnlineStatus.bind(this);\n    this.resetProgress = this.resetProgress.bind(this);\n    this.pauseAll = this.pauseAll.bind(this);\n    this.resumeAll = this.resumeAll.bind(this);\n    this.retryAll = this.retryAll.bind(this);\n    this.cancelAll = this.cancelAll.bind(this);\n    this.retryUpload = this.retryUpload.bind(this);\n    this.upload = this.upload.bind(this);\n    this.emitter = ee();\n    this.on = this.on.bind(this);\n    this.off = this.off.bind(this);\n    this.once = this.emitter.once.bind(this.emitter);\n    this.emit = this.emitter.emit.bind(this.emitter);\n    this.preProcessors = [];\n    this.uploaders = [];\n    this.postProcessors = [];\n    this.store = this.opts.store;\n    this.setState({\n      plugins: {},\n      files: {},\n      currentUploads: {},\n      allowNewUpload: true,\n      capabilities: {\n        uploadProgress: supportsUploadProgress(),\n        individualCancellation: true,\n        resumableUploads: false\n      },\n      totalProgress: 0,\n      meta: _extends({}, this.opts.meta),\n      info: {\n        isHidden: true,\n        type: 'info',\n        message: ''\n      },\n      recoveredState: null\n    });\n    this.storeUnsubscribe = this.store.subscribe(function (prevState, nextState, patch) {\n      _this4.emit('state-update', prevState, nextState, patch);\n\n      _this4.updateAll(nextState);\n    }); // Exposing uppy object on window for debugging and testing\n\n    if (this.opts.debug && typeof window !== 'undefined') {\n      window[this.opts.id] = this;\n    }\n\n    this.addListeners(); // Re-enable if weâ€™ll need some capabilities on boot, like isMobileDevice\n    // this._setCapabilities()\n  } // _setCapabilities = () => {\n  //   const capabilities = {\n  //     isMobileDevice: isMobileDevice()\n  //   }\n  //   this.setState({\n  //     ...this.getState().capabilities,\n  //     capabilities\n  //   })\n  // }\n\n\n  var _proto = Uppy.prototype;\n\n  _proto.on = function on(event, callback) {\n    this.emitter.on(event, callback);\n    return this;\n  };\n\n  _proto.off = function off(event, callback) {\n    this.emitter.off(event, callback);\n    return this;\n  }\n  /**\n   * Iterate on all plugins and run `update` on them.\n   * Called each time state changes.\n   *\n   */\n  ;\n\n  _proto.updateAll = function updateAll(state) {\n    this.iteratePlugins(function (plugin) {\n      plugin.update(state);\n    });\n  }\n  /**\n   * Updates state with a patch\n   *\n   * @param {object} patch {foo: 'bar'}\n   */\n  ;\n\n  _proto.setState = function setState(patch) {\n    this.store.setState(patch);\n  }\n  /**\n   * Returns current state.\n   *\n   * @returns {object}\n   */\n  ;\n\n  _proto.getState = function getState() {\n    return this.store.getState();\n  }\n  /**\n   * Back compat for when uppy.state is used instead of uppy.getState().\n   * @deprecated\n   */\n  ;\n\n  /**\n   * Shorthand to set state for a specific file.\n   */\n  _proto.setFileState = function setFileState(fileID, state) {\n    var _extends2;\n\n    if (!this.getState().files[fileID]) {\n      throw new Error(\"Can\\u2019t set state for \" + fileID + \" (the file could have been removed)\");\n    }\n\n    this.setState({\n      files: _extends({}, this.getState().files, (_extends2 = {}, _extends2[fileID] = _extends({}, this.getState().files[fileID], state), _extends2))\n    });\n  };\n\n  _proto.i18nInit = function i18nInit() {\n    this.translator = new Translator([this.defaultLocale, this.opts.locale]);\n    this.locale = this.translator.locale;\n    this.i18n = this.translator.translate.bind(this.translator);\n    this.i18nArray = this.translator.translateArray.bind(this.translator);\n  };\n\n  _proto.setOptions = function setOptions(newOpts) {\n    this.opts = _extends({}, this.opts, newOpts, {\n      restrictions: _extends({}, this.opts.restrictions, newOpts && newOpts.restrictions)\n    });\n\n    if (newOpts.meta) {\n      this.setMeta(newOpts.meta);\n    }\n\n    this.i18nInit();\n\n    if (newOpts.locale) {\n      this.iteratePlugins(function (plugin) {\n        plugin.setOptions();\n      });\n    } // Note: this is not the preact `setState`, it's an internal function that has the same name.\n\n\n    this.setState(); // so that UI re-renders with new options\n  };\n\n  _proto.resetProgress = function resetProgress() {\n    var defaultProgress = {\n      percentage: 0,\n      bytesUploaded: 0,\n      uploadComplete: false,\n      uploadStarted: null\n    };\n\n    var files = _extends({}, this.getState().files);\n\n    var updatedFiles = {};\n    Object.keys(files).forEach(function (fileID) {\n      var updatedFile = _extends({}, files[fileID]);\n\n      updatedFile.progress = _extends({}, updatedFile.progress, defaultProgress);\n      updatedFiles[fileID] = updatedFile;\n    });\n    this.setState({\n      files: updatedFiles,\n      totalProgress: 0\n    });\n    this.emit('reset-progress');\n  };\n\n  _proto.addPreProcessor = function addPreProcessor(fn) {\n    this.preProcessors.push(fn);\n  };\n\n  _proto.removePreProcessor = function removePreProcessor(fn) {\n    var i = this.preProcessors.indexOf(fn);\n\n    if (i !== -1) {\n      this.preProcessors.splice(i, 1);\n    }\n  };\n\n  _proto.addPostProcessor = function addPostProcessor(fn) {\n    this.postProcessors.push(fn);\n  };\n\n  _proto.removePostProcessor = function removePostProcessor(fn) {\n    var i = this.postProcessors.indexOf(fn);\n\n    if (i !== -1) {\n      this.postProcessors.splice(i, 1);\n    }\n  };\n\n  _proto.addUploader = function addUploader(fn) {\n    this.uploaders.push(fn);\n  };\n\n  _proto.removeUploader = function removeUploader(fn) {\n    var i = this.uploaders.indexOf(fn);\n\n    if (i !== -1) {\n      this.uploaders.splice(i, 1);\n    }\n  };\n\n  _proto.setMeta = function setMeta(data) {\n    var updatedMeta = _extends({}, this.getState().meta, data);\n\n    var updatedFiles = _extends({}, this.getState().files);\n\n    Object.keys(updatedFiles).forEach(function (fileID) {\n      updatedFiles[fileID] = _extends({}, updatedFiles[fileID], {\n        meta: _extends({}, updatedFiles[fileID].meta, data)\n      });\n    });\n    this.log('Adding metadata:');\n    this.log(data);\n    this.setState({\n      meta: updatedMeta,\n      files: updatedFiles\n    });\n  };\n\n  _proto.setFileMeta = function setFileMeta(fileID, data) {\n    var updatedFiles = _extends({}, this.getState().files);\n\n    if (!updatedFiles[fileID]) {\n      this.log('Was trying to set metadata for a file that has been removed: ', fileID);\n      return;\n    }\n\n    var newMeta = _extends({}, updatedFiles[fileID].meta, data);\n\n    updatedFiles[fileID] = _extends({}, updatedFiles[fileID], {\n      meta: newMeta\n    });\n    this.setState({\n      files: updatedFiles\n    });\n  }\n  /**\n   * Get a file object.\n   *\n   * @param {string} fileID The ID of the file object to return.\n   */\n  ;\n\n  _proto.getFile = function getFile(fileID) {\n    return this.getState().files[fileID];\n  }\n  /**\n   * Get all files in an array.\n   */\n  ;\n\n  _proto.getFiles = function getFiles() {\n    var _this$getState = this.getState(),\n        files = _this$getState.files;\n\n    return Object.keys(files).map(function (fileID) {\n      return files[fileID];\n    });\n  }\n  /**\n   * A public wrapper for _checkRestrictions â€” checks if a file passes a set of restrictions.\n   * For use in UI pluigins (like Providers), to disallow selecting files that wonâ€™t pass restrictions.\n   *\n   * @param {object} file object to check\n   * @param {Array} [files] array to check maxNumberOfFiles and maxTotalFileSize\n   * @returns {object} { result: true/false, reason: why file didnâ€™t pass restrictions }\n   */\n  ;\n\n  _proto.validateRestrictions = function validateRestrictions(file, files) {\n    try {\n      this.checkRestrictions(file, files);\n      return {\n        result: true\n      };\n    } catch (err) {\n      return {\n        result: false,\n        reason: err.message\n      };\n    }\n  }\n  /**\n   * Check if file passes a set of restrictions set in options: maxFileSize, minFileSize,\n   * maxNumberOfFiles and allowedFileTypes.\n   *\n   * @param {object} file object to check\n   * @param {Array} [files] array to check maxNumberOfFiles and maxTotalFileSize\n   * @private\n   */\n  ;\n\n  _proto.checkRestrictions = function checkRestrictions(file, files) {\n    if (files === void 0) {\n      files = this.getFiles();\n    }\n\n    var _this$opts$restrictio = this.opts.restrictions,\n        maxFileSize = _this$opts$restrictio.maxFileSize,\n        minFileSize = _this$opts$restrictio.minFileSize,\n        maxTotalFileSize = _this$opts$restrictio.maxTotalFileSize,\n        maxNumberOfFiles = _this$opts$restrictio.maxNumberOfFiles,\n        allowedFileTypes = _this$opts$restrictio.allowedFileTypes;\n\n    if (maxNumberOfFiles) {\n      if (files.length + 1 > maxNumberOfFiles) {\n        throw new RestrictionError(\"\" + this.i18n('youCanOnlyUploadX', {\n          smart_count: maxNumberOfFiles\n        }));\n      }\n    }\n\n    if (allowedFileTypes) {\n      var isCorrectFileType = allowedFileTypes.some(function (type) {\n        // check if this is a mime-type\n        if (type.indexOf('/') > -1) {\n          if (!file.type) return false;\n          return match(file.type.replace(/;.*?$/, ''), type);\n        } // otherwise this is likely an extension\n\n\n        if (type[0] === '.' && file.extension) {\n          return file.extension.toLowerCase() === type.substr(1).toLowerCase();\n        }\n\n        return false;\n      });\n\n      if (!isCorrectFileType) {\n        var allowedFileTypesString = allowedFileTypes.join(', ');\n        throw new RestrictionError(this.i18n('youCanOnlyUploadFileTypes', {\n          types: allowedFileTypesString\n        }));\n      }\n    } // We can't check maxTotalFileSize if the size is unknown.\n\n\n    if (maxTotalFileSize && file.size != null) {\n      var totalFilesSize = 0;\n      totalFilesSize += file.size;\n      files.forEach(function (f) {\n        totalFilesSize += f.size;\n      });\n\n      if (totalFilesSize > maxTotalFileSize) {\n        throw new RestrictionError(this.i18n('exceedsSize2', {\n          backwardsCompat: this.i18n('exceedsSize'),\n          size: prettierBytes(maxTotalFileSize),\n          file: file.name\n        }));\n      }\n    } // We can't check maxFileSize if the size is unknown.\n\n\n    if (maxFileSize && file.size != null) {\n      if (file.size > maxFileSize) {\n        throw new RestrictionError(this.i18n('exceedsSize2', {\n          backwardsCompat: this.i18n('exceedsSize'),\n          size: prettierBytes(maxFileSize),\n          file: file.name\n        }));\n      }\n    } // We can't check minFileSize if the size is unknown.\n\n\n    if (minFileSize && file.size != null) {\n      if (file.size < minFileSize) {\n        throw new RestrictionError(this.i18n('inferiorSize', {\n          size: prettierBytes(minFileSize)\n        }));\n      }\n    }\n  }\n  /**\n   * Check if minNumberOfFiles restriction is reached before uploading.\n   *\n   * @private\n   */\n  ;\n\n  _proto.checkMinNumberOfFiles = function checkMinNumberOfFiles(files) {\n    var minNumberOfFiles = this.opts.restrictions.minNumberOfFiles;\n\n    if (Object.keys(files).length < minNumberOfFiles) {\n      throw new RestrictionError(\"\" + this.i18n('youHaveToAtLeastSelectX', {\n        smart_count: minNumberOfFiles\n      }));\n    }\n  }\n  /**\n   * Check if requiredMetaField restriction is met before uploading.\n   *\n   * @private\n   */\n  ;\n\n  _proto.checkRequiredMetaFields = function checkRequiredMetaFields(files) {\n    var requiredMetaFields = this.opts.restrictions.requiredMetaFields;\n    var hasOwnProperty = Object.prototype.hasOwnProperty.hasOwnProperty;\n    var errors = [];\n    var fileIDs = Object.keys(files);\n\n    for (var i = 0; i < fileIDs.length; i++) {\n      var file = this.getFile(fileIDs[i]);\n\n      for (var _i = 0; _i < requiredMetaFields.length; _i++) {\n        if (!hasOwnProperty.call(file.meta, requiredMetaFields[_i])) {\n          var err = new RestrictionError(\"\" + this.i18n('missingRequiredMetaFieldOnFile', {\n            fileName: file.name\n          }));\n          errors.push(err);\n          this.showOrLogErrorAndThrow(err, {\n            file: file,\n            throwErr: false\n          });\n        }\n      }\n    }\n\n    if (errors.length) {\n      throw new AggregateRestrictionError(\"\" + this.i18n('missingRequiredMetaField'), errors);\n    }\n  }\n  /**\n   * Logs an error, sets Informer message, then throws the error.\n   * Emits a 'restriction-failed' event if itâ€™s a restriction error\n   *\n   * @param {object | string} err â€” Error object or plain string message\n   * @param {object} [options]\n   * @param {boolean} [options.showInformer=true] â€” Sometimes developer might want to show Informer manually\n   * @param {object} [options.file=null] â€” File object used to emit the restriction error\n   * @param {boolean} [options.throwErr=true] â€” Errors shouldnâ€™t be thrown, for example, in `upload-error` event\n   * @private\n   */\n  ;\n\n  _proto.showOrLogErrorAndThrow = function showOrLogErrorAndThrow(err, _temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        _ref$showInformer = _ref.showInformer,\n        showInformer = _ref$showInformer === void 0 ? true : _ref$showInformer,\n        _ref$file = _ref.file,\n        file = _ref$file === void 0 ? null : _ref$file,\n        _ref$throwErr = _ref.throwErr,\n        throwErr = _ref$throwErr === void 0 ? true : _ref$throwErr;\n\n    var message = typeof err === 'object' ? err.message : err;\n    var details = typeof err === 'object' && err.details ? err.details : ''; // Restriction errors should be logged, but not as errors,\n    // as they are expected and shown in the UI.\n\n    var logMessageWithDetails = message;\n\n    if (details) {\n      logMessageWithDetails += \" \" + details;\n    }\n\n    if (err.isRestriction) {\n      this.log(logMessageWithDetails);\n      this.emit('restriction-failed', file, err);\n    } else {\n      this.log(logMessageWithDetails, 'error');\n    } // Sometimes informer has to be shown manually by the developer,\n    // for example, in `onBeforeFileAdded`.\n\n\n    if (showInformer) {\n      this.info({\n        message: message,\n        details: details\n      }, 'error', this.opts.infoTimeout);\n    }\n\n    if (throwErr) {\n      throw typeof err === 'object' ? err : new Error(err);\n    }\n  };\n\n  _proto.assertNewUploadAllowed = function assertNewUploadAllowed(file) {\n    var _this$getState2 = this.getState(),\n        allowNewUpload = _this$getState2.allowNewUpload;\n\n    if (allowNewUpload === false) {\n      this.showOrLogErrorAndThrow(new RestrictionError(this.i18n('noNewAlreadyUploading')), {\n        file: file\n      });\n    }\n  }\n  /**\n   * Create a file state object based on user-provided `addFile()` options.\n   *\n   * Note this is extremely side-effectful and should only be done when a file state object will be added to state immediately afterward!\n   *\n   * The `files` value is passed in because it may be updated by the caller without updating the store.\n   */\n  ;\n\n  _proto.checkAndCreateFileStateObject = function checkAndCreateFileStateObject(files, f) {\n    var fileType = getFileType(f);\n    var file = f;\n    file.type = fileType;\n    var onBeforeFileAddedResult = this.opts.onBeforeFileAdded(file, files);\n\n    if (onBeforeFileAddedResult === false) {\n      // Donâ€™t show UI info for this error, as it should be done by the developer\n      this.showOrLogErrorAndThrow(new RestrictionError('Cannot add the file because onBeforeFileAdded returned false.'), {\n        showInformer: false,\n        file: file\n      });\n    }\n\n    if (typeof onBeforeFileAddedResult === 'object' && onBeforeFileAddedResult) {\n      file = onBeforeFileAddedResult;\n    }\n\n    var fileName;\n\n    if (file.name) {\n      fileName = file.name;\n    } else if (fileType.split('/')[0] === 'image') {\n      fileName = fileType.split('/')[0] + \".\" + fileType.split('/')[1];\n    } else {\n      fileName = 'noname';\n    }\n\n    var fileExtension = getFileNameAndExtension(fileName).extension;\n    var isRemote = file.isRemote || false;\n    var fileID = generateFileID(file);\n\n    if (files[fileID] && !files[fileID].isGhost) {\n      this.showOrLogErrorAndThrow(new RestrictionError(this.i18n('noDuplicates', {\n        fileName: fileName\n      })), {\n        file: file\n      });\n    }\n\n    var meta = file.meta || {};\n    meta.name = fileName;\n    meta.type = fileType; // `null` means the size is unknown.\n\n    var size = Number.isFinite(file.data.size) ? file.data.size : null;\n    var newFile = {\n      source: file.source || '',\n      id: fileID,\n      name: fileName,\n      extension: fileExtension || '',\n      meta: _extends({}, this.getState().meta, meta),\n      type: fileType,\n      data: file.data,\n      progress: {\n        percentage: 0,\n        bytesUploaded: 0,\n        bytesTotal: size,\n        uploadComplete: false,\n        uploadStarted: null\n      },\n      size: size,\n      isRemote: isRemote,\n      remote: file.remote || '',\n      preview: file.preview\n    };\n\n    try {\n      var filesArray = Object.keys(files).map(function (i) {\n        return files[i];\n      });\n      this.checkRestrictions(newFile, filesArray);\n    } catch (err) {\n      this.showOrLogErrorAndThrow(err, {\n        file: newFile\n      });\n    }\n\n    return newFile;\n  } // Schedule an upload if `autoProceed` is enabled.\n  ;\n\n  _proto.startIfAutoProceed = function startIfAutoProceed() {\n    var _this5 = this;\n\n    if (this.opts.autoProceed && !this.scheduledAutoProceed) {\n      this.scheduledAutoProceed = setTimeout(function () {\n        _this5.scheduledAutoProceed = null;\n\n        _this5.upload().catch(function (err) {\n          if (!err.isRestriction) {\n            _this5.log(err.stack || err.message || err);\n          }\n        });\n      }, 4);\n    }\n  }\n  /**\n   * Add a new file to `state.files`. This will run `onBeforeFileAdded`,\n   * try to guess file type in a clever way, check file against restrictions,\n   * and start an upload if `autoProceed === true`.\n   *\n   * @param {object} file object to add\n   * @returns {string} id for the added file\n   */\n  ;\n\n  _proto.addFile = function addFile(file) {\n    var _extends3;\n\n    this.assertNewUploadAllowed(file);\n\n    var _this$getState3 = this.getState(),\n        files = _this$getState3.files;\n\n    var newFile = this.checkAndCreateFileStateObject(files, file); // Users are asked to re-select recovered files without data,\n    // and to keep the progress, meta and everthing else, we only replace said data\n\n    if (files[newFile.id] && files[newFile.id].isGhost) {\n      newFile = _extends({}, files[newFile.id], {\n        data: file.data,\n        isGhost: false\n      });\n      this.log(\"Replaced the blob in the restored ghost file: \" + newFile.name + \", \" + newFile.id);\n    }\n\n    this.setState({\n      files: _extends({}, files, (_extends3 = {}, _extends3[newFile.id] = newFile, _extends3))\n    });\n    this.emit('file-added', newFile);\n    this.emit('files-added', [newFile]);\n    this.log(\"Added file: \" + newFile.name + \", \" + newFile.id + \", mime type: \" + newFile.type);\n    this.startIfAutoProceed();\n    return newFile.id;\n  }\n  /**\n   * Add multiple files to `state.files`. See the `addFile()` documentation.\n   *\n   * If an error occurs while adding a file, it is logged and the user is notified.\n   * This is good for UI plugins, but not for programmatic use.\n   * Programmatic users should usually still use `addFile()` on individual files.\n   */\n  ;\n\n  _proto.addFiles = function addFiles(fileDescriptors) {\n    var _this6 = this;\n\n    this.assertNewUploadAllowed(); // create a copy of the files object only once\n\n    var files = _extends({}, this.getState().files);\n\n    var newFiles = [];\n    var errors = [];\n\n    for (var i = 0; i < fileDescriptors.length; i++) {\n      try {\n        var newFile = this.checkAndCreateFileStateObject(files, fileDescriptors[i]); // Users are asked to re-select recovered files without data,\n        // and to keep the progress, meta and everthing else, we only replace said data\n\n        if (files[newFile.id] && files[newFile.id].isGhost) {\n          newFile = _extends({}, files[newFile.id], {\n            data: fileDescriptors[i].data,\n            isGhost: false\n          });\n          this.log(\"Replaced blob in a ghost file: \" + newFile.name + \", \" + newFile.id);\n        }\n\n        files[newFile.id] = newFile;\n        newFiles.push(newFile);\n      } catch (err) {\n        if (!err.isRestriction) {\n          errors.push(err);\n        }\n      }\n    }\n\n    this.setState({\n      files: files\n    });\n    newFiles.forEach(function (newFile) {\n      _this6.emit('file-added', newFile);\n    });\n    this.emit('files-added', newFiles);\n\n    if (newFiles.length > 5) {\n      this.log(\"Added batch of \" + newFiles.length + \" files\");\n    } else {\n      Object.keys(newFiles).forEach(function (fileID) {\n        _this6.log(\"Added file: \" + newFiles[fileID].name + \"\\n id: \" + newFiles[fileID].id + \"\\n type: \" + newFiles[fileID].type);\n      });\n    }\n\n    if (newFiles.length > 0) {\n      this.startIfAutoProceed();\n    }\n\n    if (errors.length > 0) {\n      var message = 'Multiple errors occurred while adding files:\\n';\n      errors.forEach(function (subError) {\n        message += \"\\n * \" + subError.message;\n      });\n      this.info({\n        message: this.i18n('addBulkFilesFailed', {\n          smart_count: errors.length\n        }),\n        details: message\n      }, 'error', this.opts.infoTimeout);\n\n      if (typeof AggregateError === 'function') {\n        throw new AggregateError(errors, message);\n      } else {\n        var err = new Error(message);\n        err.errors = errors;\n        throw err;\n      }\n    }\n  };\n\n  _proto.removeFiles = function removeFiles(fileIDs, reason) {\n    var _this7 = this;\n\n    var _this$getState4 = this.getState(),\n        files = _this$getState4.files,\n        currentUploads = _this$getState4.currentUploads;\n\n    var updatedFiles = _extends({}, files);\n\n    var updatedUploads = _extends({}, currentUploads);\n\n    var removedFiles = Object.create(null);\n    fileIDs.forEach(function (fileID) {\n      if (files[fileID]) {\n        removedFiles[fileID] = files[fileID];\n        delete updatedFiles[fileID];\n      }\n    }); // Remove files from the `fileIDs` list in each upload.\n\n    function fileIsNotRemoved(uploadFileID) {\n      return removedFiles[uploadFileID] === undefined;\n    }\n\n    Object.keys(updatedUploads).forEach(function (uploadID) {\n      var newFileIDs = currentUploads[uploadID].fileIDs.filter(fileIsNotRemoved); // Remove the upload if no files are associated with it anymore.\n\n      if (newFileIDs.length === 0) {\n        delete updatedUploads[uploadID];\n        return;\n      }\n\n      updatedUploads[uploadID] = _extends({}, currentUploads[uploadID], {\n        fileIDs: newFileIDs\n      });\n    });\n    var stateUpdate = {\n      currentUploads: updatedUploads,\n      files: updatedFiles\n    }; // If all files were removed - allow new uploads,\n    // and clear recoveredState\n\n    if (Object.keys(updatedFiles).length === 0) {\n      stateUpdate.allowNewUpload = true;\n      stateUpdate.error = null;\n      stateUpdate.recoveredState = null;\n    }\n\n    this.setState(stateUpdate);\n    this.calculateTotalProgress();\n    var removedFileIDs = Object.keys(removedFiles);\n    removedFileIDs.forEach(function (fileID) {\n      _this7.emit('file-removed', removedFiles[fileID], reason);\n    });\n\n    if (removedFileIDs.length > 5) {\n      this.log(\"Removed \" + removedFileIDs.length + \" files\");\n    } else {\n      this.log(\"Removed files: \" + removedFileIDs.join(', '));\n    }\n  };\n\n  _proto.removeFile = function removeFile(fileID, reason) {\n    if (reason === void 0) {\n      reason = null;\n    }\n\n    this.removeFiles([fileID], reason);\n  };\n\n  _proto.pauseResume = function pauseResume(fileID) {\n    if (!this.getState().capabilities.resumableUploads || this.getFile(fileID).uploadComplete) {\n      return undefined;\n    }\n\n    var wasPaused = this.getFile(fileID).isPaused || false;\n    var isPaused = !wasPaused;\n    this.setFileState(fileID, {\n      isPaused: isPaused\n    });\n    this.emit('upload-pause', fileID, isPaused);\n    return isPaused;\n  };\n\n  _proto.pauseAll = function pauseAll() {\n    var updatedFiles = _extends({}, this.getState().files);\n\n    var inProgressUpdatedFiles = Object.keys(updatedFiles).filter(function (file) {\n      return !updatedFiles[file].progress.uploadComplete && updatedFiles[file].progress.uploadStarted;\n    });\n    inProgressUpdatedFiles.forEach(function (file) {\n      var updatedFile = _extends({}, updatedFiles[file], {\n        isPaused: true\n      });\n\n      updatedFiles[file] = updatedFile;\n    });\n    this.setState({\n      files: updatedFiles\n    });\n    this.emit('pause-all');\n  };\n\n  _proto.resumeAll = function resumeAll() {\n    var updatedFiles = _extends({}, this.getState().files);\n\n    var inProgressUpdatedFiles = Object.keys(updatedFiles).filter(function (file) {\n      return !updatedFiles[file].progress.uploadComplete && updatedFiles[file].progress.uploadStarted;\n    });\n    inProgressUpdatedFiles.forEach(function (file) {\n      var updatedFile = _extends({}, updatedFiles[file], {\n        isPaused: false,\n        error: null\n      });\n\n      updatedFiles[file] = updatedFile;\n    });\n    this.setState({\n      files: updatedFiles\n    });\n    this.emit('resume-all');\n  };\n\n  _proto.retryAll = function retryAll() {\n    var updatedFiles = _extends({}, this.getState().files);\n\n    var filesToRetry = Object.keys(updatedFiles).filter(function (file) {\n      return updatedFiles[file].error;\n    });\n    filesToRetry.forEach(function (file) {\n      var updatedFile = _extends({}, updatedFiles[file], {\n        isPaused: false,\n        error: null\n      });\n\n      updatedFiles[file] = updatedFile;\n    });\n    this.setState({\n      files: updatedFiles,\n      error: null\n    });\n    this.emit('retry-all', filesToRetry);\n\n    if (filesToRetry.length === 0) {\n      return Promise.resolve({\n        successful: [],\n        failed: []\n      });\n    }\n\n    var uploadID = this.createUpload(filesToRetry, {\n      forceAllowNewUpload: true // create new upload even if allowNewUpload: false\n\n    });\n    return this.runUpload(uploadID);\n  };\n\n  _proto.cancelAll = function cancelAll() {\n    this.emit('cancel-all');\n\n    var _this$getState5 = this.getState(),\n        files = _this$getState5.files;\n\n    var fileIDs = Object.keys(files);\n\n    if (fileIDs.length) {\n      this.removeFiles(fileIDs, 'cancel-all');\n    }\n\n    this.setState({\n      totalProgress: 0,\n      error: null,\n      recoveredState: null\n    });\n  };\n\n  _proto.retryUpload = function retryUpload(fileID) {\n    this.setFileState(fileID, {\n      error: null,\n      isPaused: false\n    });\n    this.emit('upload-retry', fileID);\n    var uploadID = this.createUpload([fileID], {\n      forceAllowNewUpload: true // create new upload even if allowNewUpload: false\n\n    });\n    return this.runUpload(uploadID);\n  };\n\n  _proto.reset = function reset() {\n    this.cancelAll();\n  };\n\n  _proto.logout = function logout() {\n    this.iteratePlugins(function (plugin) {\n      if (plugin.provider && plugin.provider.logout) {\n        plugin.provider.logout();\n      }\n    });\n  };\n\n  _proto.calculateProgress = function calculateProgress(file, data) {\n    if (!this.getFile(file.id)) {\n      this.log(\"Not setting progress for a file that has been removed: \" + file.id);\n      return;\n    } // bytesTotal may be null or zero; in that case we can't divide by it\n\n\n    var canHavePercentage = Number.isFinite(data.bytesTotal) && data.bytesTotal > 0;\n    this.setFileState(file.id, {\n      progress: _extends({}, this.getFile(file.id).progress, {\n        bytesUploaded: data.bytesUploaded,\n        bytesTotal: data.bytesTotal,\n        percentage: canHavePercentage // TODO(goto-bus-stop) flooring this should probably be the choice of the UI?\n        // we get more accurate calculations if we don't round this at all.\n        ? Math.round(data.bytesUploaded / data.bytesTotal * 100) : 0\n      })\n    });\n    this.calculateTotalProgress();\n  };\n\n  _proto.calculateTotalProgress = function calculateTotalProgress() {\n    // calculate total progress, using the number of files currently uploading,\n    // multiplied by 100 and the summ of individual progress of each file\n    var files = this.getFiles();\n    var inProgress = files.filter(function (file) {\n      return file.progress.uploadStarted || file.progress.preprocess || file.progress.postprocess;\n    });\n\n    if (inProgress.length === 0) {\n      this.emit('progress', 0);\n      this.setState({\n        totalProgress: 0\n      });\n      return;\n    }\n\n    var sizedFiles = inProgress.filter(function (file) {\n      return file.progress.bytesTotal != null;\n    });\n    var unsizedFiles = inProgress.filter(function (file) {\n      return file.progress.bytesTotal == null;\n    });\n\n    if (sizedFiles.length === 0) {\n      var progressMax = inProgress.length * 100;\n      var currentProgress = unsizedFiles.reduce(function (acc, file) {\n        return acc + file.progress.percentage;\n      }, 0);\n\n      var _totalProgress = Math.round(currentProgress / progressMax * 100);\n\n      this.setState({\n        totalProgress: _totalProgress\n      });\n      return;\n    }\n\n    var totalSize = sizedFiles.reduce(function (acc, file) {\n      return acc + file.progress.bytesTotal;\n    }, 0);\n    var averageSize = totalSize / sizedFiles.length;\n    totalSize += averageSize * unsizedFiles.length;\n    var uploadedSize = 0;\n    sizedFiles.forEach(function (file) {\n      uploadedSize += file.progress.bytesUploaded;\n    });\n    unsizedFiles.forEach(function (file) {\n      uploadedSize += averageSize * (file.progress.percentage || 0) / 100;\n    });\n    var totalProgress = totalSize === 0 ? 0 : Math.round(uploadedSize / totalSize * 100); // hot fix, because:\n    // uploadedSize ended up larger than totalSize, resulting in 1325% total\n\n    if (totalProgress > 100) {\n      totalProgress = 100;\n    }\n\n    this.setState({\n      totalProgress: totalProgress\n    });\n    this.emit('progress', totalProgress);\n  }\n  /**\n   * Registers listeners for all global actions, like:\n   * `error`, `file-removed`, `upload-progress`\n   */\n  ;\n\n  _proto.addListeners = function addListeners() {\n    var _this8 = this;\n\n    /**\n     * @param {Error} error\n     * @param {object} [file]\n     * @param {object} [response]\n     */\n    var errorHandler = function errorHandler(error, file, response) {\n      var errorMsg = error.message || 'Unknown error';\n\n      if (error.details) {\n        errorMsg += \" \" + error.details;\n      }\n\n      _this8.setState({\n        error: errorMsg\n      }); // When a file is also given, we store the error on the file object.\n\n\n      if (file != null && typeof file.id === 'string') {\n        _this8.setFileState(file.id, {\n          error: errorMsg,\n          response: response\n        });\n      }\n    };\n\n    this.on('error', errorHandler);\n    this.on('upload-error', function (file, error, response) {\n      errorHandler(error, file, response);\n\n      if (typeof error === 'object' && error.message) {\n        var newError = new Error(error.message);\n        newError.details = error.message;\n\n        if (error.details) {\n          newError.details += \" \" + error.details;\n        }\n\n        newError.message = _this8.i18n('failedToUpload', {\n          file: file.name\n        });\n\n        _this8.showOrLogErrorAndThrow(newError, {\n          throwErr: false\n        });\n      } else {\n        _this8.showOrLogErrorAndThrow(error, {\n          throwErr: false\n        });\n      }\n    });\n    this.on('upload', function () {\n      _this8.setState({\n        error: null\n      });\n    });\n    this.on('upload-started', function (file) {\n      if (!_this8.getFile(file.id)) {\n        _this8.log(\"Not setting progress for a file that has been removed: \" + file.id);\n\n        return;\n      }\n\n      _this8.setFileState(file.id, {\n        progress: {\n          uploadStarted: Date.now(),\n          uploadComplete: false,\n          percentage: 0,\n          bytesUploaded: 0,\n          bytesTotal: file.size\n        }\n      });\n    });\n    this.on('upload-progress', this.calculateProgress);\n    this.on('upload-success', function (file, uploadResp) {\n      if (!_this8.getFile(file.id)) {\n        _this8.log(\"Not setting progress for a file that has been removed: \" + file.id);\n\n        return;\n      }\n\n      var currentProgress = _this8.getFile(file.id).progress;\n\n      _this8.setFileState(file.id, {\n        progress: _extends({}, currentProgress, {\n          postprocess: _this8.postProcessors.length > 0 ? {\n            mode: 'indeterminate'\n          } : null,\n          uploadComplete: true,\n          percentage: 100,\n          bytesUploaded: currentProgress.bytesTotal\n        }),\n        response: uploadResp,\n        uploadURL: uploadResp.uploadURL,\n        isPaused: false\n      }); // Remote providers sometimes don't tell us the file size,\n      // but we can know how many bytes we uploaded once the upload is complete.\n\n\n      if (file.size == null) {\n        _this8.setFileState(file.id, {\n          size: uploadResp.bytesUploaded || currentProgress.bytesTotal\n        });\n      }\n\n      _this8.calculateTotalProgress();\n    });\n    this.on('preprocess-progress', function (file, progress) {\n      if (!_this8.getFile(file.id)) {\n        _this8.log(\"Not setting progress for a file that has been removed: \" + file.id);\n\n        return;\n      }\n\n      _this8.setFileState(file.id, {\n        progress: _extends({}, _this8.getFile(file.id).progress, {\n          preprocess: progress\n        })\n      });\n    });\n    this.on('preprocess-complete', function (file) {\n      if (!_this8.getFile(file.id)) {\n        _this8.log(\"Not setting progress for a file that has been removed: \" + file.id);\n\n        return;\n      }\n\n      var files = _extends({}, _this8.getState().files);\n\n      files[file.id] = _extends({}, files[file.id], {\n        progress: _extends({}, files[file.id].progress)\n      });\n      delete files[file.id].progress.preprocess;\n\n      _this8.setState({\n        files: files\n      });\n    });\n    this.on('postprocess-progress', function (file, progress) {\n      if (!_this8.getFile(file.id)) {\n        _this8.log(\"Not setting progress for a file that has been removed: \" + file.id);\n\n        return;\n      }\n\n      _this8.setFileState(file.id, {\n        progress: _extends({}, _this8.getState().files[file.id].progress, {\n          postprocess: progress\n        })\n      });\n    });\n    this.on('postprocess-complete', function (file) {\n      if (!_this8.getFile(file.id)) {\n        _this8.log(\"Not setting progress for a file that has been removed: \" + file.id);\n\n        return;\n      }\n\n      var files = _extends({}, _this8.getState().files);\n\n      files[file.id] = _extends({}, files[file.id], {\n        progress: _extends({}, files[file.id].progress)\n      });\n      delete files[file.id].progress.postprocess; // TODO should we set some kind of `fullyComplete` property on the file object\n      // so it's easier to see that the file is uploadâ€¦fully completeâ€¦rather than\n      // what we have to do now (`uploadComplete && !postprocess`)\n\n      _this8.setState({\n        files: files\n      });\n    });\n    this.on('restored', function () {\n      // Files may have changed--ensure progress is still accurate.\n      _this8.calculateTotalProgress();\n    }); // show informer if offline\n\n    if (typeof window !== 'undefined' && window.addEventListener) {\n      window.addEventListener('online', function () {\n        return _this8.updateOnlineStatus();\n      });\n      window.addEventListener('offline', function () {\n        return _this8.updateOnlineStatus();\n      });\n      setTimeout(function () {\n        return _this8.updateOnlineStatus();\n      }, 3000);\n    }\n  };\n\n  _proto.updateOnlineStatus = function updateOnlineStatus() {\n    var online = typeof window.navigator.onLine !== 'undefined' ? window.navigator.onLine : true;\n\n    if (!online) {\n      this.emit('is-offline');\n      this.info(this.i18n('noInternetConnection'), 'error', 0);\n      this.wasOffline = true;\n    } else {\n      this.emit('is-online');\n\n      if (this.wasOffline) {\n        this.emit('back-online');\n        this.info(this.i18n('connectedToInternet'), 'success', 3000);\n        this.wasOffline = false;\n      }\n    }\n  };\n\n  _proto.getID = function getID() {\n    return this.opts.id;\n  }\n  /**\n   * Registers a plugin with Core.\n   *\n   * @param {object} Plugin object\n   * @param {object} [opts] object with options to be passed to Plugin\n   * @returns {object} self for chaining\n   */\n  // eslint-disable-next-line no-shadow\n  ;\n\n  _proto.use = function use(Plugin, opts) {\n    if (typeof Plugin !== 'function') {\n      var msg = \"Expected a plugin class, but got \" + (Plugin === null ? 'null' : typeof Plugin) + \".\" + ' Please verify that the plugin was imported and spelled correctly.';\n      throw new TypeError(msg);\n    } // Instantiate\n\n\n    var plugin = new Plugin(this, opts);\n    var pluginId = plugin.id;\n    this.plugins[plugin.type] = this.plugins[plugin.type] || [];\n\n    if (!pluginId) {\n      throw new Error('Your plugin must have an id');\n    }\n\n    if (!plugin.type) {\n      throw new Error('Your plugin must have a type');\n    }\n\n    var existsPluginAlready = this.getPlugin(pluginId);\n\n    if (existsPluginAlready) {\n      var _msg = \"Already found a plugin named '\" + existsPluginAlready.id + \"'. \" + (\"Tried to use: '\" + pluginId + \"'.\\n\") + 'Uppy plugins must have unique `id` options. See https://uppy.io/docs/plugins/#id.';\n\n      throw new Error(_msg);\n    }\n\n    if (Plugin.VERSION) {\n      this.log(\"Using \" + pluginId + \" v\" + Plugin.VERSION);\n    }\n\n    this.plugins[plugin.type].push(plugin);\n    plugin.install();\n    return this;\n  }\n  /**\n   * Find one Plugin by name.\n   *\n   * @param {string} id plugin id\n   * @returns {object|boolean}\n   */\n  ;\n\n  _proto.getPlugin = function getPlugin(id) {\n    var foundPlugin = null;\n    this.iteratePlugins(function (plugin) {\n      if (plugin.id === id) {\n        foundPlugin = plugin;\n        return false;\n      }\n    });\n    return foundPlugin;\n  }\n  /**\n   * Iterate through all `use`d plugins.\n   *\n   * @param {Function} method that will be run on each plugin\n   */\n  ;\n\n  _proto.iteratePlugins = function iteratePlugins(method) {\n    var _this9 = this;\n\n    Object.keys(this.plugins).forEach(function (pluginType) {\n      _this9.plugins[pluginType].forEach(method);\n    });\n  }\n  /**\n   * Uninstall and remove a plugin.\n   *\n   * @param {object} instance The plugin instance to remove.\n   */\n  ;\n\n  _proto.removePlugin = function removePlugin(instance) {\n    var _extends4;\n\n    this.log(\"Removing plugin \" + instance.id);\n    this.emit('plugin-remove', instance);\n\n    if (instance.uninstall) {\n      instance.uninstall();\n    }\n\n    var list = this.plugins[instance.type].slice(); // list.indexOf failed here, because Vue3 converted the plugin instance\n    // to a Proxy object, which failed the strict comparison test:\n    // obj !== objProxy\n\n    var index = findIndex(list, function (item) {\n      return item.id === instance.id;\n    });\n\n    if (index !== -1) {\n      list.splice(index, 1);\n      this.plugins[instance.type] = list;\n    }\n\n    var state = this.getState();\n    var updatedState = {\n      plugins: _extends({}, state.plugins, (_extends4 = {}, _extends4[instance.id] = undefined, _extends4))\n    };\n    this.setState(updatedState);\n  }\n  /**\n   * Uninstall all plugins and close down this Uppy instance.\n   */\n  ;\n\n  _proto.close = function close() {\n    var _this10 = this;\n\n    this.log(\"Closing Uppy instance \" + this.opts.id + \": removing all files and uninstalling plugins\");\n    this.reset();\n    this.storeUnsubscribe();\n    this.iteratePlugins(function (plugin) {\n      _this10.removePlugin(plugin);\n    });\n  }\n  /**\n   * Set info message in `state.info`, so that UI plugins like `Informer`\n   * can display the message.\n   *\n   * @param {string | object} message Message to be displayed by the informer\n   * @param {string} [type]\n   * @param {number} [duration]\n   */\n  ;\n\n  _proto.info = function info(message, type, duration) {\n    if (type === void 0) {\n      type = 'info';\n    }\n\n    if (duration === void 0) {\n      duration = 3000;\n    }\n\n    var isComplexMessage = typeof message === 'object';\n    this.setState({\n      info: {\n        isHidden: false,\n        type: type,\n        message: isComplexMessage ? message.message : message,\n        details: isComplexMessage ? message.details : null\n      }\n    });\n    this.emit('info-visible');\n    clearTimeout(this.infoTimeoutID);\n\n    if (duration === 0) {\n      this.infoTimeoutID = undefined;\n      return;\n    } // hide the informer after `duration` milliseconds\n\n\n    this.infoTimeoutID = setTimeout(this.hideInfo, duration);\n  };\n\n  _proto.hideInfo = function hideInfo() {\n    var newInfo = _extends({}, this.getState().info, {\n      isHidden: true\n    });\n\n    this.setState({\n      info: newInfo\n    });\n    this.emit('info-hidden');\n  }\n  /**\n   * Passes messages to a function, provided in `opts.logger`.\n   * If `opts.logger: Uppy.debugLogger` or `opts.debug: true`, logs to the browser console.\n   *\n   * @param {string|object} message to log\n   * @param {string} [type] optional `error` or `warning`\n   */\n  ;\n\n  _proto.log = function log(message, type) {\n    var logger = this.opts.logger;\n\n    switch (type) {\n      case 'error':\n        logger.error(message);\n        break;\n\n      case 'warning':\n        logger.warn(message);\n        break;\n\n      default:\n        logger.debug(message);\n        break;\n    }\n  }\n  /**\n   * Obsolete, event listeners are now added in the constructor.\n   */\n  ;\n\n  _proto.run = function run() {\n    this.log('Calling run() is no longer necessary.', 'warning');\n    return this;\n  }\n  /**\n   * Restore an upload by its ID.\n   */\n  ;\n\n  _proto.restore = function restore(uploadID) {\n    this.log(\"Core: attempting to restore upload \\\"\" + uploadID + \"\\\"\");\n\n    if (!this.getState().currentUploads[uploadID]) {\n      this.removeUpload(uploadID);\n      return Promise.reject(new Error('Nonexistent upload'));\n    }\n\n    return this.runUpload(uploadID);\n  }\n  /**\n   * Create an upload for a bunch of files.\n   *\n   * @param {Array<string>} fileIDs File IDs to include in this upload.\n   * @returns {string} ID of this upload.\n   */\n  ;\n\n  _proto.createUpload = function createUpload(fileIDs, opts) {\n    var _extends5;\n\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    // uppy.retryAll sets this to true â€” when retrying we want to ignore `allowNewUpload: false`\n    var _opts = opts,\n        _opts$forceAllowNewUp = _opts.forceAllowNewUpload,\n        forceAllowNewUpload = _opts$forceAllowNewUp === void 0 ? false : _opts$forceAllowNewUp;\n\n    var _this$getState6 = this.getState(),\n        allowNewUpload = _this$getState6.allowNewUpload,\n        currentUploads = _this$getState6.currentUploads;\n\n    if (!allowNewUpload && !forceAllowNewUpload) {\n      throw new Error('Cannot create a new upload: already uploading.');\n    }\n\n    var uploadID = cuid();\n    this.emit('upload', {\n      id: uploadID,\n      fileIDs: fileIDs\n    });\n    this.setState({\n      allowNewUpload: this.opts.allowMultipleUploads !== false,\n      currentUploads: _extends({}, currentUploads, (_extends5 = {}, _extends5[uploadID] = {\n        fileIDs: fileIDs,\n        step: 0,\n        result: {}\n      }, _extends5))\n    });\n    return uploadID;\n  };\n\n  _proto.getUpload = function getUpload(uploadID) {\n    var _this$getState7 = this.getState(),\n        currentUploads = _this$getState7.currentUploads;\n\n    return currentUploads[uploadID];\n  }\n  /**\n   * Add data to an upload's result object.\n   *\n   * @param {string} uploadID The ID of the upload.\n   * @param {object} data Data properties to add to the result object.\n   */\n  ;\n\n  _proto.addResultData = function addResultData(uploadID, data) {\n    var _extends6;\n\n    if (!this.getUpload(uploadID)) {\n      this.log(\"Not setting result for an upload that has been removed: \" + uploadID);\n      return;\n    }\n\n    var _this$getState8 = this.getState(),\n        currentUploads = _this$getState8.currentUploads;\n\n    var currentUpload = _extends({}, currentUploads[uploadID], {\n      result: _extends({}, currentUploads[uploadID].result, data)\n    });\n\n    this.setState({\n      currentUploads: _extends({}, currentUploads, (_extends6 = {}, _extends6[uploadID] = currentUpload, _extends6))\n    });\n  }\n  /**\n   * Remove an upload, eg. if it has been canceled or completed.\n   *\n   * @param {string} uploadID The ID of the upload.\n   */\n  ;\n\n  _proto.removeUpload = function removeUpload(uploadID) {\n    var currentUploads = _extends({}, this.getState().currentUploads);\n\n    delete currentUploads[uploadID];\n    this.setState({\n      currentUploads: currentUploads\n    });\n  }\n  /**\n   * Run an upload. This picks up where it left off in case the upload is being restored.\n   *\n   * @private\n   */\n  ;\n\n  _proto.runUpload = function runUpload(uploadID) {\n    var _this11 = this;\n\n    var uploadData = this.getState().currentUploads[uploadID];\n    var restoreStep = uploadData.step;\n    var steps = [].concat(this.preProcessors, this.uploaders, this.postProcessors);\n    var lastStep = Promise.resolve();\n    steps.forEach(function (fn, step) {\n      // Skip this step if we are restoring and have already completed this step before.\n      if (step < restoreStep) {\n        return;\n      }\n\n      lastStep = lastStep.then(function () {\n        var _extends7;\n\n        var _this11$getState = _this11.getState(),\n            currentUploads = _this11$getState.currentUploads;\n\n        var currentUpload = currentUploads[uploadID];\n\n        if (!currentUpload) {\n          return;\n        }\n\n        var updatedUpload = _extends({}, currentUpload, {\n          step: step\n        });\n\n        _this11.setState({\n          currentUploads: _extends({}, currentUploads, (_extends7 = {}, _extends7[uploadID] = updatedUpload, _extends7))\n        }); // TODO give this the `updatedUpload` object as its only parameter maybe?\n        // Otherwise when more metadata may be added to the upload this would keep getting more parameters\n        // eslint-disable-next-line consistent-return\n\n\n        return fn(updatedUpload.fileIDs, uploadID);\n      }).then(function () {\n        return null;\n      });\n    }); // Not returning the `catch`ed promise, because we still want to return a rejected\n    // promise from this method if the upload failed.\n\n    lastStep.catch(function (err) {\n      _this11.emit('error', err);\n\n      _this11.removeUpload(uploadID);\n    });\n    return lastStep.then(function () {\n      // Set result data.\n      var _this11$getState2 = _this11.getState(),\n          currentUploads = _this11$getState2.currentUploads;\n\n      var currentUpload = currentUploads[uploadID];\n\n      if (!currentUpload) {\n        return;\n      } // Mark postprocessing step as complete if necessary; this addresses a case where we might get\n      // stuck in the postprocessing UI while the upload is fully complete.\n      // If the postprocessing steps do not do any work, they may not emit postprocessing events at\n      // all, and never mark the postprocessing as complete. This is fine on its own but we\n      // introduced code in the @uppy/core upload-success handler to prepare postprocessing progress\n      // state if any postprocessors are registered. That is to avoid a \"flash of completed state\"\n      // before the postprocessing plugins can emit events.\n      //\n      // So, just in case an upload with postprocessing plugins *has* completed *without* emitting\n      // postprocessing completion, we do it instead.\n\n\n      currentUpload.fileIDs.forEach(function (fileID) {\n        var file = _this11.getFile(fileID);\n\n        if (file && file.progress.postprocess) {\n          _this11.emit('postprocess-complete', file);\n        }\n      });\n      var files = currentUpload.fileIDs.map(function (fileID) {\n        return _this11.getFile(fileID);\n      });\n      var successful = files.filter(function (file) {\n        return !file.error;\n      });\n      var failed = files.filter(function (file) {\n        return file.error;\n      });\n\n      _this11.addResultData(uploadID, {\n        successful: successful,\n        failed: failed,\n        uploadID: uploadID\n      });\n    }).then(function () {\n      // Emit completion events.\n      // This is in a separate function so that the `currentUploads` variable\n      // always refers to the latest state. In the handler right above it refers\n      // to an outdated object without the `.result` property.\n      var _this11$getState3 = _this11.getState(),\n          currentUploads = _this11$getState3.currentUploads;\n\n      if (!currentUploads[uploadID]) {\n        return;\n      }\n\n      var currentUpload = currentUploads[uploadID];\n      var result = currentUpload.result;\n\n      _this11.emit('complete', result);\n\n      _this11.removeUpload(uploadID); // eslint-disable-next-line consistent-return\n\n\n      return result;\n    }).then(function (result) {\n      if (result == null) {\n        _this11.log(\"Not setting result for an upload that has been removed: \" + uploadID);\n      }\n\n      return result;\n    });\n  }\n  /**\n   * Start an upload for all the files that are not currently being uploaded.\n   *\n   * @returns {Promise}\n   */\n  ;\n\n  _proto.upload = function upload() {\n    var _this12 = this;\n\n    if (!this.plugins.uploader) {\n      this.log('No uploader type plugins are used', 'warning');\n    }\n\n    var _this$getState9 = this.getState(),\n        files = _this$getState9.files;\n\n    var onBeforeUploadResult = this.opts.onBeforeUpload(files);\n\n    if (onBeforeUploadResult === false) {\n      return Promise.reject(new Error('Not starting the upload because onBeforeUpload returned false'));\n    }\n\n    if (onBeforeUploadResult && typeof onBeforeUploadResult === 'object') {\n      files = onBeforeUploadResult; // Updating files in state, because uploader plugins receive file IDs,\n      // and then fetch the actual file object from state\n\n      this.setState({\n        files: files\n      });\n    }\n\n    return Promise.resolve().then(function () {\n      _this12.checkMinNumberOfFiles(files);\n\n      _this12.checkRequiredMetaFields(files);\n    }).catch(function (err) {\n      _this12.showOrLogErrorAndThrow(err);\n    }).then(function () {\n      var _this12$getState = _this12.getState(),\n          currentUploads = _this12$getState.currentUploads; // get a list of files that are currently assigned to uploads\n\n\n      var currentlyUploadingFiles = Object.keys(currentUploads).reduce(function (prev, curr) {\n        return prev.concat(currentUploads[curr].fileIDs);\n      }, []);\n      var waitingFileIDs = [];\n      Object.keys(files).forEach(function (fileID) {\n        var file = _this12.getFile(fileID); // if the file hasn't started uploading and hasn't already been assigned to an upload..\n\n\n        if (!file.progress.uploadStarted && currentlyUploadingFiles.indexOf(fileID) === -1) {\n          waitingFileIDs.push(file.id);\n        }\n      });\n\n      var uploadID = _this12.createUpload(waitingFileIDs);\n\n      return _this12.runUpload(uploadID);\n    }).catch(function (err) {\n      _this12.showOrLogErrorAndThrow(err, {\n        showInformer: false\n      });\n    });\n  };\n\n  _createClass(Uppy, [{\n    key: \"state\",\n    get: function get() {\n      // Here, state is a non-enumerable property.\n      return this.getState();\n    }\n  }]);\n\n  return Uppy;\n}();\n\nUppy.VERSION = \"1.20.0\";\n\nmodule.exports = function core(opts) {\n  return new Uppy(opts);\n}; // Expose class constructor.\n\n\nmodule.exports.Uppy = Uppy;\nmodule.exports.Plugin = Plugin;\nmodule.exports.debugLogger = debugLogger;"],"mappings":"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"},"metadata":{},"sourceType":"script"}