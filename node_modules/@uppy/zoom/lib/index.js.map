{"version":3,"sources":["index.js"],"names":["require","Plugin","Provider","ProviderViews","h","module","exports","uppy","opts","id","initPlugin","title","icon","provider","companionUrl","companionHeaders","serverHeaders","companionKeysParams","companionCookiesRule","pluginId","onFirstRender","bind","render","install","view","target","mount","uninstall","tearDown","unmount","Promise","all","fetchPreAuthToken","getFolder","state","VERSION"],"mappings":"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","sourcesContent":["const { Plugin } = require('@uppy/core')\nconst { Provider } = require('@uppy/companion-client')\nconst { ProviderViews } = require('@uppy/provider-views')\nconst { h } = require('preact')\n\nmodule.exports = class Zoom extends Plugin {\n  static VERSION = require('../package.json').version\n\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.id = this.opts.id || 'Zoom'\n    Provider.initPlugin(this, opts)\n    this.title = this.opts.title || 'Zoom'\n    this.icon = () => (\n      <svg aria-hidden=\"true\" focusable=\"false\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\n        <rect className=\"uppy-ProviderIconBg\" width=\"32\" height=\"32\" rx=\"16\" fill=\"#0E71EB\" />\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path fill=\"#fff\" d=\"M29,31H14c-1.657,0-3-1.343-3-3V17h15c1.657,0,3,1.343,3,3V31z\" style=\"transform: translate(-5px, -5px) scale(0.9);\" />\n          <polygon fill=\"#fff\" points=\"37,31 31,27 31,21 37,17\" style=\"transform: translate(-5px, -5px) scale(0.9);\" />\n        </g>\n      </svg>\n    )\n\n    this.provider = new Provider(uppy, {\n      companionUrl: this.opts.companionUrl,\n      companionHeaders: this.opts.companionHeaders || this.opts.serverHeaders,\n      companionKeysParams: this.opts.companionKeysParams,\n      companionCookiesRule: this.opts.companionCookiesRule,\n      provider: 'zoom',\n      pluginId: this.id,\n    })\n\n    this.onFirstRender = this.onFirstRender.bind(this)\n    this.render = this.render.bind(this)\n  }\n\n  install () {\n    this.view = new ProviderViews(this, {\n      provider: this.provider,\n    })\n\n    const target = this.opts.target\n    if (target) {\n      this.mount(target, this)\n    }\n  }\n\n  uninstall () {\n    this.view.tearDown()\n    this.unmount()\n  }\n\n  onFirstRender () {\n    return Promise.all([\n      this.provider.fetchPreAuthToken(),\n      this.view.getFolder(),\n    ])\n  }\n\n  render (state) {\n    return this.view.render(state)\n  }\n}\n"]}