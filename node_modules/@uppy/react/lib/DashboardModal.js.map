{"version":3,"sources":["DashboardModal.js"],"names":["React","require","PropTypes","DashboardPlugin","basePropTypes","dashboard","getHTMLProps","h","createElement","DashboardModal","props","validProps","componentDidMount","installPlugin","componentDidUpdate","prevProps","uppy","uninstallPlugin","open","plugin","closeModal","openModal","componentWillUnmount","options","id","onRequestCloseModal","onRequestClose","target","container","use","getPlugin","removePlugin","render","ref","Component","propTypes","window","instanceOf","HTMLElement","any","bool","func","closeModalOnClickOutside","disablePageScrollWhenModalOpen","defaultProps","module","exports"],"mappings":"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","sourcesContent":["const React = require('react')\nconst PropTypes = require('prop-types')\nconst DashboardPlugin = require('@uppy/dashboard')\nconst basePropTypes = require('./propTypes').dashboard\nconst getHTMLProps = require('./getHTMLProps')\n\nconst h = React.createElement\n\n/**\n * React Component that renders a Dashboard for an Uppy instance in a Modal\n * dialog. Visibility of the Modal is toggled using the `open` prop.\n */\n\nclass DashboardModal extends React.Component {\n  constructor (props) {\n    super(props)\n    this.validProps = getHTMLProps(props)\n  }\n\n  componentDidMount () {\n    this.installPlugin()\n  }\n\n  componentDidUpdate (prevProps) {\n    if (prevProps.uppy !== this.props.uppy) {\n      this.uninstallPlugin(prevProps)\n      this.installPlugin()\n    }\n    if (prevProps.open && !this.props.open) {\n      this.plugin.closeModal()\n    } else if (!prevProps.open && this.props.open) {\n      this.plugin.openModal()\n    }\n  }\n\n  componentWillUnmount () {\n    this.uninstallPlugin()\n  }\n\n  installPlugin () {\n    const { uppy } = this.props\n    const options = {\n      id: 'react:DashboardModal',\n      ...this.props,\n      onRequestCloseModal: this.props.onRequestClose,\n    }\n\n    if (!options.target) {\n      options.target = this.container\n    }\n\n    delete options.uppy\n    uppy.use(DashboardPlugin, options)\n\n    this.plugin = uppy.getPlugin(options.id)\n    if (this.props.open) {\n      this.plugin.openModal()\n    }\n  }\n\n  uninstallPlugin (props = this.props) {\n    const { uppy } = props\n\n    uppy.removePlugin(this.plugin)\n  }\n\n  render () {\n    return h('div', {\n      ref: (container) => {\n        this.container = container\n      },\n      ...this.validProps,\n    })\n  }\n}\n\nDashboardModal.propTypes = { // Only check this prop type in the browser.\n  target: typeof window !== 'undefined' ? PropTypes.instanceOf(window.HTMLElement) : PropTypes.any,\n  open: PropTypes.bool,\n  onRequestClose: PropTypes.func,\n  closeModalOnClickOutside: PropTypes.bool,\n  disablePageScrollWhenModalOpen: PropTypes.bool,\n  ...basePropTypes,\n}\n\nDashboardModal.defaultProps = {\n}\n\nmodule.exports = DashboardModal\n"]}