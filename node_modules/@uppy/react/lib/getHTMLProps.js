function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

// Attributes in the format of htmlAtrribute: reactAttribute
var possibleStandardNames = ['accept', 'acceptCharset', 'acceptCharset', 'accessKey', 'action', 'allowFullScreen', 'alt', 'as', 'async', 'autoCapitalize', 'autoComplete', 'autoCorrect', 'autoFocus', 'autoPlay', 'autoSave', 'capture', 'cellPadding', 'cellSpacing', 'challenge', 'charSet', 'checked', 'children', 'cite', 'className', 'classID', 'className', 'cols', 'colSpan', 'content', 'contentEditable', 'contextMenu', 'controls', 'controlsList', 'coords', 'crossOrigin', 'dangerouslySetInnerHTML', 'data', 'dateTime', 'default', 'defaultChecked', 'defaultValue', 'defer', 'dir', 'disabled', 'disablePictureInPicture', 'disableRemotePlayback', 'download', 'draggable', 'encType', 'enterKeyHint', 'htmlFor', 'form', 'formMethod', 'formAction', 'formEncType', 'formNoValidate', 'formTarget', 'frameBorder', 'headers', // 'height',
'hidden', 'high', 'href', 'hrefLang', 'htmlFor', 'httpEquiv', 'httpEquiv', 'icon', 'id', 'innerHTML', 'inputMode', 'integrity', 'is', 'itemID', 'itemProp', 'itemRef', 'itemScope', 'itemType', 'keyParams', 'keyType', 'kind', 'label', 'lang', 'list', 'loop', 'low', 'manifest', 'marginWidth', 'marginHeight', 'max', 'maxLength', 'media', 'mediaGroup', 'method', 'min', 'minLength', 'multiple', 'muted', 'name', 'noModule', 'nonce', 'noValidate', 'open', 'optimum', 'pattern', 'placeholder', 'playsInline', 'poster', 'preload', 'profile', 'radioGroup', 'readOnly', 'referrerPolicy', 'rel', 'required', 'reversed', 'role', 'rows', 'rowSpan', 'sandbox', 'scope', 'scoped', 'scrolling', 'seamless', 'selected', 'shape', 'size', 'sizes', 'span', 'spellCheck', 'src', 'srcDoc', 'srcLang', 'srcSet', 'start', 'step', 'style', 'summary', 'tabIndex', // 'target',
'title', 'type', 'useMap', 'value', // 'width',
'wmode', 'wrap']; // A decent polyfill for Object.entries for good browser support

var getEntries = function getEntries(object) {
  // eslint-disable-next-line compat/compat
  return Object.entries ? Object.entries(object) : Object.keys(object).map(function (key) {
    return [key, object[key]];
  });
};

var getHTMLProps = function getHTMLProps(props) {
  // Gets all the React props
  var reducer = function reducer(acc, _ref) {
    var _extends2;

    var key = _ref[0],
        value = _ref[1];
    return possibleStandardNames.includes(key) ? _extends({}, acc, (_extends2 = {}, _extends2[key] = value, _extends2)) : acc;
  };

  return getEntries(props).reduce(reducer, {});
};

module.exports = getHTMLProps;